Index: ios/Runner/Base.lproj/Main.storyboard
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/Base.lproj/Main.storyboard b/ios/Runner/Base.lproj/Main.storyboard
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/Base.lproj/Main.storyboard	
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="10117" systemVersion="15F34" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" initialViewController="BYZ-38-t0r">
+    <dependencies>
+        <deployment identifier="iOS"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="10085"/>
+    </dependencies>
+    <scenes>
+        <!--Flutter View Controller-->
+        <scene sceneID="tne-QT-ifu">
+            <objects>
+                <viewController id="BYZ-38-t0r" customClass="FlutterViewController" sceneMemberID="viewController">
+                    <layoutGuides>
+                        <viewControllerLayoutGuide type="top" id="y3c-jy-aDJ"/>
+                        <viewControllerLayoutGuide type="bottom" id="wfy-db-euE"/>
+                    </layoutGuides>
+                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
+                        <rect key="frame" x="0.0" y="0.0" width="600" height="600"/>
+                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="calibratedWhite"/>
+                    </view>
+                </viewController>
+                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
+            </objects>
+        </scene>
+    </scenes>
+</document>
Index: ios/Runner/Base.lproj/LaunchScreen.storyboard
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/Base.lproj/LaunchScreen.storyboard b/ios/Runner/Base.lproj/LaunchScreen.storyboard
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/Base.lproj/LaunchScreen.storyboard	
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="12121" systemVersion="16G29" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" colorMatched="YES" initialViewController="01J-lp-oVM">
+    <dependencies>
+        <deployment identifier="iOS"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="12089"/>
+    </dependencies>
+    <scenes>
+        <!--View Controller-->
+        <scene sceneID="EHf-IW-A2E">
+            <objects>
+                <viewController id="01J-lp-oVM" sceneMemberID="viewController">
+                    <layoutGuides>
+                        <viewControllerLayoutGuide type="top" id="Ydg-fD-yQy"/>
+                        <viewControllerLayoutGuide type="bottom" id="xbc-2k-c8Z"/>
+                    </layoutGuides>
+                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
+                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <subviews>
+                            <imageView opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" image="LaunchImage" translatesAutoresizingMaskIntoConstraints="NO" id="YRO-k0-Ey4">
+                            </imageView>
+                        </subviews>
+                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
+                        <constraints>
+                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerX" secondItem="Ze5-6b-2t3" secondAttribute="centerX" id="1a2-6s-vTC"/>
+                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerY" secondItem="Ze5-6b-2t3" secondAttribute="centerY" id="4X2-HB-R7a"/>
+                        </constraints>
+                    </view>
+                </viewController>
+                <placeholder placeholderIdentifier="IBFirstResponder" id="iYj-Kq-Ea1" userLabel="First Responder" sceneMemberID="firstResponder"/>
+            </objects>
+            <point key="canvasLocation" x="53" y="375"/>
+        </scene>
+    </scenes>
+    <resources>
+        <image name="LaunchImage" width="168" height="185"/>
+    </resources>
+</document>
Index: ios/Runner/Info.plist
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/Info.plist b/ios/Runner/Info.plist
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/Info.plist	
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>$(DEVELOPMENT_LANGUAGE)</string>
+	<key>CFBundleDisplayName</key>
+	<string>Finney</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIdentifier</key>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>finney</string>
+	<key>CFBundlePackageType</key>
+	<string>APPL</string>
+	<key>CFBundleShortVersionString</key>
+	<string>$(FLUTTER_BUILD_NAME)</string>
+	<key>CFBundleSignature</key>
+	<string>????</string>
+	<key>CFBundleVersion</key>
+	<string>$(FLUTTER_BUILD_NUMBER)</string>
+	<key>LSRequiresIPhoneOS</key>
+	<true/>
+	<key>UILaunchStoryboardName</key>
+	<string>LaunchScreen</string>
+	<key>UIMainStoryboardFile</key>
+	<string>Main</string>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UISupportedInterfaceOrientations~ipad</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationPortraitUpsideDown</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>CADisableMinimumFrameDurationOnPhone</key>
+	<true/>
+	<key>UIApplicationSupportsIndirectInputEvents</key>
+	<true/>
+</dict>
+</plist>
Index: ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json	
@@ -0,0 +1,122 @@
+{
+  "images" : [
+    {
+      "size" : "20x20",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-20x20@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "20x20",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-20x20@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-29x29@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-29x29@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-29x29@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-40x40@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-40x40@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "60x60",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-60x60@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "60x60",
+      "idiom" : "iphone",
+      "filename" : "Icon-App-60x60@3x.png",
+      "scale" : "3x"
+    },
+    {
+      "size" : "20x20",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-20x20@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "20x20",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-20x20@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-29x29@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "29x29",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-29x29@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-40x40@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "40x40",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-40x40@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "76x76",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-76x76@1x.png",
+      "scale" : "1x"
+    },
+    {
+      "size" : "76x76",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-76x76@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "83.5x83.5",
+      "idiom" : "ipad",
+      "filename" : "Icon-App-83.5x83.5@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "size" : "1024x1024",
+      "idiom" : "ios-marketing",
+      "filename" : "Icon-App-1024x1024@1x.png",
+      "scale" : "1x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
Index: ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md	
@@ -0,0 +1,5 @@
+# Launch Screen Assets
+
+You can customize the launch screen with your own desired assets by replacing the image files in this directory.
+
+You can also do it by opening your Flutter project's Xcode project with `open ios/Runner.xcworkspace`, selecting `Runner/Assets.xcassets` in the Project Navigator and dropping in the desired images.
\ No newline at end of file
Index: ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json	
@@ -0,0 +1,23 @@
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "LaunchImage.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "LaunchImage@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "LaunchImage@3x.png",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
Index: ios/Runner/AppDelegate.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/AppDelegate.swift b/ios/Runner/AppDelegate.swift
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/AppDelegate.swift	
@@ -0,0 +1,13 @@
+import Flutter
+import UIKit
+
+@main
+@objc class AppDelegate: FlutterAppDelegate {
+  override func application(
+    _ application: UIApplication,
+    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
+  ) -> Bool {
+    GeneratedPluginRegistrant.register(with: self)
+    return super.application(application, didFinishLaunchingWithOptions: launchOptions)
+  }
+}
Index: ios/Runner/Runner-Bridging-Header.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/Runner-Bridging-Header.h b/ios/Runner/Runner-Bridging-Header.h
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/Runner-Bridging-Header.h	
@@ -0,0 +1,1 @@
+#import "GeneratedPluginRegistrant.h"
Index: ios/Runner/GeneratedPluginRegistrant.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/GeneratedPluginRegistrant.h b/ios/Runner/GeneratedPluginRegistrant.h
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/GeneratedPluginRegistrant.h	
@@ -0,0 +1,19 @@
+//
+//  Generated file. Do not edit.
+//
+
+// clang-format off
+
+#ifndef GeneratedPluginRegistrant_h
+#define GeneratedPluginRegistrant_h
+
+#import <Flutter/Flutter.h>
+
+NS_ASSUME_NONNULL_BEGIN
+
+@interface GeneratedPluginRegistrant : NSObject
++ (void)registerWithRegistry:(NSObject<FlutterPluginRegistry>*)registry;
+@end
+
+NS_ASSUME_NONNULL_END
+#endif /* GeneratedPluginRegistrant_h */
Index: ios/Runner/GeneratedPluginRegistrant.m
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner/GeneratedPluginRegistrant.m b/ios/Runner/GeneratedPluginRegistrant.m
new file mode 100644
--- /dev/null	
+++ b/ios/Runner/GeneratedPluginRegistrant.m	
@@ -0,0 +1,112 @@
+//
+//  Generated file. Do not edit.
+//
+
+// clang-format off
+
+#import "GeneratedPluginRegistrant.h"
+
+#if __has_include(<cloud_firestore/FLTFirebaseFirestorePlugin.h>)
+#import <cloud_firestore/FLTFirebaseFirestorePlugin.h>
+#else
+@import cloud_firestore;
+#endif
+
+#if __has_include(<firebase_auth/FLTFirebaseAuthPlugin.h>)
+#import <firebase_auth/FLTFirebaseAuthPlugin.h>
+#else
+@import firebase_auth;
+#endif
+
+#if __has_include(<firebase_core/FLTFirebaseCorePlugin.h>)
+#import <firebase_core/FLTFirebaseCorePlugin.h>
+#else
+@import firebase_core;
+#endif
+
+#if __has_include(<flutter_inappwebview_ios/InAppWebViewFlutterPlugin.h>)
+#import <flutter_inappwebview_ios/InAppWebViewFlutterPlugin.h>
+#else
+@import flutter_inappwebview_ios;
+#endif
+
+#if __has_include(<flutter_localization/FlutterLocalizationPlugin.h>)
+#import <flutter_localization/FlutterLocalizationPlugin.h>
+#else
+@import flutter_localization;
+#endif
+
+#if __has_include(<flutter_tts/FlutterTtsPlugin.h>)
+#import <flutter_tts/FlutterTtsPlugin.h>
+#else
+@import flutter_tts;
+#endif
+
+#if __has_include(<google_sign_in_ios/FLTGoogleSignInPlugin.h>)
+#import <google_sign_in_ios/FLTGoogleSignInPlugin.h>
+#else
+@import google_sign_in_ios;
+#endif
+
+#if __has_include(<image_picker_ios/FLTImagePickerPlugin.h>)
+#import <image_picker_ios/FLTImagePickerPlugin.h>
+#else
+@import image_picker_ios;
+#endif
+
+#if __has_include(<path_provider_foundation/PathProviderPlugin.h>)
+#import <path_provider_foundation/PathProviderPlugin.h>
+#else
+@import path_provider_foundation;
+#endif
+
+#if __has_include(<shared_preferences_foundation/SharedPreferencesPlugin.h>)
+#import <shared_preferences_foundation/SharedPreferencesPlugin.h>
+#else
+@import shared_preferences_foundation;
+#endif
+
+#if __has_include(<speech_to_text/SpeechToTextPlugin.h>)
+#import <speech_to_text/SpeechToTextPlugin.h>
+#else
+@import speech_to_text;
+#endif
+
+#if __has_include(<sqflite_darwin/SqflitePlugin.h>)
+#import <sqflite_darwin/SqflitePlugin.h>
+#else
+@import sqflite_darwin;
+#endif
+
+#if __has_include(<url_launcher_ios/URLLauncherPlugin.h>)
+#import <url_launcher_ios/URLLauncherPlugin.h>
+#else
+@import url_launcher_ios;
+#endif
+
+#if __has_include(<video_player_avfoundation/FVPVideoPlayerPlugin.h>)
+#import <video_player_avfoundation/FVPVideoPlayerPlugin.h>
+#else
+@import video_player_avfoundation;
+#endif
+
+@implementation GeneratedPluginRegistrant
+
++ (void)registerWithRegistry:(NSObject<FlutterPluginRegistry>*)registry {
+  [FLTFirebaseFirestorePlugin registerWithRegistrar:[registry registrarForPlugin:@"FLTFirebaseFirestorePlugin"]];
+  [FLTFirebaseAuthPlugin registerWithRegistrar:[registry registrarForPlugin:@"FLTFirebaseAuthPlugin"]];
+  [FLTFirebaseCorePlugin registerWithRegistrar:[registry registrarForPlugin:@"FLTFirebaseCorePlugin"]];
+  [InAppWebViewFlutterPlugin registerWithRegistrar:[registry registrarForPlugin:@"InAppWebViewFlutterPlugin"]];
+  [FlutterLocalizationPlugin registerWithRegistrar:[registry registrarForPlugin:@"FlutterLocalizationPlugin"]];
+  [FlutterTtsPlugin registerWithRegistrar:[registry registrarForPlugin:@"FlutterTtsPlugin"]];
+  [FLTGoogleSignInPlugin registerWithRegistrar:[registry registrarForPlugin:@"FLTGoogleSignInPlugin"]];
+  [FLTImagePickerPlugin registerWithRegistrar:[registry registrarForPlugin:@"FLTImagePickerPlugin"]];
+  [PathProviderPlugin registerWithRegistrar:[registry registrarForPlugin:@"PathProviderPlugin"]];
+  [SharedPreferencesPlugin registerWithRegistrar:[registry registrarForPlugin:@"SharedPreferencesPlugin"]];
+  [SpeechToTextPlugin registerWithRegistrar:[registry registrarForPlugin:@"SpeechToTextPlugin"]];
+  [SqflitePlugin registerWithRegistrar:[registry registrarForPlugin:@"SqflitePlugin"]];
+  [URLLauncherPlugin registerWithRegistrar:[registry registrarForPlugin:@"URLLauncherPlugin"]];
+  [FVPVideoPlayerPlugin registerWithRegistrar:[registry registrarForPlugin:@"FVPVideoPlayerPlugin"]];
+}
+
+@end
Index: ios/Flutter/Debug.xcconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Flutter/Debug.xcconfig b/ios/Flutter/Debug.xcconfig
new file mode 100644
--- /dev/null	
+++ b/ios/Flutter/Debug.xcconfig	
@@ -0,0 +1,1 @@
+#include "Generated.xcconfig"
Index: ios/Flutter/Release.xcconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Flutter/Release.xcconfig b/ios/Flutter/Release.xcconfig
new file mode 100644
--- /dev/null	
+++ b/ios/Flutter/Release.xcconfig	
@@ -0,0 +1,1 @@
+#include "Generated.xcconfig"
Index: ios/Flutter/AppFrameworkInfo.plist
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Flutter/AppFrameworkInfo.plist b/ios/Flutter/AppFrameworkInfo.plist
new file mode 100644
--- /dev/null	
+++ b/ios/Flutter/AppFrameworkInfo.plist	
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+  <key>CFBundleDevelopmentRegion</key>
+  <string>en</string>
+  <key>CFBundleExecutable</key>
+  <string>App</string>
+  <key>CFBundleIdentifier</key>
+  <string>io.flutter.flutter.app</string>
+  <key>CFBundleInfoDictionaryVersion</key>
+  <string>6.0</string>
+  <key>CFBundleName</key>
+  <string>App</string>
+  <key>CFBundlePackageType</key>
+  <string>FMWK</string>
+  <key>CFBundleShortVersionString</key>
+  <string>1.0</string>
+  <key>CFBundleSignature</key>
+  <string>????</string>
+  <key>CFBundleVersion</key>
+  <string>1.0</string>
+  <key>MinimumOSVersion</key>
+  <string>12.0</string>
+</dict>
+</plist>
Index: ios/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/.gitignore b/ios/.gitignore
new file mode 100644
--- /dev/null	
+++ b/ios/.gitignore	
@@ -0,0 +1,34 @@
+**/dgph
+*.mode1v3
+*.mode2v3
+*.moved-aside
+*.pbxuser
+*.perspectivev3
+**/*sync/
+.sconsign.dblite
+.tags*
+**/.vagrant/
+**/DerivedData/
+Icon?
+**/Pods/
+**/.symlinks/
+profile
+xcuserdata
+**/.generated/
+Flutter/App.framework
+Flutter/Flutter.framework
+Flutter/Flutter.podspec
+Flutter/Generated.xcconfig
+Flutter/ephemeral/
+Flutter/app.flx
+Flutter/app.zip
+Flutter/flutter_assets/
+Flutter/flutter_export_environment.sh
+ServiceDefinitions.json
+Runner/GeneratedPluginRegistrant.*
+
+# Exceptions to above rules.
+!default.mode1v3
+!default.mode2v3
+!default.pbxuser
+!default.perspectivev3
Index: ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
--- /dev/null	
+++ b/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme	
@@ -0,0 +1,99 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1510"
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+               BuildableName = "Runner.app"
+               BlueprintName = "Runner"
+               ReferencedContainer = "container:Runner.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <MacroExpansion>
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+            BuildableName = "Runner.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </MacroExpansion>
+      <Testables>
+         <TestableReference
+            skipped = "NO"
+            parallelizable = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "331C8080294A63A400263BE5"
+               BuildableName = "RunnerTests.xctest"
+               BlueprintName = "RunnerTests"
+               ReferencedContainer = "container:Runner.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      enableGPUValidationMode = "1"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+            BuildableName = "Runner.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Profile"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+            BuildableName = "Runner.app"
+            BlueprintName = "Runner"
+            ReferencedContainer = "container:Runner.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
Index: ios/Runner.xcodeproj/project.pbxproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner.xcodeproj/project.pbxproj b/ios/Runner.xcodeproj/project.pbxproj
new file mode 100644
--- /dev/null	
+++ b/ios/Runner.xcodeproj/project.pbxproj	
@@ -0,0 +1,616 @@
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 54;
+	objects = {
+
+/* Begin PBXBuildFile section */
+		1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */ = {isa = PBXBuildFile; fileRef = 1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */; };
+		331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C807B294A618700263BE5 /* RunnerTests.swift */; };
+		3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */; };
+		74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 74858FAE1ED2DC5600515810 /* AppDelegate.swift */; };
+		97C146FC1CF9000F007C117D /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FA1CF9000F007C117D /* Main.storyboard */; };
+		97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FD1CF9000F007C117D /* Assets.xcassets */; };
+		97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXContainerItemProxy section */
+		331C8085294A63A400263BE5 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 97C146E61CF9000F007C117D /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 97C146ED1CF9000F007C117D;
+			remoteInfo = Runner;
+		};
+/* End PBXContainerItemProxy section */
+
+/* Begin PBXCopyFilesBuildPhase section */
+		9705A1C41CF9048500538489 /* Embed Frameworks */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 10;
+			files = (
+			);
+			name = "Embed Frameworks";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
+/* Begin PBXFileReference section */
+		1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = GeneratedPluginRegistrant.h; sourceTree = "<group>"; };
+		1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = GeneratedPluginRegistrant.m; sourceTree = "<group>"; };
+		331C807B294A618700263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
+		331C8081294A63A400263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
+		3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = AppFrameworkInfo.plist; path = Flutter/AppFrameworkInfo.plist; sourceTree = "<group>"; };
+		74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Runner-Bridging-Header.h"; sourceTree = "<group>"; };
+		74858FAE1ED2DC5600515810 /* AppDelegate.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
+		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = Release.xcconfig; path = Flutter/Release.xcconfig; sourceTree = "<group>"; };
+		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Debug.xcconfig; path = Flutter/Debug.xcconfig; sourceTree = "<group>"; };
+		9740EEB31CF90195004384FC /* Generated.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Generated.xcconfig; path = Flutter/Generated.xcconfig; sourceTree = "<group>"; };
+		97C146EE1CF9000F007C117D /* Runner.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Runner.app; sourceTree = BUILT_PRODUCTS_DIR; };
+		97C146FB1CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
+		97C146FD1CF9000F007C117D /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
+		97C147001CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
+		97C147021CF9000F007C117D /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		97C146EB1CF9000F007C117D /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		331C8082294A63A400263BE5 /* RunnerTests */ = {
+			isa = PBXGroup;
+			children = (
+				331C807B294A618700263BE5 /* RunnerTests.swift */,
+			);
+			path = RunnerTests;
+			sourceTree = "<group>";
+		};
+		9740EEB11CF90186004384FC /* Flutter */ = {
+			isa = PBXGroup;
+			children = (
+				3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */,
+				9740EEB21CF90195004384FC /* Debug.xcconfig */,
+				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
+				9740EEB31CF90195004384FC /* Generated.xcconfig */,
+			);
+			name = Flutter;
+			sourceTree = "<group>";
+		};
+		97C146E51CF9000F007C117D = {
+			isa = PBXGroup;
+			children = (
+				9740EEB11CF90186004384FC /* Flutter */,
+				97C146F01CF9000F007C117D /* Runner */,
+				97C146EF1CF9000F007C117D /* Products */,
+				331C8082294A63A400263BE5 /* RunnerTests */,
+			);
+			sourceTree = "<group>";
+		};
+		97C146EF1CF9000F007C117D /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				97C146EE1CF9000F007C117D /* Runner.app */,
+				331C8081294A63A400263BE5 /* RunnerTests.xctest */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		97C146F01CF9000F007C117D /* Runner */ = {
+			isa = PBXGroup;
+			children = (
+				97C146FA1CF9000F007C117D /* Main.storyboard */,
+				97C146FD1CF9000F007C117D /* Assets.xcassets */,
+				97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */,
+				97C147021CF9000F007C117D /* Info.plist */,
+				1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */,
+				1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */,
+				74858FAE1ED2DC5600515810 /* AppDelegate.swift */,
+				74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */,
+			);
+			path = Runner;
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXNativeTarget section */
+		331C8080294A63A400263BE5 /* RunnerTests */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
+			buildPhases = (
+				331C807D294A63A400263BE5 /* Sources */,
+				331C807F294A63A400263BE5 /* Resources */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				331C8086294A63A400263BE5 /* PBXTargetDependency */,
+			);
+			name = RunnerTests;
+			productName = RunnerTests;
+			productReference = 331C8081294A63A400263BE5 /* RunnerTests.xctest */;
+			productType = "com.apple.product-type.bundle.unit-test";
+		};
+		97C146ED1CF9000F007C117D /* Runner */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */;
+			buildPhases = (
+				9740EEB61CF901F6004384FC /* Run Script */,
+				97C146EA1CF9000F007C117D /* Sources */,
+				97C146EB1CF9000F007C117D /* Frameworks */,
+				97C146EC1CF9000F007C117D /* Resources */,
+				9705A1C41CF9048500538489 /* Embed Frameworks */,
+				3B06AD1E1E4923F5004D2608 /* Thin Binary */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+			);
+			name = Runner;
+			productName = Runner;
+			productReference = 97C146EE1CF9000F007C117D /* Runner.app */;
+			productType = "com.apple.product-type.application";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		97C146E61CF9000F007C117D /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				BuildIndependentTargetsInParallel = YES;
+				LastUpgradeCheck = 1510;
+				ORGANIZATIONNAME = "";
+				TargetAttributes = {
+					331C8080294A63A400263BE5 = {
+						CreatedOnToolsVersion = 14.0;
+						TestTargetID = 97C146ED1CF9000F007C117D;
+					};
+					97C146ED1CF9000F007C117D = {
+						CreatedOnToolsVersion = 7.3.1;
+						LastSwiftMigration = 1100;
+					};
+				};
+			};
+			buildConfigurationList = 97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */;
+			compatibilityVersion = "Xcode 9.3";
+			developmentRegion = en;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+				Base,
+			);
+			mainGroup = 97C146E51CF9000F007C117D;
+			productRefGroup = 97C146EF1CF9000F007C117D /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				97C146ED1CF9000F007C117D /* Runner */,
+				331C8080294A63A400263BE5 /* RunnerTests */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXResourcesBuildPhase section */
+		331C807F294A63A400263BE5 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		97C146EC1CF9000F007C117D /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */,
+				3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */,
+				97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */,
+				97C146FC1CF9000F007C117D /* Main.storyboard in Resources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXResourcesBuildPhase section */
+
+/* Begin PBXShellScriptBuildPhase section */
+		3B06AD1E1E4923F5004D2608 /* Thin Binary */ = {
+			isa = PBXShellScriptBuildPhase;
+			alwaysOutOfDate = 1;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+				"${TARGET_BUILD_DIR}/${INFOPLIST_PATH}",
+			);
+			name = "Thin Binary";
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" embed_and_thin";
+		};
+		9740EEB61CF901F6004384FC /* Run Script */ = {
+			isa = PBXShellScriptBuildPhase;
+			alwaysOutOfDate = 1;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+			);
+			name = "Run Script";
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" build";
+		};
+/* End PBXShellScriptBuildPhase section */
+
+/* Begin PBXSourcesBuildPhase section */
+		331C807D294A63A400263BE5 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		97C146EA1CF9000F007C117D /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */,
+				1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin PBXTargetDependency section */
+		331C8086294A63A400263BE5 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 97C146ED1CF9000F007C117D /* Runner */;
+			targetProxy = 331C8085294A63A400263BE5 /* PBXContainerItemProxy */;
+		};
+/* End PBXTargetDependency section */
+
+/* Begin PBXVariantGroup section */
+		97C146FA1CF9000F007C117D /* Main.storyboard */ = {
+			isa = PBXVariantGroup;
+			children = (
+				97C146FB1CF9000F007C117D /* Base */,
+			);
+			name = Main.storyboard;
+			sourceTree = "<group>";
+		};
+		97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */ = {
+			isa = PBXVariantGroup;
+			children = (
+				97C147001CF9000F007C117D /* Base */,
+			);
+			name = LaunchScreen.storyboard;
+			sourceTree = "<group>";
+		};
+/* End PBXVariantGroup section */
+
+/* Begin XCBuildConfiguration section */
+		249021D3217E4FDB00AE95B9 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = iphoneos;
+				SUPPORTED_PLATFORMS = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Profile;
+		};
+		249021D4217E4FDB00AE95B9 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
+				ENABLE_BITCODE = NO;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
+				SWIFT_VERSION = 5.0;
+				VERSIONING_SYSTEM = "apple-generic";
+			};
+			name = Profile;
+		};
+		331C8088294A63A400263BE5 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CODE_SIGN_STYLE = Automatic;
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
+			};
+			name = Debug;
+		};
+		331C8089294A63A400263BE5 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CODE_SIGN_STYLE = Automatic;
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
+			};
+			name = Release;
+		};
+		331C808A294A63A400263BE5 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CODE_SIGN_STYLE = Automatic;
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
+			};
+			name = Profile;
+		};
+		97C147031CF9000F007C117D /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = dwarf;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
+				MTL_ENABLE_DEBUG_INFO = YES;
+				ONLY_ACTIVE_ARCH = YES;
+				SDKROOT = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+			};
+			name = Debug;
+		};
+		97C147041CF9000F007C117D /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				IPHONEOS_DEPLOYMENT_TARGET = 12.0;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = iphoneos;
+				SUPPORTED_PLATFORMS = iphoneos;
+				SWIFT_COMPILATION_MODE = wholemodule;
+				SWIFT_OPTIMIZATION_LEVEL = "-O";
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Release;
+		};
+		97C147061CF9000F007C117D /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
+				ENABLE_BITCODE = NO;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
+				VERSIONING_SYSTEM = "apple-generic";
+			};
+			name = Debug;
+		};
+		97C147071CF9000F007C117D /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
+				ENABLE_BITCODE = NO;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/Frameworks",
+				);
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
+				SWIFT_VERSION = 5.0;
+				VERSIONING_SYSTEM = "apple-generic";
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				331C8088294A63A400263BE5 /* Debug */,
+				331C8089294A63A400263BE5 /* Release */,
+				331C808A294A63A400263BE5 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				97C147031CF9000F007C117D /* Debug */,
+				97C147041CF9000F007C117D /* Release */,
+				249021D3217E4FDB00AE95B9 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				97C147061CF9000F007C117D /* Debug */,
+				97C147071CF9000F007C117D /* Release */,
+				249021D4217E4FDB00AE95B9 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = 97C146E61CF9000F007C117D /* Project object */;
+}
Index: ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
--- /dev/null	
+++ b/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "self:">
+   </FileRef>
+</Workspace>
Index: ios/Runner.xcworkspace/contents.xcworkspacedata
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ios/Runner.xcworkspace/contents.xcworkspacedata b/ios/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
--- /dev/null	
+++ b/ios/Runner.xcworkspace/contents.xcworkspacedata	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "group:Runner.xcodeproj">
+   </FileRef>
+</Workspace>
Index: lib/core/network/no_internet_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/network/no_internet_screen.dart b/lib/core/network/no_internet_screen.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/network/no_internet_screen.dart	
@@ -0,0 +1,93 @@
+import 'package:flutter/material.dart';
+import 'package:finney/core/storage/storage_manager.dart';
+
+class InternetConnectionHandler extends StatelessWidget {
+  final Widget child;
+  final Widget? offlineWidget;
+  
+  const InternetConnectionHandler({
+    super.key,
+    required this.child,
+    this.offlineWidget,
+  });
+  
+  @override
+  Widget build(BuildContext context) {
+    return StreamBuilder<bool>(
+      stream: StorageManager().connectionStatus,
+      initialData: StorageManager().isConnected,
+      builder: (context, snapshot) {
+        final isConnected = snapshot.data ?? false;
+        
+        if (isConnected) {
+          return child;
+        } else {
+          return offlineWidget ?? _buildDefaultOfflineWidget(context);
+        }
+      },
+    );
+  }
+  
+  Widget _buildDefaultOfflineWidget(BuildContext context) {
+    return Scaffold(
+      body: Center(
+        child: Column(
+          mainAxisAlignment: MainAxisAlignment.center,
+          children: [
+            Icon(
+              Icons.signal_wifi_off,
+              size: 80.0,
+              color: Theme.of(context).primaryColor,
+            ),
+            const SizedBox(height: 24.0),
+            const Text(
+              'No Internet Connection',
+              style: TextStyle(
+                fontSize: 22.0,
+                fontWeight: FontWeight.bold,
+              ),
+              textAlign: TextAlign.center,
+            ),
+            const SizedBox(height: 16.0),
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 32.0),
+              child: Text(
+                'Please check your internet connection and try again.',
+                style: TextStyle(
+                  fontSize: 16.0,
+                  color: Colors.grey[700],
+                ),
+                textAlign: TextAlign.center,
+              ),
+            ),
+            const SizedBox(height: 32.0),
+            ElevatedButton(
+              onPressed: () {
+                ScaffoldMessenger.of(context).showSnackBar(
+                  const SnackBar(
+                    content: Text('Checking connection...'),
+                    duration: Duration(seconds: 1),
+                  ),
+                );
+              },
+              style: ElevatedButton.styleFrom(
+                backgroundColor: Theme.of(context).primaryColor,
+                padding: const EdgeInsets.symmetric(
+                  horizontal: 24.0,
+                  vertical: 12.0,
+                ),
+              ),
+              child: const Text(
+                'Try Again',
+                style: TextStyle(
+                  fontSize: 16.0,
+                  color: Colors.white,
+                ),
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/core/network/connectivity_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/network/connectivity_service.dart b/lib/core/network/connectivity_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/network/connectivity_service.dart	
@@ -0,0 +1,35 @@
+import 'dart:async';
+import 'package:internet_connection_checker/internet_connection_checker.dart';
+
+class ConnectivityService {
+  final InternetConnectionChecker _connectionChecker = InternetConnectionChecker();
+  bool _isConnected = false;
+  final StreamController<bool> _connectionStatusController = StreamController<bool>.broadcast();
+
+  ConnectivityService() {
+    _initConnectivity();
+    // Listen for changes in connectivity
+    _connectionChecker.onStatusChange.listen((status) {
+      _isConnected = status == InternetConnectionStatus.connected;
+      _connectionStatusController.add(_isConnected);
+    });
+  }
+
+  bool get isConnected => _isConnected;
+  Stream<bool> get connectionStatus => _connectionStatusController.stream;
+
+  Future<void> _initConnectivity() async {
+    _isConnected = await _connectionChecker.hasConnection;
+    _connectionStatusController.add(_isConnected);
+  }
+
+  Future<bool> checkConnectivity() async {
+    _isConnected = await _connectionChecker.hasConnection;
+    _connectionStatusController.add(_isConnected);
+    return _isConnected;
+  }
+
+  void dispose() {
+    _connectionStatusController.close();
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/models/user_model.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/models/user_model.dart b/lib/core/storage/cloud/models/user_model.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/models/user_model.dart	
@@ -0,0 +1,63 @@
+class UserModel {
+  final String id;
+  final String name;
+  final String email;
+  final String? phoneNumber;
+  final String? photoUrl;
+  final Map<String, dynamic>? preferences;
+  
+  UserModel({
+    required this.id,
+    required this.name,
+    required this.email,
+    this.phoneNumber,
+    this.photoUrl,
+    this.preferences,
+  });
+  
+  // Create a copy with some fields changed
+  UserModel copyWith({
+    String? name,
+    String? email,
+    String? phoneNumber,
+    String? photoUrl,
+    Map<String, dynamic>? preferences,
+  }) {
+    return UserModel(
+      id: id,
+      name: name ?? this.name,
+      email: email ?? this.email,
+      phoneNumber: phoneNumber ?? this.phoneNumber,
+      photoUrl: photoUrl ?? this.photoUrl,
+      preferences: preferences ?? this.preferences,
+    );
+  }
+  
+  // Convert to a map for Firestore
+  Map<String, dynamic> toMap() {
+    return {
+      'name': name,
+      'email': email,
+      'phoneNumber': phoneNumber,
+      'photoUrl': photoUrl,
+      'preferences': preferences,
+    };
+  }
+  
+  // Create from a Firestore document
+  static UserModel fromMap(String docId, Map<String, dynamic> map) {
+    return UserModel(
+      id: docId,
+      name: map['name'] ?? '',
+      email: map['email'] ?? '',
+      phoneNumber: map['phoneNumber'],
+      photoUrl: map['photoUrl'],
+      preferences: map['preferences'],
+    );
+  }
+  
+  @override
+  String toString() {
+    return 'UserModel(id: $id, name: $name, email: $email, phoneNumber: $phoneNumber, photoUrl: $photoUrl, preferences: $preferences)';
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/models/learning_model.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/models/learning_model.dart b/lib/core/storage/cloud/models/learning_model.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/models/learning_model.dart	
@@ -0,0 +1,105 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+
+class QuizResult {
+  final String? id;
+  final int score;
+  final int totalQuestions;
+  final DateTime timestamp;
+
+  QuizResult({
+    this.id,
+    required this.score,
+    required this.totalQuestions,
+    required this.timestamp,
+  });
+
+  // Create a copy with some fields updated
+  QuizResult copyWith({
+    String? id,
+    int? score,
+    int? totalQuestions,
+    DateTime? timestamp,
+  }) {
+    return QuizResult(
+      id: id ?? this.id,
+      score: score ?? this.score,
+      totalQuestions: totalQuestions ?? this.totalQuestions,
+      timestamp: timestamp ?? this.timestamp,
+    );
+  }
+  
+  // Convert to a map for Firestore
+  Map<String, dynamic> toMap() {
+    return {
+      'score': score,
+      'totalQuestions': totalQuestions,
+      'timestamp': timestamp,
+    };
+  }
+  
+  // Create from a Firestore document
+  static QuizResult fromMap(String docId, Map<String, dynamic> map) {
+    return QuizResult(
+      id: docId,
+      score: map['score'] ?? 0,
+      totalQuestions: map['totalQuestions'] ?? 0,
+      timestamp: (map['timestamp'] is Timestamp) 
+          ? (map['timestamp'] as Timestamp).toDate() 
+          : DateTime.parse(map['timestamp'] ?? DateTime.now().toIso8601String()),
+    );
+  }
+  
+  // Calculate percentage score
+  double get percentageScore {
+    if (totalQuestions == 0) return 0.0;
+    return (score / totalQuestions) * 100;
+  }
+  
+  @override
+  String toString() {
+    return 'QuizResult(id: $id, score: $score, totalQuestions: $totalQuestions, timestamp: $timestamp)';
+  }
+}
+
+class LessonProgress {
+  final String lessonKey;
+  final Map<String, bool> progress;
+  
+  LessonProgress({
+    required this.lessonKey,
+    required this.progress,
+  });
+  
+  // Convert to a map for Firestore
+  Map<String, dynamic> toMap() {
+    return {
+      'lessonKey': lessonKey,
+      'progress': progress,
+    };
+  }
+  
+  // Create from a Firestore document
+  static LessonProgress fromMap(Map<String, dynamic> map) {
+    return LessonProgress(
+      lessonKey: map['lessonKey'] ?? '',
+      progress: Map<String, bool>.from(map['progress'] ?? {}),
+    );
+  }
+  
+  // Check if a specific video is completed
+  bool isVideoCompleted(int videoIndex) {
+    return progress[videoIndex.toString()] ?? false;
+  }
+  
+  // Get completed count
+  int getCompletedCount(int totalVideos) {
+    return List.generate(totalVideos, (i) => i)
+        .where((index) => progress[index.toString()] == true)
+        .length;
+  }
+  
+  // Check if all videos are completed
+  bool isCompleted(int totalVideos) {
+    return getCompletedCount(totalVideos) == totalVideos;
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/models/saving_goal_model.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/models/saving_goal_model.dart b/lib/core/storage/cloud/models/saving_goal_model.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/models/saving_goal_model.dart	
@@ -0,0 +1,73 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+
+class SavingGoal {
+  final String id;
+  final String title;
+  final double targetAmount;
+  final double savedAmount;
+  final DateTime targetDate;
+  final String? description;
+  final DateTime createdAt;
+
+  SavingGoal({
+    required this.id,
+    required this.title,
+    required this.targetAmount,
+    required this.savedAmount,
+    required this.targetDate,
+    this.description,
+    required this.createdAt,
+  });
+
+  // Helper getters
+  double get progressPercentage => (savedAmount / targetAmount) * 100;
+  bool get isCompleted => savedAmount >= targetAmount;
+  int get daysRemaining => targetDate.difference(DateTime.now()).inDays;
+
+  // CopyWith method for immutability
+  SavingGoal copyWith({
+    String? id,
+    String? title,
+    double? targetAmount,
+    double? savedAmount,
+    DateTime? targetDate,
+    String? description,
+    DateTime? createdAt,
+  }) {
+    return SavingGoal(
+      id: id ?? this.id,
+      title: title ?? this.title,
+      targetAmount: targetAmount ?? this.targetAmount,
+      savedAmount: savedAmount ?? this.savedAmount,
+      targetDate: targetDate ?? this.targetDate,
+      description: description ?? this.description,
+      createdAt: createdAt ?? this.createdAt,
+    );
+  }
+
+  // Convert to Map for Firestore
+  Map<String, dynamic> toMap() {
+    return {
+      'id': id,
+      'title': title,
+      'targetAmount': targetAmount,
+      'savedAmount': savedAmount,
+      'targetDate': Timestamp.fromDate(targetDate),
+      'description': description,
+      'createdAt': Timestamp.fromDate(createdAt),
+    };
+  }
+
+  // Create from Firestore data
+  factory SavingGoal.fromMap(Map<String, dynamic> map) {
+    return SavingGoal(
+      id: map['id'] ?? '',
+      title: map['title'] ?? '',
+      targetAmount: (map['targetAmount'] ?? 0).toDouble(),
+      savedAmount: (map['savedAmount'] ?? 0).toDouble(),
+      targetDate: (map['targetDate'] as Timestamp).toDate(),
+      description: map['description'],
+      createdAt: (map['createdAt'] as Timestamp).toDate(),
+    );
+  }
+}
Index: lib/core/storage/cloud/models/transaction_model.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/models/transaction_model.dart b/lib/core/storage/cloud/models/transaction_model.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/models/transaction_model.dart	
@@ -0,0 +1,99 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/category.dart';
+
+class TransactionModel {
+  final String? id;
+  final String name;
+  final String category;
+  final double amount;
+  final DateTime date;
+  final String? description;
+
+  TransactionModel({
+    this.id,
+    required this.name,
+    required this.category,
+    required this.amount,
+    required this.date,
+    this.description,
+  });
+
+  // UI helper getters
+  IconData get icon => CategoryUtils.getIconForCategory(category);
+  Color get iconColor => CategoryUtils.getColorForCategory(category);
+  bool get isIncome => amount > 0;
+
+  // Database operations
+  Map<String, dynamic> toMap() {
+    return {
+      'name': name,
+      'category': category,
+      'amount': amount,
+      'date': date,
+      'description': description ?? '',
+    };
+  }
+
+  factory TransactionModel.fromMap(String docId, Map<String, dynamic> map) {
+    return TransactionModel(
+      id: docId,
+      name: map['name'] ?? '',
+      category: map['category'] ?? '',
+      amount: (map['amount'] ?? 0.0).toDouble(),
+      date: (map['date'] is Timestamp) 
+          ? (map['date'] as Timestamp).toDate()
+          : map['date'] ?? DateTime.now(),
+      description: map['description'],
+    );
+  }
+
+  TransactionModel copyWith({
+    String? id,
+    String? name,
+    String? category,
+    double? amount,
+    DateTime? date,
+    String? description,
+  }) {
+    return TransactionModel(
+      id: id ?? this.id,
+      name: name ?? this.name,
+      category: category ?? this.category,
+      amount: amount ?? this.amount,
+      date: date ?? this.date,
+      description: description ?? this.description,
+    );
+  }
+}
+
+// Analytics helper classes
+class WeeklyExpense {
+  final String day;
+  final double amount;
+
+  const WeeklyExpense(this.day, this.amount);
+}
+
+class CategoryExpense {
+  final String name;
+  final double amount;
+  final Color color;
+  final IconData icon;
+
+  CategoryExpense(this.name, this.amount)
+      : color = CategoryUtils.getColorForCategory(name),
+        icon = CategoryUtils.getIconForCategory(name);
+
+  String get category => name;
+}
+
+class MonthlyExpense {
+  final String month;
+  final double amount;
+
+  MonthlyExpense({
+    required this.month,
+    required this.amount,
+  });
+}
\ No newline at end of file
Index: lib/core/storage/cloud/models/chat_message_model.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/models/chat_message_model.dart b/lib/core/storage/cloud/models/chat_message_model.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/models/chat_message_model.dart	
@@ -0,0 +1,82 @@
+import 'package:dash_chat_2/dash_chat_2.dart';
+
+class ChatMessageModel {
+  final String text;
+  final DateTime createdAt;
+  final String userId;
+  final String userFirstName;
+  final String? mediaUrl;
+  final String role;
+
+  ChatMessageModel({
+    required this.text,
+    required this.createdAt,
+    required this.userId,
+    required this.userFirstName,
+    required this.role,
+    this.mediaUrl,
+  });
+
+  // Create from a Firebase document
+  factory ChatMessageModel.fromMap(Map<String, dynamic> data) {
+    DateTime createdAt;
+    if (data['createdAt'] is DateTime) {
+      createdAt = data['createdAt'] as DateTime;
+    } else if (data['createdAt']?.toDate != null) {
+      createdAt = data['createdAt'].toDate();
+    } else if (data['createdAt'] is String) {
+      createdAt = DateTime.parse(data['createdAt']);
+    } else {
+      createdAt = DateTime.now();
+    }
+    
+    return ChatMessageModel(
+      text: data['text'] ?? '',
+      createdAt: createdAt,
+      userId: data['userId'] ?? '',
+      userFirstName: data['userFirstName'] ?? '',
+      role: data['role'] ?? 'user',
+      mediaUrl: data['mediaUrl'],
+    );
+  }
+
+  // Convert to a map for Firebase storage
+  Map<String, dynamic> toMap() {
+    return {
+      'text': text,
+      'createdAt': createdAt,
+      'userId': userId,
+      'userFirstName': userFirstName,
+      'role': role,
+      if (mediaUrl != null) 'mediaUrl': mediaUrl,
+    };
+  }
+
+  // Create from a dash_chat ChatMessage
+  factory ChatMessageModel.fromChatMessage(ChatMessage message, {required String role}) {
+    return ChatMessageModel(
+      text: message.text,
+      createdAt: message.createdAt,
+      userId: message.user.id,
+      userFirstName: message.user.firstName ?? '',
+      role: role,
+      mediaUrl: message.medias?.firstOrNull?.url,
+    );
+  }
+
+  // Convert to a dash_chat ChatMessage
+  ChatMessage toChatMessage() {
+    return ChatMessage(
+      text: text,
+      createdAt: createdAt,
+      user: ChatUser(
+        id: userId,
+        firstName: userFirstName,
+      ),
+      medias: mediaUrl != null 
+          ? [ChatMedia(url: mediaUrl!, fileName: '', type: MediaType.image)]
+          : null,
+      customProperties: {'role': role},
+    );
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/service/setting_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/service/setting_service.dart b/lib/core/storage/cloud/service/setting_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/service/setting_service.dart	
@@ -0,0 +1,108 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+
+/// Service class to handle all user settings operations
+class UserSettingsService {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+  final FirebaseAuth _auth = FirebaseAuth.instance;
+  
+  // Get current user
+  User? get currentUser => _auth.currentUser;
+  
+  // Load user data from Firestore
+  Future<Map<String, dynamic>> loadUserData() async {
+    try {
+      final doc = await _firestore
+          .collection('users')
+          .doc(currentUser?.uid)
+          .get();
+          
+      if (doc.exists) {
+        return doc.data() ?? {};
+      } else {
+        // Create a new user document if it doesn't exist
+        final defaultData = {
+          'name': '',
+          'phone': '',
+          'address': '',
+          'email': currentUser?.email ?? '',
+          'textSize': 'Medium',
+          'language': await getLanguagePreference(),
+        };
+        
+        await _firestore
+            .collection('users')
+            .doc(currentUser?.uid)
+            .set(defaultData);
+            
+        return defaultData;
+      }
+    } catch (e) {
+      debugPrint('Error loading user data: $e');
+      return {};
+    }
+  }
+  
+  // Save user data to Firestore
+  Future<bool> saveUserData({
+    required String name,
+    required String phone,
+    required String address,
+    required String textSize,
+    required String language,
+  }) async {
+    try {
+      // Save language preference to SharedPreferences
+      final prefs = await SharedPreferences.getInstance();
+      String languageCode = language == 'English' ? 'en' : 'bn';
+      await prefs.setString('language', languageCode);
+      
+      // Update Firestore
+      await _firestore.collection('users').doc(currentUser?.uid).set({
+        'name': name,
+        'phone': phone,
+        'address': address,
+        'email': currentUser?.email ?? '',
+        'textSize': textSize,
+        'language': language,
+      }, SetOptions(merge: true));
+      
+      // Update app locale
+      FlutterLocalization.instance.translate(languageCode);
+      
+      return true;
+    } catch (e) {
+      debugPrint('Error saving user data: $e');
+      return false;
+    }
+  }
+  
+  // Get language preference from SharedPreferences
+  Future<String> getLanguagePreference() async {
+    final prefs = await SharedPreferences.getInstance();
+    final languageCode = prefs.getString('language') ?? 'en';
+    return languageCode == 'en' ? 'English' : 'Bengali';
+  }
+  
+  // Save security PIN
+  Future<bool> saveSecurityPin(String pin) async {
+    try {
+      await _firestore.collection('users').doc(currentUser?.uid).set(
+        {'pin': pin},
+        SetOptions(merge: true),
+      );
+      return true;
+    } catch (e) {
+      debugPrint('Error saving PIN: $e');
+      return false;
+    }
+  }
+  
+  // Sign out
+  Future<void> signOut() async {
+    await _auth.signOut();
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/service/chat_cloud_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/service/chat_cloud_service.dart b/lib/core/storage/cloud/service/chat_cloud_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/service/chat_cloud_service.dart	
@@ -0,0 +1,110 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:finney/core/storage/cloud/models/chat_message_model.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:flutter/foundation.dart';
+import 'package:finney/core/network/connectivity_service.dart';
+
+class ChatCloudService {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+  final FirebaseAuth _auth = FirebaseAuth.instance;
+  final ConnectivityService _connectivityService;
+  
+  // Constructor that accepts connectivity service
+  ChatCloudService({
+    required ConnectivityService connectivityService,
+  }) : _connectivityService = connectivityService;
+  
+  // Check internet connectivity
+  Future<void> _checkConnectivity() async {
+    if (!_connectivityService.isConnected) {
+      throw Exception('No internet connection available. Please check your connection and try again.');
+    }
+  }
+  
+  // Collection name for chat messages
+  static const String collectionName = 'chat_messages';
+
+  // Get the current user's chat messages collection reference
+  CollectionReference get _messagesCollection {
+    User? user = _auth.currentUser;
+    if (user == null) {
+      throw Exception('No authenticated user found');
+    }
+    return _firestore.collection('users').doc(user.uid).collection(collectionName);
+  }
+  
+  // Add a new chat message
+  Future<DocumentReference> addMessage(ChatMessageModel message) async {
+    try {
+      await _checkConnectivity();
+      
+      return await _messagesCollection.add(message.toMap());
+    } catch (e) {
+      debugPrint('Error adding message: $e');
+      rethrow;
+    }
+  }
+  
+  // Delete all chat messages (clear chat)
+  Future<void> clearChat() async {
+    try {
+      await _checkConnectivity();
+      
+      WriteBatch batch = _firestore.batch();
+      
+      QuerySnapshot snapshot = await _messagesCollection.get();
+      
+      for (var doc in snapshot.docs) {
+        batch.delete(doc.reference);
+      }
+      
+      await batch.commit();
+    } catch (e) {
+      debugPrint('Error clearing chat: $e');
+      rethrow;
+    }
+  }
+  
+  // Get all chat messages
+  Future<List<ChatMessageModel>> getAllMessages() async {
+    try {
+      await _checkConnectivity();
+      
+      QuerySnapshot snapshot = await _messagesCollection
+          .orderBy('createdAt', descending: true)
+          .get();
+          
+      return snapshot.docs.map((doc) {
+        final data = doc.data() as Map<String, dynamic>;
+        return ChatMessageModel.fromMap(data);
+      }).toList();
+    } catch (e) {
+      debugPrint('Error getting all messages: $e');
+      rethrow;
+    }
+  }
+  
+  // Stream messages
+  Stream<List<ChatMessageModel>> streamMessages() {
+    try {
+      if (!_connectivityService.isConnected) {
+        return Stream.error('No internet connection available.');
+      }
+      
+      return _messagesCollection
+          .orderBy('createdAt', descending: true)
+          .snapshots()
+          .map((snapshot) {
+            return snapshot.docs.map((doc) {
+              final data = doc.data() as Map<String, dynamic>;
+              return ChatMessageModel.fromMap(data);
+            }).toList();
+          });
+    } catch (e) {
+      debugPrint('Error streaming messages: $e');
+      return Stream.error(e);
+    }
+  }
+
+  
+}
\ No newline at end of file
Index: lib/core/storage/cloud/service/user_cloud_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/service/user_cloud_service.dart b/lib/core/storage/cloud/service/user_cloud_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/service/user_cloud_service.dart	
@@ -0,0 +1,331 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:finney/core/storage/cloud/models/user_model.dart';
+import 'package:flutter/foundation.dart';
+import 'package:finney/core/network/connectivity_service.dart';
+
+class UserCloudService {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+  final FirebaseAuth _auth = FirebaseAuth.instance;
+  final ConnectivityService _connectivityService;
+  
+  // Constructor that accepts connectivity service
+  UserCloudService({
+    required ConnectivityService connectivityService,
+  }) : _connectivityService = connectivityService;
+  
+  // Check internet connectivity
+  Future<void> _checkConnectivity() async {
+    if (!_connectivityService.isConnected) {
+      throw Exception('No internet connection available. Please check your connection and try again.');
+    }
+  }
+  
+  // Get current Firebase user
+  User? get currentUser => _auth.currentUser;
+  
+  // User document reference
+  DocumentReference get _userDocument {
+    User? user = currentUser;
+    if (user == null) {
+      throw Exception('No authenticated user found');
+    }
+    return _firestore.collection('users').doc(user.uid);
+  }
+  
+  // Get current user data
+  Future<UserModel?> getCurrentUser() async {
+    try {
+      await _checkConnectivity();
+      
+      DocumentSnapshot doc = await _userDocument.get();
+      
+      if (!doc.exists) {
+        return null;
+      }
+      
+      return UserModel.fromMap(doc.id, doc.data() as Map<String, dynamic>);
+    } catch (e) {
+      debugPrint('Error getting current user: $e');
+      rethrow;
+    }
+  }
+  
+  // Set or update the current user data
+  Future<void> setCurrentUser(UserModel user) async {
+    try {
+      await _checkConnectivity();
+      
+      await _userDocument.set(user.toMap(), SetOptions(merge: true));
+    } catch (e) {
+      debugPrint('Error setting current user: $e');
+      rethrow;
+    }
+  }
+  
+  // Get a stream of the current user data
+  Stream<UserModel?> streamCurrentUser() {
+    try {
+      if (!_connectivityService.isConnected) {
+        return Stream.error('No internet connection available.');
+      }
+      
+      return _userDocument.snapshots().map((doc) {
+        if (!doc.exists) {
+          return null;
+        }
+        
+        return UserModel.fromMap(doc.id, doc.data() as Map<String, dynamic>);
+      });
+    } catch (e) {
+      debugPrint('Error streaming current user: $e');
+      return Stream.error(e);
+    }
+  }
+  
+  // Update specific user fields
+  Future<void> updateUser(Map<String, dynamic> data) async {
+    try {
+      await _checkConnectivity();
+      
+      await _userDocument.update(data);
+    } catch (e) {
+      debugPrint('Error updating user: $e');
+      rethrow;
+    }
+  }
+  
+  // Update user name
+  Future<void> updateUserName(String name) async {
+    try {
+      await _checkConnectivity();
+      
+      await _userDocument.update({'name': name});
+      
+      // Also update Auth display name for consistency
+      if (currentUser != null) {
+        await currentUser!.updateDisplayName(name);
+      }
+    } catch (e) {
+      debugPrint('Error updating user name: $e');
+      rethrow;
+    }
+  }
+  
+  // Update user phone number
+  Future<void> updatePhoneNumber(String phoneNumber) async {
+    try {
+      await _checkConnectivity();
+      
+      await _userDocument.update({'phoneNumber': phoneNumber});
+    } catch (e) {
+      debugPrint('Error updating phone number: $e');
+      rethrow;
+    }
+  }
+  
+  // Update user photo URL
+  Future<void> updatePhotoUrl(String photoUrl) async {
+    try {
+      await _checkConnectivity();
+      
+      await _userDocument.update({'photoUrl': photoUrl});
+      
+      // Also update Auth photo URL for consistency
+      if (currentUser != null) {
+        await currentUser!.updatePhotoURL(photoUrl);
+      }
+    } catch (e) {
+      debugPrint('Error updating photo URL: $e');
+      rethrow;
+    }
+  }
+  
+  // Update user preferences
+  Future<void> updatePreferences(Map<String, dynamic> preferences) async {
+    try {
+      await _checkConnectivity();
+      
+      await _userDocument.update({'preferences': preferences});
+    } catch (e) {
+      debugPrint('Error updating preferences: $e');
+      rethrow;
+    }
+  }
+  
+  // Update a single preference
+  Future<void> updatePreference(String key, dynamic value) async {
+    try {
+      await _checkConnectivity();
+      
+      UserModel? user = await getCurrentUser();
+      if (user == null) {
+        throw Exception('User not found');
+      }
+      
+      Map<String, dynamic> preferences = user.preferences ?? {};
+      preferences[key] = value;
+      
+      await _userDocument.update({'preferences': preferences});
+    } catch (e) {
+      debugPrint('Error updating preference: $e');
+      rethrow;
+    }
+  }
+  
+  // Delete user account and data
+  Future<void> deleteUser(String password) async {
+    try {
+      await _checkConnectivity();
+      
+      // First reauthenticate the user
+      AuthCredential credential = EmailAuthProvider.credential(
+        email: currentUser!.email!,
+        password: password,
+      );
+      
+      await currentUser!.reauthenticateWithCredential(credential);
+      
+      // Delete user data from Firestore
+      await _userDocument.delete();
+      
+      // Delete user authentication
+      await currentUser!.delete();
+    } catch (e) {
+      debugPrint('Error deleting user: $e');
+      rethrow;
+    }
+  }
+  
+  // Check if user email is verified
+  bool get isEmailVerified => currentUser?.emailVerified ?? false;
+  
+  // Send email verification
+  Future<void> sendEmailVerification() async {
+    try {
+      await _checkConnectivity();
+      
+      await currentUser?.sendEmailVerification();
+    } catch (e) {
+      debugPrint('Error sending email verification: $e');
+      rethrow;
+    }
+  }
+  
+  // Change user email
+  Future<void> changeEmail(String newEmail, String password) async {
+    try {
+      await _checkConnectivity();
+      
+      // Reauthenticate the user first
+      AuthCredential credential = EmailAuthProvider.credential(
+        email: currentUser!.email!,
+        password: password,
+      );
+      
+      await currentUser!.reauthenticateWithCredential(credential);
+      
+      // Update email in Auth
+      await currentUser!.verifyBeforeUpdateEmail(newEmail);
+      
+      // Update email in Firestore
+      await _userDocument.update({'email': newEmail});
+    } catch (e) {
+      debugPrint('Error changing email: $e');
+      rethrow;
+    }
+  }
+  
+  // Change user password
+  Future<void> changePassword(String currentPassword, String newPassword) async {
+    try {
+      await _checkConnectivity();
+      
+      // Reauthenticate the user first
+      AuthCredential credential = EmailAuthProvider.credential(
+        email: currentUser!.email!,
+        password: currentPassword,
+      );
+      
+      await currentUser!.reauthenticateWithCredential(credential);
+      
+      // Update password
+      await currentUser!.updatePassword(newPassword);
+    } catch (e) {
+      debugPrint('Error changing password: $e');
+      rethrow;
+    }
+  }
+  
+  // Create a new user with email and password
+  Future<UserCredential> createUserWithEmailAndPassword(
+    String email, 
+    String password,
+    String name,
+  ) async {
+    try {
+      await _checkConnectivity();
+      
+      UserCredential credential = await _auth.createUserWithEmailAndPassword(
+        email: email,
+        password: password,
+      );
+      
+      // Update display name
+      await credential.user?.updateDisplayName(name);
+      
+      // Create initial user data in Firestore
+      UserModel newUser = UserModel(
+        id: credential.user!.uid,
+        name: name,
+        email: email,
+      );
+      
+      await _firestore.collection('users').doc(credential.user!.uid).set(newUser.toMap());
+      
+      return credential;
+    } catch (e) {
+      debugPrint('Error creating user: $e');
+      rethrow;
+    }
+  }
+  
+  // Sign in with email and password
+  Future<UserCredential> signInWithEmailAndPassword(String email, String password) async {
+    try {
+      await _checkConnectivity();
+      
+      return await _auth.signInWithEmailAndPassword(
+        email: email,
+        password: password,
+      );
+    } catch (e) {
+      debugPrint('Error signing in: $e');
+      rethrow;
+    }
+  }
+  
+  // Sign out
+  Future<void> signOut() async {
+    try {
+      await _checkConnectivity();
+      
+      await _auth.signOut();
+    } catch (e) {
+      debugPrint('Error signing out: $e');
+      rethrow;
+    }
+  }
+  
+  // Reset password
+  Future<void> resetPassword(String email) async {
+    try {
+      await _checkConnectivity();
+      
+      await _auth.sendPasswordResetEmail(email: email);
+    } catch (e) {
+      debugPrint('Error resetting password: $e');
+      rethrow;
+    }
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/service/saving_goal_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/service/saving_goal_service.dart b/lib/core/storage/cloud/service/saving_goal_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/service/saving_goal_service.dart	
@@ -0,0 +1,276 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:finney/core/storage/cloud/models/saving_goal_model.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/core/storage/storage_manager.dart'; 
+import 'package:flutter/material.dart'; 
+
+class SavingGoalService {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+  final FirebaseAuth _auth = FirebaseAuth.instance;
+  late final TransactionCloudService _transactionService;
+  
+  // Constructor with proper initialization
+  SavingGoalService() {
+    _transactionService = StorageManager().transactionService;
+  }
+
+  // Get the collection reference for the current user's goals
+  CollectionReference get _goalsCollection {
+    final user = _auth.currentUser;
+    if (user == null) {
+      throw Exception('User not authenticated');
+    }
+    return _firestore.collection('users/${user.uid}/goals');
+  }
+
+  // Add or update a goal (uses set with merge for both operations)
+  Future<void> saveGoal(SavingGoal goal) async {
+    try {
+      await _goalsCollection.doc(goal.id).set(goal.toMap());
+    } catch (e) {
+      debugPrint('Error saving goal: $e');
+      rethrow; // Rethrow to let the UI handle the error
+    }
+  }
+
+  // Rest of your methods remain the same, but now they'll be using the user-specific collection
+  // ...
+
+  // Update specific fields of a goal
+  Future<void> updateGoalFields({
+    required String goalId,
+    required Map<String, dynamic> fields,
+  }) async {
+    try {
+      await _goalsCollection.doc(goalId).update(fields);
+    } catch (e) {
+      debugPrint('Error updating goal fields: $e');
+      rethrow;
+    }
+  }
+
+  // Delete a goal
+  Future<void> deleteGoal(String goalId) async {
+    try {
+      await _goalsCollection.doc(goalId).delete();
+    } catch (e) {
+      debugPrint('Error deleting goal: $e');
+      rethrow;
+    }
+  }
+
+  // Get all goals ordered by creation date (newest first)
+  Stream<List<SavingGoal>> getGoals() {
+    try {
+      return _goalsCollection
+          .orderBy('createdAt', descending: true)
+          .snapshots()
+          .map(
+            (snapshot) =>
+                snapshot.docs
+                    .map(
+                      (doc) =>
+                          SavingGoal.fromMap(doc.data() as Map<String, dynamic>),
+                    )
+                    .toList(),
+          );
+    } catch (e) {
+      debugPrint('Error getting goals: $e');
+      // Return an empty stream if there's an error
+      return Stream.value([]);
+    }
+  }
+
+  // Get a single goal by ID
+  Future<SavingGoal?> getGoal(String goalId) async {
+    try {
+      final doc = await _goalsCollection.doc(goalId).get();
+      return doc.exists
+          ? SavingGoal.fromMap(doc.data() as Map<String, dynamic>)
+          : null;
+    } catch (e) {
+      debugPrint('Error getting goal: $e');
+      return null;
+    }
+  }
+
+  // Get goals that are not yet completed
+  Stream<List<SavingGoal>> getActiveGoals() {
+    try {
+      return _goalsCollection
+          .where('savedAmount', isLessThan: 'targetAmount') // Fixed comparison
+          .orderBy('savedAmount')
+          .orderBy('createdAt', descending: true)
+          .snapshots()
+          .map(
+            (snapshot) =>
+                snapshot.docs
+                    .map(
+                      (doc) =>
+                          SavingGoal.fromMap(doc.data() as Map<String, dynamic>),
+                    )
+                    .toList(),
+          );
+    } catch (e) {
+      debugPrint('Error getting active goals: $e');
+      return Stream.value([]);
+    }
+  }
+
+  // Get current balance from transactions
+  Future<double> getCurrentBalance() async {
+    try {
+      final transactions = await _transactionService.getAllTransactions();
+      return transactions.fold<double>(0.0, (total, transaction) => total + transaction.amount);
+    } catch (e) {
+      debugPrint('Error calculating current balance: $e');
+      return 0.0; // Default to zero if there's an error
+    }
+  }
+
+  // Add amount to savedAmount field with balance check
+  Future<bool> addToSavings(String goalId, double amount, BuildContext context) async {
+    try {
+      // Get current balance
+      final currentBalance = await getCurrentBalance();
+
+      // Check if there's enough balance
+      if (currentBalance < amount) {
+        if (context.mounted) {
+          AppSnackBar.showError(
+            context, 
+            message: 'Not enough balance to save this amount',
+          );
+        }
+        return false; // Not enough balance
+      }
+
+      // Get the goal document
+      final goalDoc = await _goalsCollection.doc(goalId).get();
+      if (!goalDoc.exists) {
+        if (context.mounted) {
+          AppSnackBar.showError(
+            context, 
+            message: 'Savings goal not found',
+          );
+        }
+        return false;
+      }
+      
+      final goal = SavingGoal.fromMap(goalDoc.data() as Map<String, dynamic>);
+
+      // Check if amount exceeds remaining target
+      final remainingAmount = goal.targetAmount - goal.savedAmount;
+      if (amount > remainingAmount) {
+        if (context.mounted) {
+          AppSnackBar.showError(
+            context, 
+            message: 'Amount exceeds remaining target. Maximum you can add is ${remainingAmount.toStringAsFixed(2)}',
+          );
+        }
+        return false;
+      }
+
+      // Create a transaction to deduct from balance
+      final transaction = TransactionModel(
+        name: 'Savings Transfer',
+        category: 'Savings',
+        amount: -amount, // Negative amount for expense
+        date: DateTime.now(),
+        description: 'Transfer to savings goal',
+      );
+
+      // Add the transaction first using core service
+      await _transactionService.addTransaction(transaction);
+
+      // Update the savings goal
+      await _goalsCollection.doc(goalId).update({
+        'savedAmount': FieldValue.increment(amount),
+        'lastContribution': DateTime.now().toIso8601String(),
+      });
+
+      if (context.mounted) {
+        AppSnackBar.showSuccess(
+          context, 
+          message: 'Successfully added to savings goal',
+        );
+      }
+      
+      return true; // Success
+    } catch (e) {
+      debugPrint('Error adding to savings: $e');
+      if (context.mounted) {
+        AppSnackBar.showError(
+          context, 
+          message: 'Failed to add to savings: ${e.toString()}',
+        );
+      }
+      return false; // Failed
+    }
+  }
+  
+  // Check if a goal is completed
+  Future<bool> isGoalCompleted(String goalId) async {
+    try {
+      final goal = await getGoal(goalId);
+      if (goal == null) return false;
+      
+      return goal.savedAmount >= goal.targetAmount;
+    } catch (e) {
+      debugPrint('Error checking goal completion: $e');
+      return false;
+    }
+  }
+  
+  // Complete a goal and return funds to balance
+  Future<bool> completeGoal(String goalId, BuildContext context) async {
+    try {
+      final goal = await getGoal(goalId);
+      if (goal == null) {
+        if (context.mounted) {
+          AppSnackBar.showError(context, message: 'Goal not found');
+        }
+        return false;
+      }
+      
+      // Create a transaction to add funds back to balance
+      final transaction = TransactionModel(
+        name: 'Savings Goal Completed',
+        category: 'Savings',
+        amount: goal.savedAmount, // Positive amount as income
+        date: DateTime.now(),
+        description: 'Completed savings goal',
+      );
+      
+      // Add the transaction
+      await _transactionService.addTransaction(transaction);
+      
+      // Update the goal as completed
+      await _goalsCollection.doc(goalId).update({
+        'isCompleted': true,
+        'completedAt': DateTime.now().toIso8601String(),
+      });
+      
+      if (context.mounted) {
+        AppSnackBar.showSuccess(
+          context, 
+          message: 'Congratulations! Savings goal completed!',
+        );
+      }
+      
+      return true;
+    } catch (e) {
+      debugPrint('Error completing goal: $e');
+      if (context.mounted) {
+        AppSnackBar.showError(
+          context, 
+          message: 'Failed to complete goal: ${e.toString()}',
+        );
+      }
+      return false;
+    }
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/service/learning_cloud_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/service/learning_cloud_service.dart b/lib/core/storage/cloud/service/learning_cloud_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/service/learning_cloud_service.dart	
@@ -0,0 +1,330 @@
+import 'package:finney/core/storage/cloud/models/learning_model.dart';
+import 'package:flutter/foundation.dart';
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:finney/core/network/connectivity_service.dart';
+class LearningCloudService {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+  final FirebaseAuth _auth = FirebaseAuth.instance;
+  final ConnectivityService _connectivityService;
+  
+  final String _progressCollection = 'learning_progress';
+  final String _quizResultCollection = 'quiz_results';
+  
+  // Constructor that accepts connectivity service
+  LearningCloudService({
+    required ConnectivityService connectivityService,
+    // This parameter is just for compatibility with StorageManager
+    dynamic cloudService,
+  }) : _connectivityService = connectivityService;
+  
+  // Check internet connectivity
+  Future<void> _checkConnectivity() async {
+    if (!_connectivityService.isConnected) {
+      throw Exception('No internet connection available. Please check your connection and try again.');
+    }
+  }
+  
+  // Get user-specific collection reference
+  CollectionReference _getUserCollection(String collection) {
+    User? user = _auth.currentUser;
+    if (user == null) {
+      throw Exception('No authenticated user found');
+    }
+    return _firestore.collection('users').doc(user.uid).collection(collection);
+  }
+  
+  // Learning progress methods
+  
+  // Get progress for a specific lesson
+  Future<Map<String, bool>> getLessonProgress(String lessonKey) async {
+    try {
+      await _checkConnectivity();
+      
+      final document = await _getUserCollection(_progressCollection).doc(lessonKey).get();
+      if (!document.exists) {
+        return {};
+      }
+      final data = document.data() as Map<String, dynamic>?;
+      return data != null 
+        ? Map<String, bool>.from(data['progress'] ?? {})
+        : {};
+    } catch (e) {
+      debugPrint('Error getting lesson progress: $e');
+      return {};
+    }
+  }
+  
+  // Mark a video as completed
+  Future<void> markVideoCompleted(String lessonKey, int videoIndex) async {
+    try {
+      await _checkConnectivity();
+      
+      final currentProgress = await getLessonProgress(lessonKey);
+      currentProgress[videoIndex.toString()] = true;
+      
+      await _getUserCollection(_progressCollection).doc(lessonKey).set(
+        {'progress': currentProgress},
+        SetOptions(merge: true),
+      );
+    } catch (e) {
+      debugPrint('Error marking video as completed: $e');
+      rethrow;
+    }
+  }
+  
+  // Check if a video is completed
+  Future<bool> isVideoCompleted(String lessonKey, int videoIndex) async {
+    try {
+      await _checkConnectivity();
+      
+      final progress = await getLessonProgress(lessonKey);
+      return progress[videoIndex.toString()] ?? false;
+    } catch (e) {
+      debugPrint('Error checking if video is completed: $e');
+      return false;
+    }
+  }
+  
+  // Get the count of completed videos in a lesson
+  Future<int> getCompletedCount(String lessonKey, int totalVideos) async {
+    try {
+      await _checkConnectivity();
+      
+      final progress = await getLessonProgress(lessonKey);
+      return List.generate(totalVideos, (i) => i)
+          .where((index) => progress[index.toString()] == true)
+          .length;
+    } catch (e) {
+      debugPrint('Error getting completed count: $e');
+      return 0;
+    }
+  }
+  
+  // Check if all videos in a lesson are completed
+  Future<bool> isLessonCompleted(String lessonKey, int totalVideos) async {
+    try {
+      await _checkConnectivity();
+      
+      final completed = await getCompletedCount(lessonKey, totalVideos);
+      return completed == totalVideos;
+    } catch (e) {
+      debugPrint('Error checking if lesson is completed: $e');
+      return false;
+    }
+  }
+  
+  // Stream progress for a specific lesson
+  Stream<Map<String, bool>> streamLessonProgress(String lessonKey) {
+    try {
+      if (!_connectivityService.isConnected) {
+        return Stream.error('No internet connection available.');
+      }
+      
+      return _getUserCollection(_progressCollection).doc(lessonKey)
+        .snapshots()
+        .map((doc) {
+          if (!doc.exists) {
+            return {};
+          }
+          final data = doc.data() as Map<String, dynamic>?;
+          return data != null 
+            ? Map<String, bool>.from(data['progress'] ?? {})
+            : {};
+        });
+    } catch (e) {
+      debugPrint('Error streaming lesson progress: $e');
+      return Stream.value({});
+    }
+  }
+
+    // Reset progress for multiple lessons
+  Future<void> resetAllLessons(List<String> lessonKeys) async {
+    await _checkConnectivity();
+    
+    try {
+      final user = _auth.currentUser;
+      if (user == null) throw Exception('User not authenticated');
+      
+      // Use a batch write for efficiency
+      final batch = _firestore.batch();
+      
+      for (final key in lessonKeys) {
+        final docRef = _firestore
+            .collection('users')
+            .doc(user.uid)
+            .collection(_progressCollection)
+            .doc(key);
+            
+        batch.set(docRef, {'progress': {}});
+      }
+      
+      await batch.commit();
+    } catch (e) {
+      debugPrint('Error resetting lesson progress: $e');
+      rethrow;
+    }
+  }
+  
+  // Quiz results methods
+  
+  // Save a quiz result
+  Future<void> saveQuizResult(QuizResult result) async {
+    try {
+      await _checkConnectivity();
+      
+      await _getUserCollection(_quizResultCollection).add(result.toMap());
+    } catch (e) {
+      debugPrint('Error saving quiz result: $e');
+      rethrow;
+    }
+  }
+  
+  // Get all quiz results
+  Future<List<QuizResult>> getAllQuizResults() async {
+    try {
+      await _checkConnectivity();
+      
+      final snapshot = await _getUserCollection(_quizResultCollection)
+          .orderBy('timestamp', descending: true)
+          .get();
+      
+      return snapshot.docs.map((doc) {
+        return QuizResult.fromMap(
+          doc.id, 
+          doc.data() as Map<String, dynamic>
+        );
+      }).toList();
+    } catch (e) {
+      debugPrint('Error getting all quiz results: $e');
+      return [];
+    }
+  }
+  
+  // Get quiz summary statistics
+  Future<Map<String, dynamic>> getQuizSummary() async {
+    try {
+      await _checkConnectivity();
+      
+      final results = await getAllQuizResults();
+      
+      if (results.isEmpty) {
+        return {'total': 0, 'average': 0.0, 'last': null};
+      }
+      
+      int totalAttempts = results.length;
+      double totalScore = results.fold(0.0, (accumulator, result) {
+        return accumulator + result.percentageScore;
+      });
+      DateTime latestAttempt = results
+          .map((result) => result.timestamp)
+          .reduce((a, b) => a.isAfter(b) ? a : b);
+      
+      return {
+        'total': totalAttempts,
+        'average': totalScore / totalAttempts,
+        'last': latestAttempt.toIso8601String(),
+      };
+    } catch (e) {
+      debugPrint('Error getting quiz summary: $e');
+      return {'total': 0, 'average': 0.0, 'last': null};
+    }
+  }
+  
+  // Clear all quiz results
+  Future<void> clearQuizResults() async {
+    try {
+      await _checkConnectivity();
+      
+      // Get all documents and delete them in a batch
+      final snapshot = await _getUserCollection(_quizResultCollection).get();
+      
+      // Use a batched write for better performance
+      final batch = _firestore.batch();
+      for (var doc in snapshot.docs) {
+        batch.delete(doc.reference);
+      }
+      
+      await batch.commit();
+    } catch (e) {
+      debugPrint('Error clearing quiz results: $e');
+      rethrow;
+    }
+  }
+  
+  // Get a quiz result by ID
+  Future<QuizResult?> getQuizResult(String id) async {
+    try {
+      await _checkConnectivity();
+      
+      final doc = await _getUserCollection(_quizResultCollection).doc(id).get();
+      
+      if (!doc.exists) {
+        return null;
+      }
+      
+      return QuizResult.fromMap(doc.id, doc.data() as Map<String, dynamic>);
+    } catch (e) {
+      debugPrint('Error getting quiz result: $e');
+      return null;
+    }
+  }
+  
+  // Delete a specific quiz result
+  Future<void> deleteQuizResult(String id) async {
+    try {
+      await _checkConnectivity();
+      
+      await _getUserCollection(_quizResultCollection).doc(id).delete();
+    } catch (e) {
+      debugPrint('Error deleting quiz result: $e');
+      rethrow;
+    }
+  }
+  
+  // Stream all quiz results
+  Stream<List<QuizResult>> streamQuizResults() {
+    try {
+      if (!_connectivityService.isConnected) {
+        return Stream.error('No internet connection available.');
+      }
+      
+      return _getUserCollection(_quizResultCollection)
+          .orderBy('timestamp', descending: true)
+          .snapshots()
+          .map((snapshot) {
+            return snapshot.docs.map((doc) {
+              return QuizResult.fromMap(
+                doc.id, 
+                doc.data() as Map<String, dynamic>
+              );
+            }).toList();
+          });
+    } catch (e) {
+      debugPrint('Error streaming quiz results: $e');
+      return Stream.value([]);
+    }
+  }
+  
+  // Get recent quiz results (limited number)
+  Future<List<QuizResult>> getRecentQuizResults(int limit) async {
+    try {
+      await _checkConnectivity();
+      
+      final snapshot = await _getUserCollection(_quizResultCollection)
+          .orderBy('timestamp', descending: true)
+          .limit(limit)
+          .get();
+      
+      return snapshot.docs.map((doc) {
+        return QuizResult.fromMap(
+          doc.id, 
+          doc.data() as Map<String, dynamic>
+        );
+      }).toList();
+    } catch (e) {
+      debugPrint('Error getting recent quiz results: $e');
+      return [];
+    }
+  }
+}
\ No newline at end of file
Index: lib/core/storage/cloud/service/transaction_cloud_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/cloud/service/transaction_cloud_service.dart b/lib/core/storage/cloud/service/transaction_cloud_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/cloud/service/transaction_cloud_service.dart	
@@ -0,0 +1,330 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+import 'package:finney/core/network/connectivity_service.dart';
+
+class TransactionCloudService {
+  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
+  final FirebaseAuth _auth = FirebaseAuth.instance;
+  final ConnectivityService _connectivityService;
+  
+  // Constructor that accepts connectivity service
+  TransactionCloudService({
+    required ConnectivityService connectivityService,
+  }) : _connectivityService = connectivityService;
+  
+  // Check internet connectivity
+  Future<void> _checkConnectivity() async {
+    if (!_connectivityService.isConnected) {
+      throw Exception('No internet connection available. Please check your connection and try again.');
+    }
+  }
+
+  // Get the current user's transactions collection reference
+  CollectionReference get _transactionsCollection {
+    User? user = _auth.currentUser;
+    if (user == null) {
+      throw Exception('No authenticated user found');
+    }
+    return _firestore.collection('users').doc(user.uid).collection('transactions');
+  }
+
+  // Add a new transaction
+  Future<void> addTransaction(TransactionModel transaction) async {
+    try {
+      await _checkConnectivity();
+      
+      User? user = _auth.currentUser;
+      if (user == null) {
+        throw Exception('No authenticated user found');
+      }
+
+      await _transactionsCollection.add(transaction.toMap());
+    } catch (e) {
+      debugPrint('Error adding transaction: $e');
+      rethrow;
+    }
+  }
+
+  // Get all transactions for the current user
+  Stream<List<TransactionModel>> getTransactions() {
+    try {
+      if (!_connectivityService.isConnected) {
+        return Stream.error('No internet connection available.');
+      }
+      
+      return _transactionsCollection
+          .orderBy('date', descending: true)
+          .snapshots()
+          .map((snapshot) {
+        return snapshot.docs.map((doc) {
+          return TransactionModel.fromMap(doc.id, doc.data() as Map<String, dynamic>);
+        }).toList();
+      });
+    } catch (e) {
+      debugPrint('Error getting transactions stream: $e');
+      return Stream.error(e);
+    }
+  }
+
+  // Get current month's income
+  Future<double> getCurrentMonthIncome() async {
+    try {
+      await _checkConnectivity();
+      
+      User? user = _auth.currentUser;
+      if (user == null) {
+        throw Exception('No authenticated user found');
+      }
+
+      DateTime now = DateTime.now();
+      DateTime firstDayOfMonth = DateTime(now.year, now.month, 1);
+      DateTime lastDayOfMonth = DateTime(now.year, now.month + 1, 0, 23, 59, 59);
+
+      QuerySnapshot snapshot = await _firestore
+          .collection('users')
+          .doc(user.uid)
+          .collection('transactions')
+          .where('date', isGreaterThanOrEqualTo: firstDayOfMonth)
+          .where('date', isLessThanOrEqualTo: lastDayOfMonth)
+          .where('amount', isGreaterThan: 0)
+          .get();
+
+      return snapshot.docs.fold<double>(0.0, (incomeSum, doc) {
+        final data = doc.data() as Map<String, dynamic>;
+        return incomeSum + (data['amount'] as num).toDouble();
+      });
+    } catch (e) {
+      debugPrint('Error getting current month income: $e');
+      rethrow;
+    }
+  }
+
+  // Get current month's expenses
+  Future<double> getCurrentMonthExpenses() async {
+    try {
+      await _checkConnectivity();
+      
+      User? user = _auth.currentUser;
+      if (user == null) {
+        throw Exception('No authenticated user found');
+      }
+
+      DateTime now = DateTime.now();
+      DateTime firstDayOfMonth = DateTime(now.year, now.month, 1);
+      DateTime lastDayOfMonth = DateTime(now.year, now.month + 1, 0, 23, 59, 59);
+
+      QuerySnapshot snapshot = await _firestore
+          .collection('users')
+          .doc(user.uid)
+          .collection('transactions')
+          .where('date', isGreaterThanOrEqualTo: firstDayOfMonth)
+          .where('date', isLessThanOrEqualTo: lastDayOfMonth)
+          .where('amount', isLessThan: 0)
+          .get();
+
+      return snapshot.docs.fold<double>(0.0, (expenseSum, doc) {
+        final data = doc.data() as Map<String, dynamic>;
+        return expenseSum + (data['amount'] as num).abs().toDouble();
+      });
+    } catch (e) {
+      debugPrint('Error getting current month expenses: $e');
+      rethrow;
+    }
+  }
+
+  // Get weekly expenses
+  Future<List<WeeklyExpense>> getWeeklyExpenses() async {
+    try {
+      await _checkConnectivity();
+      
+      User? user = _auth.currentUser;
+      if (user == null) {
+        throw Exception('No authenticated user found');
+      }
+
+      DateTime now = DateTime.now();
+      DateTime startOfWeek = now.subtract(Duration(days: now.weekday - 1));
+      DateTime endOfWeek = startOfWeek.add(const Duration(days: 6));
+
+      QuerySnapshot snapshot = await _firestore
+          .collection('users')
+          .doc(user.uid)
+          .collection('transactions')
+          .where('date', isGreaterThanOrEqualTo: startOfWeek)
+          .where('date', isLessThanOrEqualTo: endOfWeek)
+          .where('amount', isLessThan: 0)
+          .get();
+
+      List<String> dayNames = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
+      Map<String, double> dayTotals = {for (var day in dayNames) day: 0.0};
+
+      for (var doc in snapshot.docs) {
+        final data = doc.data() as Map<String, dynamic>;
+        DateTime txDate = (data['date'] as Timestamp).toDate();
+        String dayName = dayNames[txDate.weekday - 1];
+        dayTotals[dayName] = (dayTotals[dayName] ?? 0) + (data['amount'] as num).abs().toDouble();
+      }
+
+      return dayNames
+          .map((day) => WeeklyExpense(day, dayTotals[day] ?? 0.0))
+          .toList();
+    } catch (e) {
+      debugPrint('Error getting weekly expenses: $e');
+      rethrow;
+    }
+  }
+
+  // Get category expenses
+  Future<List<CategoryExpense>> getCategoryExpenses() async {
+    try {
+      await _checkConnectivity();
+      
+      User? user = _auth.currentUser;
+      if (user == null) {
+        throw Exception('No authenticated user found');
+      }
+
+      DateTime now = DateTime.now();
+      DateTime firstDayOfMonth = DateTime(now.year, now.month, 1);
+      DateTime lastDayOfMonth = DateTime(now.year, now.month + 1, 0, 23, 59, 59);
+
+      QuerySnapshot snapshot = await _firestore
+          .collection('users')
+          .doc(user.uid)
+          .collection('transactions')
+          .where('date', isGreaterThanOrEqualTo: firstDayOfMonth)
+          .where('date', isLessThanOrEqualTo: lastDayOfMonth)
+          .where('amount', isLessThan: 0)
+          .get();
+
+      Map<String, double> categoryTotals = {};
+
+      for (var doc in snapshot.docs) {
+        final data = doc.data() as Map<String, dynamic>;
+        String category = data['category'];
+        double amount = (data['amount'] as num).abs().toDouble();
+
+        categoryTotals[category] = (categoryTotals[category] ?? 0) + amount;
+      }
+
+      return categoryTotals.entries
+          .map((entry) => CategoryExpense(entry.key, entry.value))
+          .toList();
+    } catch (e) {
+      debugPrint('Error getting category expenses: $e');
+      rethrow;
+    }
+  }
+
+  // Delete a transaction
+  Future<void> deleteTransaction(String transactionId) async {
+    try {
+      await _checkConnectivity();
+      await _transactionsCollection.doc(transactionId).delete();
+    } catch (e) {
+      debugPrint('Error deleting transaction: $e');
+      rethrow;
+    }
+  }
+
+  // Update a transaction
+  Future<void> updateTransaction(TransactionModel transaction) async {
+    try {
+      await _checkConnectivity();
+      
+      if (transaction.id == null) {
+        throw ArgumentError('Transaction must have an ID to be updated');
+      }
+
+      await _transactionsCollection.doc(transaction.id).update(transaction.toMap());
+    } catch (e) {
+      debugPrint('Error updating transaction: $e');
+      rethrow;
+    }
+  }
+
+  // Get monthly expenses for the last 6 months
+  Future<List<MonthlyExpense>> getMonthlyExpenses() async {
+    try {
+      await _checkConnectivity();
+      
+      User? user = _auth.currentUser;
+      if (user == null) {
+        throw Exception('No authenticated user found');
+      }
+
+      DateTime now = DateTime.now();
+      List<MonthlyExpense> monthlyExpenses = [];
+
+      for (int i = 0; i < 6; i++) {
+        DateTime firstDayOfMonth = DateTime(now.year, now.month - i, 1);
+        DateTime lastDayOfMonth = DateTime(now.year, now.month - i + 1, 0, 23, 59, 59);
+
+        QuerySnapshot snapshot = await _firestore
+            .collection('users')
+            .doc(user.uid)
+            .collection('transactions')
+            .where('date', isGreaterThanOrEqualTo: firstDayOfMonth)
+            .where('date', isLessThanOrEqualTo: lastDayOfMonth)
+            .where('amount', isLessThan: 0)
+            .get();
+
+        double totalExpense = snapshot.docs.fold<double>(0.0, (total, doc) {
+          final data = doc.data() as Map<String, dynamic>;
+          return total + (data['amount'] as num).abs().toDouble();
+        });
+
+        String monthName = DateFormat('MMM').format(firstDayOfMonth);
+        monthlyExpenses.add(MonthlyExpense(month: monthName, amount: totalExpense));
+      }
+
+      return monthlyExpenses.reversed.toList();
+    } catch (e) {
+      debugPrint('Error getting monthly expenses: $e');
+      rethrow;
+    }
+  }
+  
+  // Get all transactions (for use by RAG service)
+  Future<List<TransactionModel>> getAllTransactions() async {
+    try {
+      await _checkConnectivity();
+      
+      QuerySnapshot snapshot = await _transactionsCollection
+          .orderBy('date', descending: true)
+          .get();
+          
+      return snapshot.docs.map((doc) {
+        return TransactionModel.fromMap(doc.id, doc.data() as Map<String, dynamic>);
+      }).toList();
+    } catch (e) {
+      debugPrint('Error getting all transactions: $e');
+      rethrow;
+    }
+  }
+  
+  // Get transaction by ID
+  Future<TransactionModel?> getTransaction(String id) async {
+    try {
+      await _checkConnectivity();
+      
+      if (id.isEmpty) {
+        throw ArgumentError('Transaction ID cannot be empty');
+      }
+      
+      DocumentSnapshot doc = await _transactionsCollection.doc(id).get();
+      
+      if (!doc.exists) {
+        return null;
+      }
+      
+      return TransactionModel.fromMap(doc.id, doc.data() as Map<String, dynamic>);
+    } catch (e) {
+      debugPrint('Error getting transaction: $e');
+      rethrow;
+    }
+  }
+}
\ No newline at end of file
Index: lib/core/storage/storage_manager.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/core/storage/storage_manager.dart b/lib/core/storage/storage_manager.dart
new file mode 100644
--- /dev/null	
+++ b/lib/core/storage/storage_manager.dart	
@@ -0,0 +1,59 @@
+import 'package:finney/core/network/connectivity_service.dart';
+import 'package:finney/core/storage/cloud/service/chat_cloud_service.dart';
+import 'package:finney/core/storage/cloud/service/user_cloud_service.dart';
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/core/storage/cloud/service/learning_cloud_service.dart';
+
+/// StorageManager is a singleton class that manages all storage services
+/// and provides a unified access point to them.
+class StorageManager {
+  // Singleton instance
+  static final StorageManager _instance = StorageManager._internal();
+  factory StorageManager() => _instance;
+  
+  StorageManager._internal();
+  
+  // Core services
+  late final ConnectivityService connectivityService;
+  
+  // Cloud services
+  late final ChatCloudService chatCloudService;
+  late final UserCloudService userCloudService;
+  late final TransactionCloudService transactionService;
+  late final LearningCloudService learningService;
+  
+  bool _initialized = false;
+  
+  /// Initialize all services
+  Future<void> initialize() async {
+    if (_initialized) return;
+    
+    // Initialize core services
+    connectivityService = ConnectivityService();
+    
+    // Initialize cloud services with connectivity checks
+    chatCloudService = ChatCloudService(
+      connectivityService: connectivityService
+    );
+    
+    userCloudService = UserCloudService(
+      connectivityService: connectivityService
+    );
+    
+    transactionService = TransactionCloudService(
+      connectivityService: connectivityService
+    );
+    
+    learningService = LearningCloudService(
+      connectivityService: connectivityService
+    );
+    
+    _initialized = true;
+  }
+  
+  /// Check if we're connected to the internet
+  bool get isConnected => connectivityService.isConnected;
+  
+  /// Stream of connectivity status changes
+  Stream<bool> get connectionStatus => connectivityService.connectionStatus;
+}
\ No newline at end of file
Index: lib/pages/1-auth/widgets/my_button.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/1-auth/widgets/my_button.dart b/lib/pages/1-auth/widgets/my_button.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/1-auth/widgets/my_button.dart	
@@ -0,0 +1,37 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter/material.dart';
+
+class MyButton extends StatelessWidget {
+  final Function()? onTap;
+  final String text;
+  final Color? backgroundColor;
+  final Color? textColor;
+
+  const MyButton({super.key, required this.onTap, required this.text, this.backgroundColor,
+    this.textColor,});
+
+  @override
+  Widget build(BuildContext context) {
+    return GestureDetector(
+      onTap: onTap,
+      child: Container(
+        padding: const EdgeInsets.all(25),
+        margin: const EdgeInsets.symmetric(horizontal: 25),
+        decoration: BoxDecoration(
+          color: AppColors.primary,
+          borderRadius: BorderRadius.circular(8),
+        ),
+        child: Center(
+          child: Text(
+            text,
+            style: TextStyle(
+              color: Colors.white,
+              fontWeight: FontWeight.bold,
+              fontSize: 16,
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
Index: lib/pages/1-auth/widgets/my_textfield.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/1-auth/widgets/my_textfield.dart b/lib/pages/1-auth/widgets/my_textfield.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/1-auth/widgets/my_textfield.dart	
@@ -0,0 +1,44 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter/material.dart';
+
+class MyTextField extends StatelessWidget {
+  final TextEditingController controller;
+  final String hintText;
+  final bool obscureText;
+  final Function(String)? onChanged;
+  final Widget? suffixIcon;
+
+  const MyTextField({
+    super.key,
+    required this.controller,
+    required this.hintText,
+    required this.obscureText,
+    this.onChanged,
+    this.suffixIcon,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Padding(
+      padding: const EdgeInsets.symmetric(horizontal: 25.0),
+      child: TextField(
+        controller: controller,
+        obscureText: obscureText,
+        onChanged: onChanged, 
+        decoration: InputDecoration(
+          enabledBorder: const OutlineInputBorder(
+            borderSide: BorderSide(color: AppColors.softGray),
+          ),
+          focusedBorder: OutlineInputBorder(
+            borderSide: BorderSide(color: AppColors.darkBlue),
+          ),
+          fillColor: Colors.white,
+          filled: true,
+          hintText: hintText,
+          hintStyle: TextStyle(color: AppColors.blurGray),
+          suffixIcon: suffixIcon, 
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/1-auth/presentation/login_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/1-auth/presentation/login_page.dart b/lib/pages/1-auth/presentation/login_page.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/1-auth/presentation/login_page.dart	
@@ -0,0 +1,252 @@
+import 'package:finney/shared/path/app_images.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart';
+import 'package:finney/pages/1-auth/widgets/my_button.dart';
+import 'package:finney/pages/1-auth/widgets/my_textfield.dart';
+import 'package:finney/pages/1-auth/widgets/square_tile.dart';
+import 'package:finney/core/storage/storage_manager.dart';
+import '../../../core/storage/cloud/models/user_model.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:flutter/material.dart';
+import 'google_sign_in.dart';
+import 'forget_password.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class LoginPage extends StatefulWidget {
+  final Function()? onTap;
+  const LoginPage({super.key, required this.onTap});
+
+  @override
+  State<LoginPage> createState() => _LoginPageState();
+}
+
+class _LoginPageState extends State<LoginPage> {
+  final emailController = TextEditingController();
+  final passwordController = TextEditingController();
+
+void signUserIn() async {
+  // Show loading indicator
+  showDialog(
+    context: context,
+    builder: (context) {
+      return const Center(
+        child: CircularProgressIndicator(
+          valueColor: AlwaysStoppedAnimation<Color>(Colors.blue),
+        ),
+      );
+    },
+  );
+
+  try {
+    // Sign in with Firebase Auth
+    await FirebaseAuth.instance.signInWithEmailAndPassword(
+      email: emailController.text.trim(),
+      password: passwordController.text.trim(),
+    );
+
+    // Get current user after sign in
+    User? user = FirebaseAuth.instance.currentUser;
+
+    if (user != null) {
+      // Create user model
+      final userModel = UserModel(
+        id: user.uid,
+        email: user.email ?? '', 
+        name: user.displayName ?? 'Unknown',
+      );
+
+      // Save to Firestore using Storage Manager
+      await StorageManager().userCloudService.setCurrentUser(userModel);
+    }
+
+    // Dismiss loading dialog if mounted
+    if (mounted) {
+      Navigator.pop(context);
+    }
+  } on FirebaseAuthException catch (e) {
+    // Dismiss loading dialog if mounted
+    if (mounted) {
+      Navigator.pop(context);
+    }
+    
+    // Show appropriate error message
+    String errorMessage = 'Incorrect email/password.\n\nPlease check again';
+    if (e.code == 'user-not-found') {
+      errorMessage = 'No user found with this email.';
+    } else if (e.code == 'wrong-password') {
+      errorMessage = 'Wrong password provided.';
+    } else if (e.code == 'invalid-email') {
+      errorMessage = 'The email address is not valid.';
+    } else if (e.code == 'user-disabled') {
+      errorMessage = 'This user account has been disabled.';
+    }
+    
+    AppSnackBar.showError(context, message: errorMessage);
+  } catch (e) {
+    // Handle other errors
+    if (mounted) {
+      Navigator.pop(context);
+    }
+    AppSnackBar.showError(context, message: 'An error occurred during sign in.');
+  }
+}
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      body: SafeArea(
+        child: Center(
+          child: SingleChildScrollView(
+            child: Column(
+              mainAxisAlignment: MainAxisAlignment.center,
+              children: [
+                const SizedBox(height: 50),
+                Image.asset(AppImages.appLogo),            
+                const SizedBox(height: 50),
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
+                  child: Align(
+                    alignment: Alignment.centerLeft, 
+                    child: Text(
+                      LocaleData.loginTitle.getString(context),
+                      style: TextStyle(
+                        color: AppColors.darkBlue,
+                        fontSize: 20,
+                        fontWeight: FontWeight.w500, 
+                      ),
+                    ),
+                  ),
+                ),
+            
+                const SizedBox(height: 25),
+            
+                //email textfield
+                MyTextField(
+                  controller: emailController,
+                  hintText: LocaleData.emailHint.getString(context),
+                  obscureText: false,
+                ),
+            
+                const SizedBox(height: 10),
+            
+                //password textfield
+                MyTextField(
+                  controller: passwordController,
+                  hintText: LocaleData.passwordHint.getString(context),
+                  obscureText: true,
+                ),
+            
+                const SizedBox(height: 10),
+            
+                //forgot password?
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
+                  child: Align(
+                    alignment: Alignment.centerRight,
+                    child: GestureDetector(
+                      onTap: () {
+                        Navigator.push(
+                          context,
+                          MaterialPageRoute(builder: (context) => const ForgotPasswordPage()),
+                        );
+                      },
+                      child: Text(
+                        LocaleData.forgotPassword.getString(context),
+                        style: TextStyle(
+                          color: AppColors.primary,
+                          fontWeight: FontWeight.w500,
+                        ),
+                      ),
+                    ),
+                  ),
+                ),
+            
+                const SizedBox(height: 25),
+            
+                //sign in button
+                MyButton(
+                  text: LocaleData.signInButton.getString(context),
+                  onTap: signUserIn,
+                ),
+            
+                const SizedBox(height: 50),
+            
+                //or continue with
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
+                  child: Row(
+                    children: [
+                      Expanded(
+                        child: Divider(
+                          thickness: 0.5,
+                          color: AppColors.blurGray,
+                        ),
+                      ),
+                      Padding(
+                        padding: const EdgeInsets.symmetric(horizontal: 10.0),
+                        child: Text(
+                          LocaleData.continueWith.getString(context),
+                          style: TextStyle(
+                            color: AppColors.blurGray,
+                          ),
+                        ),
+                      ),
+                      Expanded(
+                        child: Divider(
+                          thickness: 0.5,
+                          color: AppColors.blurGray,
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+            
+                const SizedBox(height: 50),
+            
+                //google sign in button
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.center,
+                  children: [
+                    GestureDetector(
+                      onTap: () {
+                        GoogleSignInService.signInWithGoogle(context);
+                    },
+                      child: SquareTile(imagePath: AppImages.googleIcon),
+                    ),
+                  ],
+                  
+                ),
+            
+                const SizedBox(height: 50),
+            
+                //not a member? register now
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.center,
+                  children: [
+                    Text(
+                      LocaleData.notMember.getString(context),
+                      style: TextStyle(color: AppColors.blurGray),
+                    ),
+                    const SizedBox(width: 4),
+                    GestureDetector(
+                      onTap: widget.onTap,
+                      child: Text(
+                        LocaleData.registerNow.getString(context),
+                        style: TextStyle(
+                          color: AppColors.primary,
+                          fontWeight: FontWeight.w500,
+                        ),
+                      ),
+                    ),
+                  ],
+                )
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/1-auth/presentation/register_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/1-auth/presentation/register_page.dart b/lib/pages/1-auth/presentation/register_page.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/1-auth/presentation/register_page.dart	
@@ -0,0 +1,325 @@
+import 'package:finney/shared/path/app_images.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart';
+import 'package:finney/pages/1-auth/widgets/my_button.dart';
+import 'package:finney/pages/1-auth/widgets/my_textfield.dart';
+import 'package:finney/pages/1-auth/widgets/square_tile.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/core/storage/storage_manager.dart';
+import 'package:finney/core/storage/cloud/models/user_model.dart';
+import 'google_sign_in.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class RegisterPage extends StatefulWidget {
+  final Function()? onTap;
+  const RegisterPage({super.key, required this.onTap});
+
+  @override
+  State<RegisterPage> createState() => _RegisterPageState();
+}
+
+class _RegisterPageState extends State<RegisterPage> {
+  final emailController = TextEditingController();
+  final passwordController = TextEditingController();
+  final confirmedController = TextEditingController();
+  final nameController = TextEditingController(); // Added name field controller
+
+  String _passwordHint = '';
+  Color _hintColor = Colors.grey;
+  bool _obscurePassword = true;
+
+  bool isValidGmail(String email) {
+    final gmailRegex = RegExp(r'^[a-zA-Z0-9._%+-]+@gmail\.com$');
+    return gmailRegex.hasMatch(email);
+  }
+
+  bool isPasswordStrong(String password) {
+    final lengthValid = password.length >= 12;
+    final upperCaseValid = password.contains(RegExp(r'[A-Z]'));
+    final lowerCaseValid = password.contains(RegExp(r'[a-z]'));
+    final numberValid = password.contains(RegExp(r'[0-9]'));
+    final symbolValid = password.contains(RegExp(r'[!@#\$%^&*(),.?":{}|<>]'));
+
+    return lengthValid && upperCaseValid && lowerCaseValid && numberValid && symbolValid;
+  }
+
+  void signUserUp() async {
+    showDialog(
+      context: context,
+      builder: (context) {
+        return const Center(
+          child: CircularProgressIndicator(),
+        );
+      },
+    );
+
+    final email = emailController.text.trim();
+    final password = passwordController.text.trim();
+    final confirmPassword = confirmedController.text.trim();
+    final name = nameController.text.trim(); // Get name value
+
+    // Validate name field
+    if (name.isEmpty) {
+      Navigator.pop(context);
+      AppSnackBar.showError(
+        context, 
+        message: 'Please enter your name'
+      );
+      return;
+    }
+
+    if (!isValidGmail(email)) {
+      Navigator.pop(context);
+      AppSnackBar.showError(
+        context, 
+        message: LocaleData.invalidGmailError.getString(context)
+      );
+      return;
+    }
+
+    if (password != confirmPassword) {
+      Navigator.pop(context);
+      AppSnackBar.showError(
+        context, 
+        message: LocaleData.passwordsNotMatchError.getString(context)
+      );
+      return;
+    }
+
+    if (!isPasswordStrong(password)) {
+      Navigator.pop(context);
+      AppSnackBar.showError(
+        context,
+        message: LocaleData.weakPasswordError.getString(context)
+      );
+      return;
+    }
+
+    try {
+      // Create user with email and password
+      UserCredential credential = await FirebaseAuth.instance.createUserWithEmailAndPassword(
+        email: email,
+        password: password,
+      );
+
+      // Update the display name
+      await credential.user?.updateDisplayName(name);
+
+      User? user = FirebaseAuth.instance.currentUser;
+
+      if (user != null) {
+        // Create UserModel
+        final userModel = UserModel(
+          id: user.uid,
+          name: name,
+          email: email,
+        );
+
+        // Save user to Firestore
+        await StorageManager().userCloudService.setCurrentUser(userModel);
+      }
+
+      if (mounted) Navigator.pop(context);
+    } on FirebaseAuthException catch (e) {
+      if (mounted) {
+        Navigator.pop(context);
+        String errorMessage = 'Registration failed';
+        
+        switch (e.code) {
+          case 'email-already-in-use':
+            errorMessage = 'This email is already in use.';
+            break;
+          case 'invalid-email':
+            errorMessage = 'Invalid email format.';
+            break;
+          case 'weak-password':
+            errorMessage = 'The password is too weak.';
+            break;
+          default:
+            errorMessage = 'Registration error: ${e.message}';
+        }
+        
+        AppSnackBar.showError(context, message: errorMessage);
+      }
+    } catch (e) {
+      if (mounted) {
+        Navigator.pop(context);
+        AppSnackBar.showError(
+          context, 
+          message: 'Error: $e'
+        );
+      }
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      body: SafeArea(
+        child: Center(
+          child: SingleChildScrollView(
+            child: Column(
+              mainAxisAlignment: MainAxisAlignment.center,
+              children: [
+                const SizedBox(height: 25),
+                Image.asset(AppImages.appLogo),
+                const SizedBox(height: 25),
+
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
+                  child: Align(
+                    alignment: Alignment.centerLeft,
+                    child: Text(
+                      LocaleData.registerTitle.getString(context),
+                      style: TextStyle(
+                        color: AppColors.darkBlue,
+                        fontSize: 20,
+                        fontWeight: FontWeight.w500,
+                      ),
+                    ),
+                  ),
+                ),
+
+                const SizedBox(height: 25),
+
+                // Name field
+                MyTextField(
+                  controller: nameController,
+                  hintText: 'Full Name',
+                  obscureText: false,
+                ),
+
+                const SizedBox(height: 10),
+
+                MyTextField(
+                  controller: emailController,
+                  hintText: LocaleData.emailHint.getString(context),
+                  obscureText: false,
+                ),
+
+                const SizedBox(height: 10),
+
+                MyTextField(
+                  controller: passwordController,
+                  hintText: LocaleData.passwordHint.getString(context),
+                  obscureText: _obscurePassword,
+                  onChanged: (value) {
+                    final valid = isPasswordStrong(value);
+                    setState(() {
+                      _passwordHint = valid
+                          ? LocaleData.passwordStrong.getString(context)
+                          : LocaleData.passwordWeak.getString(context);
+                      _hintColor = valid ? Colors.green : Colors.red;
+                    });
+                  },
+                  suffixIcon: IconButton(
+                    icon: Icon(
+                      _obscurePassword ? Icons.visibility_off : Icons.visibility,
+                    ),
+                    onPressed: () {
+                      setState(() {
+                        _obscurePassword = !_obscurePassword;
+                      });
+                    },
+                  ),
+                ),
+
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
+                  child: Align(
+                    alignment: Alignment.centerLeft,
+                    child: Text(
+                      _passwordHint,
+                      style: TextStyle(color: _hintColor, fontSize: 12),
+                    ),
+                  ),
+                ),
+
+                const SizedBox(height: 10),
+
+                MyTextField(
+                  controller: confirmedController,
+                  hintText: LocaleData.confirmPasswordHint.getString(context),
+                  obscureText: true,
+                ),
+
+                const SizedBox(height: 25),
+
+                MyButton(
+                  text: LocaleData.signUpButton.getString(context),
+                  onTap: signUserUp,
+                ),
+
+                const SizedBox(height: 50),
+
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
+                  child: Row(
+                    children: [
+                      Expanded(
+                        child: Divider(thickness: 0.5, color: AppColors.blurGray),
+                      ),
+                      Padding(
+                        padding: const EdgeInsets.symmetric(horizontal: 10.0),
+                        child: Text(
+                          LocaleData.continueWith.getString(context),
+                          style: TextStyle(color: AppColors.blurGray),
+                        ),
+                      ),
+                      Expanded(
+                        child: Divider(thickness: 0.5, color: AppColors.blurGray),
+                      ),
+                    ],
+                  ),
+                ),
+
+                const SizedBox(height: 50),
+
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.center,
+                  children: [
+                    GestureDetector(
+                      onTap: () => GoogleSignInService.signInWithGoogle(context),
+                      child: SquareTile(imagePath: AppImages.googleIcon),
+                    ),
+                  ],
+                ),
+
+                const SizedBox(height: 50),
+
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.center,
+                  children: [
+                    Text(
+                      LocaleData.alreadyMember.getString(context),
+                      style: TextStyle(color: AppColors.blurGray)),
+                    const SizedBox(width: 4),
+                    GestureDetector(
+                      onTap: widget.onTap,
+                      child: Text(
+                        LocaleData.loginNow.getString(context),
+                        style: TextStyle(color: AppColors.primary, fontWeight: FontWeight.bold),
+                      ),
+                    ),
+                  ],
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+  
+  @override
+  void dispose() {
+    emailController.dispose();
+    passwordController.dispose();
+    confirmedController.dispose();
+    nameController.dispose(); // Dispose name controller
+    super.dispose();
+  }
+}
\ No newline at end of file
Index: lib/pages/1-auth/presentation/google_sign_in.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/1-auth/presentation/google_sign_in.dart b/lib/pages/1-auth/presentation/google_sign_in.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/1-auth/presentation/google_sign_in.dart	
@@ -0,0 +1,54 @@
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:google_sign_in/google_sign_in.dart';
+import 'package:flutter/material.dart';
+import '../../../shared/widgets/common/snack_bar.dart';
+import '../../../core/storage/storage_manager.dart';
+import '../../../core/storage/cloud/models/user_model.dart';
+
+class GoogleSignInService {
+  static Future<void> signInWithGoogle(BuildContext context) async {
+    try {
+      final GoogleSignIn googleSignIn = GoogleSignIn();
+
+      // Sign out from any previous Google accounts first
+      await googleSignIn.signOut(); 
+
+      // Start the Google sign-in flow
+      final GoogleSignInAccount? googleUser = await googleSignIn.signIn();
+      if (googleUser == null) return; // User canceled the sign-in flow
+
+      // Get authentication tokens
+      final GoogleSignInAuthentication googleAuth = await googleUser.authentication;
+
+      // Create a credential for Firebase from the tokens
+      final credential = GoogleAuthProvider.credential(
+        accessToken: googleAuth.accessToken,
+        idToken: googleAuth.idToken,
+      );
+
+      // Sign in to Firebase with the Google credential
+      UserCredential userCredential =
+          await FirebaseAuth.instance.signInWithCredential(credential);
+
+      // Optional: Save user data to Firestore to ensure it exists
+      User? user = userCredential.user;
+      if (user != null) {
+        // Use the StorageManager's userCloudService to ensure the user exists in Firestore
+        final userService = StorageManager().userCloudService;
+        
+        // Create a UserModel instance from Firebase user data
+        final userModel = UserModel(
+          id: user.uid,
+          email: user.email ?? '',
+          name: user.displayName ?? 'Unknown',
+          photoUrl: user.photoURL,
+        );
+        
+        // Save the user to Firestore
+        await userService.setCurrentUser(userModel);
+      }
+    } catch (error) {
+      AppSnackBar.showError(context, message: 'Google Sign-In failed.');
+    }
+  }
+}
\ No newline at end of file
Index: lib/pages/1-auth/presentation/forget_password.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/1-auth/presentation/forget_password.dart b/lib/pages/1-auth/presentation/forget_password.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/1-auth/presentation/forget_password.dart	
@@ -0,0 +1,141 @@
+import 'package:finney/shared/path/app_images.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart';
+import 'package:finney/pages/1-auth/widgets/my_button.dart';
+import 'package:finney/pages/1-auth/widgets/my_textfield.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+
+class ForgotPasswordPage extends StatefulWidget {
+  const ForgotPasswordPage({super.key});
+
+  @override
+  ForgotPasswordPageState createState() => ForgotPasswordPageState();
+}
+
+class ForgotPasswordPageState extends State<ForgotPasswordPage> {
+  final emailController = TextEditingController();
+
+  void sendPasswordResetEmail() async {
+    showDialog(
+      context: context,
+      builder: (context) {
+        return Center(
+          child: CircularProgressIndicator(
+            valueColor: AlwaysStoppedAnimation<Color>(Colors.blue),
+          ),
+        );
+      },
+    );
+
+    try {
+      await FirebaseAuth.instance.sendPasswordResetEmail(email: emailController.text.trim());
+      Navigator.pop(context);
+      showDialog(
+        context: context,
+        builder: (context) {
+          return AlertDialog(
+            title: Text(
+              LocaleData.forgotPasswordTitle.getString(context),
+              style: Theme.of(context).textTheme.headlineSmall,
+            ),
+            content: Text(
+              LocaleData.passwordResetSuccess.getString(context),
+              style: Theme.of(context).textTheme.bodyMedium,
+            ),
+            actions: [
+              TextButton(
+                onPressed: () {
+                  Navigator.pop(context);
+                },
+                child: Text(
+                  LocaleData.dialogOk.getString(context),
+                  style: Theme.of(context).textTheme.labelLarge,
+                ),
+              ),
+            ],
+          );
+        },
+      );
+    } catch (e) {
+      Navigator.pop(context); 
+      AppSnackBar.showError(
+        context, 
+        message: LocaleData.passwordResetError.getString(context),
+      );
+    }
+  }
+
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      body: SafeArea(
+        child: Center(
+          child: SingleChildScrollView(
+            child: Column(
+              mainAxisAlignment: MainAxisAlignment.center,
+              children: [
+                const SizedBox(height: 50),
+            
+                //logo
+                Image.asset(AppImages.appLogo),
+            
+                const SizedBox(height: 50),
+                
+                Padding(
+                  padding: const EdgeInsets.symmetric(horizontal: 25.0),
+                  child: Align(
+                    alignment: Alignment.centerLeft,
+                    child: Text(
+                      LocaleData.forgotPasswordTitle.getString(context),
+                      style: TextStyle(
+                        color: AppColors.darkBlue,
+                        fontSize: 20,
+                        fontWeight: FontWeight.w500,
+                      ),
+                    ),
+                  ),
+                ),
+                const SizedBox(height: 25),
+                MyTextField(
+                  controller: emailController,
+                  hintText: LocaleData.emailHint.getString(context),
+                  obscureText: false,
+                ),
+                const SizedBox(height: 25),
+                MyButton(
+                  text: LocaleData.sendResetLink.getString(context),
+                  onTap: sendPasswordResetEmail,
+                ),
+                const SizedBox(height: 50),
+                GestureDetector(
+                  onTap: () {
+                    Navigator.pop(context); // Navigate back to login page
+                  },
+                  child: Text(
+                    LocaleData.backToLogin.getString(context),
+                    style: TextStyle(
+                      color: AppColors.primary,
+                      fontWeight: FontWeight.w500,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+  @override
+  void dispose() {
+    emailController.dispose();
+    super.dispose();
+  }
+}
+
Index: lib/pages/5-learn/quiz/quiz.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/quiz/quiz.dart b/lib/pages/5-learn/quiz/quiz.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/quiz/quiz.dart	
@@ -0,0 +1,228 @@
+import 'package:flutter/material.dart';
+import 'quiz_questions.dart';
+import 'quiz_result.dart';
+import 'package:finney/pages/5-learn/string_extension.dart';
+
+import 'quiz_result_model.dart';
+
+import 'package:finney/shared/localization/locales.dart';
+
+class QuizPage extends StatefulWidget {
+  const QuizPage({super.key});
+
+  @override
+  State<QuizPage> createState() => _QuizPageState();
+}
+
+class _QuizPageState extends State<QuizPage> {
+  int _currentIndex = 0;
+  int _score = 0;
+  int? _selectedIndex;
+  bool _answered = false;
+
+  late List<QuizQuestion> selectedQuestions;
+  late List<int?> _userAnswers;
+
+  @override
+  void initState() {
+    super.initState();
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+    selectedQuestions = List.from(quizQuestions(context))..shuffle();
+    selectedQuestions = selectedQuestions.take(10).toList();
+    _userAnswers = List.filled(selectedQuestions.length, null);
+  }
+
+
+  void _handleAnswer(int index) {
+    if (_answered) return;
+    setState(() {
+      _selectedIndex = index;
+      _answered = true;
+      _userAnswers[_currentIndex] = index;
+      if (index == selectedQuestions[_currentIndex].correctAnswerIndex) {
+        _score++;
+      }
+    });
+  }
+
+  void _nextQuestion() {
+    if (!_answered) return;
+
+    if (_currentIndex + 1 < selectedQuestions.length) {
+      setState(() {
+        _currentIndex++;
+        _selectedIndex = null;
+        _answered = false;
+      });
+    } else {
+      Navigator.pushReplacement(
+        context,
+        MaterialPageRoute(
+          builder: (_) => QuizResultPage(
+            score: _score,
+            total: selectedQuestions.length,
+            userAnswers: _userAnswers,
+          ),
+        ),
+      );
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final question = selectedQuestions[_currentIndex];
+    double progress = (_currentIndex + 1) / selectedQuestions.length;
+
+    return Scaffold(
+      backgroundColor: const Color(0xFFE1EBF5),
+      body: SafeArea(
+        child: Column(
+          children: [
+            // UI: AppBar replacement
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
+              child: Row(
+                children: [
+                  IconButton(
+                    icon: const Icon(Icons.arrow_back_ios_new, color: Colors.black87),
+                    onPressed: () => Navigator.pop(context),
+                  ),
+                  const Spacer(),
+                  Container(
+                    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 6),
+                    decoration: BoxDecoration(
+                      color: const Color(0xFFD6E9FF),
+                      borderRadius: BorderRadius.circular(20),
+                    ),
+                    child: const Text(
+                      "Test Your Knowledge",
+                      style: TextStyle(
+                        color: Colors.black87,
+                        fontWeight: FontWeight.w500,
+                      ),
+                    ),
+                  ),
+                  const Spacer(flex: 2),
+                ],
+              ),
+            ),
+
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 6),
+              child: LinearProgressIndicator(
+                value: progress,
+                backgroundColor: Colors.white54,
+                valueColor: const AlwaysStoppedAnimation<Color>(Colors.blueAccent),
+              ),
+            ),
+
+            const SizedBox(height: 8),
+            Text(
+              "Question ${_currentIndex + 1}/${selectedQuestions.length}",
+              style: const TextStyle(fontSize: 16, fontWeight: FontWeight.w500),
+            ),
+            const SizedBox(height: 24),
+
+            // UI: Quiz Card
+            Expanded(
+              child: Padding(
+                padding: const EdgeInsets.symmetric(horizontal: 20),
+                child: Container(
+                  padding: const EdgeInsets.all(20),
+                  decoration: BoxDecoration(
+                    color: Colors.white,
+                    borderRadius: BorderRadius.circular(24),
+                    boxShadow: const [
+                      BoxShadow(
+                        color: Colors.black12,
+                        blurRadius: 10,
+                        offset: Offset(0, 4),
+                      ),
+                    ],
+                  ),
+                  child: Column(
+                    mainAxisSize: MainAxisSize.min,
+                    children: [
+                      Container(
+                        padding: const EdgeInsets.all(16),
+                        decoration: BoxDecoration(
+                          color: const Color(0xFFE5F0FB),
+                          borderRadius: BorderRadius.circular(16),
+                        ),
+                        child: Text(
+                          question.question,
+                          textAlign: TextAlign.center,
+                          style: const TextStyle(
+                            fontSize: 18,
+                            fontWeight: FontWeight.w600,
+                          ),
+                        ),
+                      ),
+                      const SizedBox(height: 24),
+
+
+                      ...List.generate(question.options.length, (index) {
+                        final isCorrect = index == question.correctAnswerIndex;
+                        final isSelected = index == _selectedIndex;
+
+                        Color bgColor = Colors.white;
+                        if (_answered) {
+                          if (isCorrect) {
+                            bgColor = Colors.green[100]!;
+                          } else if (isSelected && !isCorrect) {
+                            bgColor = Colors.red[100]!;
+                          }
+                        }
+
+                        return GestureDetector(
+                          onTap: _answered ? null : () => _handleAnswer(index),
+                          child: Container(
+                            width: double.infinity,
+                            margin: const EdgeInsets.only(bottom: 12),
+                            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 14),
+                            decoration: BoxDecoration(
+                              color: bgColor,
+                              borderRadius: BorderRadius.circular(16),
+                              border: Border.all(color: Colors.grey.shade300, width: 1.4),
+                            ),
+                            child: Text(
+                              question.options[index],
+                              textAlign: TextAlign.center,
+                              style: const TextStyle(fontSize: 16, color: Colors.black87),
+                            ),
+                          ),
+                        );
+                      }),
+
+                      const SizedBox(height: 20),
+
+                      ElevatedButton(
+                        onPressed: _answered ? _nextQuestion : null,
+                        style: ElevatedButton.styleFrom(
+                          backgroundColor: Colors.blueAccent,
+                          padding: const EdgeInsets.symmetric(horizontal: 40, vertical: 14),
+                          shape: RoundedRectangleBorder(
+                            borderRadius: BorderRadius.circular(16),
+                          ),
+                        ),
+                        child: Text(
+                          _currentIndex + 1 == selectedQuestions.length ? "Finish" : "Next",
+                          style: const TextStyle(fontSize: 16),
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+              ),
+            ),
+            const SizedBox(height: 24),
+          ],
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/5-learn/quiz/quiz_home.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/quiz/quiz_home.dart b/lib/pages/5-learn/quiz/quiz_home.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/quiz/quiz_home.dart	
@@ -0,0 +1,114 @@
+import 'package:flutter/material.dart';
+import 'quiz.dart';
+import 'quiz_results_page.dart';
+import 'quiz_result_model.dart';
+import '../../../core/storage/storage_manager.dart';
+import 'package:intl/intl.dart';
+import 'package:finney/pages/5-learn/string_extension.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class QuizHomePage extends StatelessWidget {
+  const QuizHomePage({super.key});
+
+  Future<Map<String, dynamic>> _getSummary() async {
+    try {
+      // Get the cloud service from StorageManager
+      final learningService = StorageManager().learningService;
+
+      // Fetch the summary from cloud service
+      return await learningService.getQuizSummary();
+    } catch (e) {
+      debugPrint('Error getting quiz summary: $e');
+      return {'total': 0, 'average': 0.0, 'last': null};
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return FutureBuilder<Map<String, dynamic>>(
+      future: _getSummary(),
+      builder: (context, snapshot) {
+        final summary = snapshot.data;
+
+        return DefaultTabController(
+          length: 2,
+          child: Scaffold(
+            backgroundColor: const Color(0xFFF5F7FB),
+            appBar: AppBar(
+              title: const Text("Quiz"),
+              elevation: 0,
+              backgroundColor: Colors.white,
+              foregroundColor: Colors.black,
+              bottom: const TabBar(
+                labelColor: Colors.blueAccent,
+                unselectedLabelColor: Colors.grey,
+                indicatorColor: Colors.blueAccent,
+                tabs: [
+                  Tab(text: 'Take the Quiz'),
+                  Tab(text: 'Results'),
+                ],
+              ),
+            ),
+            body: Column(
+              children: [
+                if (summary != null) ...[
+                  Container(
+                    color: Colors.white,
+                    padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
+                    child: Row(
+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                      children: [
+                        Column(
+                          crossAxisAlignment: CrossAxisAlignment.start,
+                          children: [
+                            const Text("Attempts",
+                                style: TextStyle(fontWeight: FontWeight.w500)),
+                            Text("${summary['total']}",
+                                style: const TextStyle(fontSize: 16)),
+                          ],
+                        ),
+                        Column(
+                          crossAxisAlignment: CrossAxisAlignment.start,
+                          children: [
+                            const Text("Average Score",
+                                style: TextStyle(fontWeight: FontWeight.w500)),
+                            Text("${(summary['average'] as double).toStringAsFixed(1)}%",
+                                style: const TextStyle(fontSize: 16)),
+                          ],
+                        ),
+                        Column(
+                          crossAxisAlignment: CrossAxisAlignment.start,
+                          children: [
+                            const Text("Last Attempt",
+                                style: TextStyle(fontWeight: FontWeight.w500)),
+                            Text(
+                              summary['last'] != null
+                                  ? DateFormat('MMM d, h:mm a').format(
+                                      summary['last'] is String
+                                          ? DateTime.parse(summary['last'])
+                                          : summary['last'])
+                                  : "-",
+                              style: const TextStyle(fontSize: 16),
+                            ),
+                          ],
+                        ),
+                      ],
+                    ),
+                  ),
+                ],
+                const Expanded(
+                  child: TabBarView(
+                    children: [
+                      QuizPage(),
+                      QuizResultsPage(),
+                    ],
+                  ),
+                ),
+              ],
+            ),
+          ),
+        );
+      },
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/5-learn/quiz/quiz_result.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/quiz/quiz_result.dart b/lib/pages/5-learn/quiz/quiz_result.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/quiz/quiz_result.dart	
@@ -0,0 +1,212 @@
+import 'package:flutter/material.dart';
+import '../../../core/storage/storage_manager.dart';
+import '../../../core/storage/cloud/models/learning_model.dart';
+import 'quiz.dart';
+import 'quiz_questions.dart';
+import 'quiz_review_page.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/pages/5-learn/string_extension.dart';
+
+
+class QuizResultPage extends StatefulWidget {
+  final int score;
+  final int total;
+  final List<int?> userAnswers;
+
+  const QuizResultPage({
+    super.key,
+    required this.score,
+    required this.total,
+    required this.userAnswers,
+  });
+
+  @override
+  State<QuizResultPage> createState() => _QuizResultPageState();
+}
+
+class _QuizResultPageState extends State<QuizResultPage> {
+  late double percent;
+  String feedbackMessage = '';
+  int? highestScore;
+
+  @override
+  void initState() {
+    super.initState();
+    percent = widget.score / widget.total;
+    _saveQuizResult();
+    _loadHighestScore();
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+    feedbackMessage = _getFeedback(percent);
+  }
+
+  String _getFeedback(double percent) {
+    if (percent >= 0.87) {
+      return LocaleData.feedbackMessageExcellent.getString(context);
+    } else if (percent >= 0.67) {
+      return LocaleData.feedbackMessageGood.getString(context);
+    } else if (percent >= 0.4) {
+      return LocaleData.feedbackMessageNotBad.getString(context);
+    } else {
+      return LocaleData.feedbackMessageKeepGoing.getString(context);
+    }
+  }
+
+  Future<void> _saveQuizResult() async {
+    try {
+      final quizResult = QuizResult(
+        id: '',
+        score: widget.score,
+        totalQuestions: widget.total,
+        timestamp: DateTime.now(),
+      );
+      await StorageManager().learningService.saveQuizResult(quizResult);
+    } catch (e) {
+      debugPrint('Error saving quiz result: $e');
+    }
+  }
+
+  Future<void> _loadHighestScore() async {
+    try {
+      final results = await StorageManager().learningService.getAllQuizResults();
+      if (results.isNotEmpty) {
+        final highest = results.fold<int>(0, (prev, result) =>
+        result.score > prev ? result.score : prev);
+        setState(() {
+          highestScore = highest;
+        });
+      }
+    } catch (e) {
+      debugPrint('Error loading highest score: $e');
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final displayPercent = (percent * 100).toStringAsFixed(1);
+
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        title: Text(LocaleData.quizCompleted.getString(context)),
+        backgroundColor: Colors.white,
+        foregroundColor: Colors.black,
+        elevation: 1,
+      ),
+      body: Center(
+        child: Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 24),
+          child: Column(
+            mainAxisAlignment: MainAxisAlignment.center,
+            children: [
+              Stack(
+                alignment: Alignment.center,
+                children: [
+                  SizedBox(
+                    width: 120,
+                    height: 120,
+                    child: CircularProgressIndicator(
+                      value: percent,
+                      strokeWidth: 12,
+                      backgroundColor: Colors.grey.shade200,
+                      valueColor: const AlwaysStoppedAnimation<Color>(
+                        Colors.blueAccent,
+                      ),
+                    ),
+                  ),
+                  Text(
+                    "${(percent * 100).toInt()}%",
+                    style: const TextStyle(
+                      fontSize: 20,
+                      fontWeight: FontWeight.bold,
+                    ),
+                  ),
+                ],
+              ),
+              const SizedBox(height: 20),
+
+              Text(
+                "${LocaleData.score.getString(context)}: ${widget.score} / ${widget.total}",
+                style: const TextStyle(
+                  fontSize: 20,
+                  fontWeight: FontWeight.w600,
+                ),
+              ),
+              const SizedBox(height: 8),
+              Text(
+                "${LocaleData.accuracy.getString(context)}: $displayPercent%",
+                style: const TextStyle(fontSize: 16, color: Colors.black54),
+              ),
+              const SizedBox(height: 12),
+
+              if (highestScore != null)
+                Text(
+                  "${LocaleData.highScore.getString(context)}: $highestScore",
+                  style: TextStyle(
+                    fontSize: 16,
+                    color: highestScore == widget.score
+                        ? Colors.green
+                        : Colors.black87,
+                    fontWeight: highestScore == widget.score
+                        ? FontWeight.bold
+                        : FontWeight.normal,
+                  ),
+                ),
+
+              const SizedBox(height: 20),
+
+              Text(
+                feedbackMessage,
+                textAlign: TextAlign.center,
+                style: const TextStyle(fontSize: 16, color: Colors.black87),
+              ),
+              const SizedBox(height: 30),
+
+              ElevatedButton(
+                onPressed: () {
+                  Navigator.pop(context);
+                },
+                child: Text(LocaleData.backToQuiz.getString(context)),
+              ),
+              const SizedBox(height: 12),
+
+              TextButton(
+                onPressed: () {
+                  Navigator.pushReplacement(
+                    context,
+                    MaterialPageRoute(builder: (_) => const QuizPage()),
+                  );
+                },
+                child: Text(
+                  LocaleData.restartQuiz.getString(context),
+                  style: const TextStyle(color: Colors.blueAccent),
+                ),
+              ),
+
+              const SizedBox(height: 12),
+
+              TextButton.icon(
+                onPressed: () {
+                  Navigator.push(
+                    context,
+                    MaterialPageRoute(
+                      builder: (_) => QuizReviewPage(
+                        questions: quizQuestions(context),
+                        userAnswers: widget.userAnswers,
+                      ),
+                    ),
+                  );
+                },
+                icon: const Icon(Icons.visibility),
+                label: Text(LocaleData.reviewAnswers.getString(context)),
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/quiz/quiz_questions.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/quiz/quiz_questions.dart b/lib/pages/5-learn/quiz/quiz_questions.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/quiz/quiz_questions.dart	
@@ -0,0 +1,320 @@
+
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/pages/5-learn/string_extension.dart';
+
+
+class QuizQuestion {
+  final String question;
+  final List<String> options;
+  final int correctAnswerIndex;
+
+  QuizQuestion({
+    required this.question,
+    required this.options,
+    required this.correctAnswerIndex,
+  });
+}
+
+List<QuizQuestion> quizQuestions(BuildContext context) => [
+  QuizQuestion(
+    question: LocaleData.quizQ1.getString(context),
+    options: [
+      LocaleData.quizQ1A1.getString(context),
+      LocaleData.quizQ1A2.getString(context),
+      LocaleData.quizQ1A3.getString(context),
+      LocaleData.quizQ1A4.getString(context),
+    ],
+    correctAnswerIndex: 2,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ2.getString(context),
+    options: [
+      LocaleData.quizQ2A1.getString(context),
+      LocaleData.quizQ2A2.getString(context),
+      LocaleData.quizQ2A3.getString(context),
+      LocaleData.quizQ2A4.getString(context),
+    ],
+    correctAnswerIndex: 0,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ3.getString(context),
+    options: [
+      LocaleData.quizQ3A1.getString(context),
+      LocaleData.quizQ3A2.getString(context),
+      LocaleData.quizQ3A3.getString(context),
+      LocaleData.quizQ3A4.getString(context),
+    ],
+    correctAnswerIndex: 0,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ4.getString(context),
+    options: [
+      LocaleData.quizQ4A1.getString(context),
+      LocaleData.quizQ4A2.getString(context),
+      LocaleData.quizQ4A3.getString(context),
+      LocaleData.quizQ4A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ5.getString(context),
+    options: [
+      LocaleData.quizQ5A1.getString(context),
+      LocaleData.quizQ5A2.getString(context),
+      LocaleData.quizQ5A3.getString(context),
+      LocaleData.quizQ5A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ6.getString(context),
+    options: [
+      LocaleData.quizQ6A1.getString(context),
+      LocaleData.quizQ6A2.getString(context),
+      LocaleData.quizQ6A3.getString(context),
+      LocaleData.quizQ6A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ7.getString(context),
+    options: [
+      LocaleData.quizQ7A1.getString(context),
+      LocaleData.quizQ7A2.getString(context),
+      LocaleData.quizQ7A3.getString(context),
+      LocaleData.quizQ7A4.getString(context),
+    ],
+    correctAnswerIndex: 3,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ8.getString(context),
+    options: [
+      LocaleData.quizQ8A1.getString(context),
+      LocaleData.quizQ8A2.getString(context),
+      LocaleData.quizQ8A3.getString(context),
+      LocaleData.quizQ8A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ9.getString(context),
+    options: [
+      LocaleData.quizQ9A1.getString(context),
+      LocaleData.quizQ9A2.getString(context),
+      LocaleData.quizQ9A3.getString(context),
+      LocaleData.quizQ9A4.getString(context),
+    ],
+    correctAnswerIndex: 2,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ10.getString(context),
+    options: [
+      LocaleData.quizQ10A1.getString(context),
+      LocaleData.quizQ10A2.getString(context),
+      LocaleData.quizQ10A3.getString(context),
+      LocaleData.quizQ10A4.getString(context),
+    ],
+    correctAnswerIndex: 2,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ11.getString(context),
+    options: [
+      LocaleData.quizQ11A1.getString(context),
+      LocaleData.quizQ11A2.getString(context),
+      LocaleData.quizQ11A3.getString(context),
+      LocaleData.quizQ11A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ12.getString(context),
+    options: [
+      LocaleData.quizQ12A1.getString(context),
+      LocaleData.quizQ12A2.getString(context),
+      LocaleData.quizQ12A3.getString(context),
+      LocaleData.quizQ12A4.getString(context),
+    ],
+    correctAnswerIndex: 2,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ13.getString(context),
+    options: [
+      LocaleData.quizQ13A1.getString(context),
+      LocaleData.quizQ13A2.getString(context),
+      LocaleData.quizQ13A3.getString(context),
+      LocaleData.quizQ13A4.getString(context),
+    ],
+    correctAnswerIndex: 2,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ14.getString(context),
+    options: [
+      LocaleData.quizQ14A1.getString(context),
+      LocaleData.quizQ14A2.getString(context),
+      LocaleData.quizQ14A3.getString(context),
+      LocaleData.quizQ14A4.getString(context),
+    ],
+    correctAnswerIndex: 3,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ15.getString(context),
+    options: [
+      LocaleData.quizQ15A1.getString(context),
+      LocaleData.quizQ15A2.getString(context),
+      LocaleData.quizQ15A3.getString(context),
+      LocaleData.quizQ15A4.getString(context),
+    ],
+    correctAnswerIndex: 2,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ16.getString(context),
+    options: [
+      LocaleData.quizQ16A1.getString(context),
+      LocaleData.quizQ16A2.getString(context),
+      LocaleData.quizQ16A3.getString(context),
+      LocaleData.quizQ16A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ17.getString(context),
+    options: [
+      LocaleData.quizQ17A1.getString(context),
+      LocaleData.quizQ17A2.getString(context),
+      LocaleData.quizQ17A3.getString(context),
+      LocaleData.quizQ17A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ18.getString(context),
+    options: [
+      LocaleData.quizQ18A1.getString(context),
+      LocaleData.quizQ18A2.getString(context),
+      LocaleData.quizQ18A3.getString(context),
+      LocaleData.quizQ18A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ19.getString(context),
+    options: [
+      LocaleData.quizQ19A1.getString(context),
+      LocaleData.quizQ19A2.getString(context),
+      LocaleData.quizQ19A3.getString(context),
+      LocaleData.quizQ19A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ20.getString(context),
+    options: [
+      LocaleData.quizQ20A1.getString(context),
+      LocaleData.quizQ20A2.getString(context),
+      LocaleData.quizQ20A3.getString(context),
+      LocaleData.quizQ20A4.getString(context),
+    ],
+    correctAnswerIndex: 2,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ21.getString(context),
+    options: [
+      LocaleData.quizQ21A1.getString(context),
+      LocaleData.quizQ21A2.getString(context),
+      LocaleData.quizQ21A3.getString(context),
+      LocaleData.quizQ21A4.getString(context),
+    ],
+    correctAnswerIndex: 0,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ22.getString(context),
+    options: [
+      LocaleData.quizQ22A1.getString(context),
+      LocaleData.quizQ22A2.getString(context),
+      LocaleData.quizQ22A3.getString(context),
+      LocaleData.quizQ22A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ23.getString(context),
+    options: [
+      LocaleData.quizQ23A1.getString(context),
+      LocaleData.quizQ23A2.getString(context),
+      LocaleData.quizQ23A3.getString(context),
+      LocaleData.quizQ23A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ24.getString(context),
+    options: [
+      LocaleData.quizQ24A1.getString(context),
+      LocaleData.quizQ24A2.getString(context),
+      LocaleData.quizQ24A3.getString(context),
+      LocaleData.quizQ24A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ25.getString(context),
+    options: [
+      LocaleData.quizQ25A1.getString(context),
+      LocaleData.quizQ25A2.getString(context),
+      LocaleData.quizQ25A3.getString(context),
+      LocaleData.quizQ25A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ26.getString(context),
+    options: [
+      LocaleData.quizQ26A1.getString(context),
+      LocaleData.quizQ26A2.getString(context),
+      LocaleData.quizQ26A3.getString(context),
+      LocaleData.quizQ26A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ27.getString(context),
+    options: [
+      LocaleData.quizQ27A1.getString(context),
+      LocaleData.quizQ27A2.getString(context),
+      LocaleData.quizQ27A3.getString(context),
+      LocaleData.quizQ27A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ28.getString(context),
+    options: [
+      LocaleData.quizQ28A1.getString(context),
+      LocaleData.quizQ28A2.getString(context),
+      LocaleData.quizQ28A3.getString(context),
+      LocaleData.quizQ28A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ29.getString(context),
+    options: [
+      LocaleData.quizQ29A1.getString(context),
+      LocaleData.quizQ29A2.getString(context),
+      LocaleData.quizQ29A3.getString(context),
+      LocaleData.quizQ29A4.getString(context),
+    ],
+    correctAnswerIndex: 1,
+  ),
+  QuizQuestion(
+    question: LocaleData.quizQ30.getString(context),
+    options: [
+      LocaleData.quizQ30A1.getString(context),
+      LocaleData.quizQ30A2.getString(context),
+      LocaleData.quizQ30A3.getString(context),
+      LocaleData.quizQ30A4.getString(context),
+    ],
+    correctAnswerIndex: 0,
+  ),
+];
\ No newline at end of file
Index: lib/pages/5-learn/quiz/quiz_review_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/quiz/quiz_review_page.dart b/lib/pages/5-learn/quiz/quiz_review_page.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/quiz/quiz_review_page.dart	
@@ -0,0 +1,85 @@
+import 'package:flutter/material.dart';
+import 'quiz_questions.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/pages/5-learn/string_extension.dart';
+
+class QuizReviewPage extends StatelessWidget {
+  final List<QuizQuestion> questions;
+  final List<int?> userAnswers;
+
+  const QuizReviewPage({
+    super.key,
+    required this.questions,
+    required this.userAnswers,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        title: Text(LocaleData.reviewAnswers.getString(context)),
+        backgroundColor: Colors.white,
+        foregroundColor: Colors.black,
+        elevation: 1,
+      ),
+      body: ListView.builder(
+        padding: const EdgeInsets.fromLTRB(16, 16, 16, 32), // bottom padding
+        itemCount: userAnswers.length,
+        itemBuilder: (context, index) {
+          final question = questions[index];
+          final selected = index < userAnswers.length ? userAnswers[index] : null;
+          final correct = question.correctAnswerIndex;
+
+          return Container(
+            margin: const EdgeInsets.only(bottom: 20),
+            padding: const EdgeInsets.all(16),
+            decoration: BoxDecoration(
+              color: Colors.white,
+              borderRadius: BorderRadius.circular(16),
+              boxShadow: const [
+                BoxShadow(color: Colors.black12, blurRadius: 6),
+              ],
+            ),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Text(
+                  "Q${index + 1}: ${question.question}",
+                  style: const TextStyle(
+                    fontWeight: FontWeight.w600,
+                    fontSize: 16,
+                  ),
+                ),
+                const SizedBox(height: 12),
+                ...List.generate(question.options.length, (optIndex) {
+                  Color bgColor = Colors.white;
+                  if (optIndex == correct) {
+                    bgColor = Colors.green.shade100;
+                  }
+                  if (selected != correct && optIndex == selected) {
+                    bgColor = Colors.red.shade100;
+                  }
+
+                  return Container(
+                    margin: const EdgeInsets.only(bottom: 8),
+                    padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 10),
+                    decoration: BoxDecoration(
+                      color: bgColor,
+                      borderRadius: BorderRadius.circular(12),
+                      border: Border.all(color: Colors.grey.shade300),
+                    ),
+                    child: Text(
+                      question.options[optIndex],
+                      style: const TextStyle(fontSize: 15),
+                    ),
+                  );
+                }),
+              ],
+            ),
+          );
+        },
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/quiz/quiz_result_model.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/quiz/quiz_result_model.dart b/lib/pages/5-learn/quiz/quiz_result_model.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/quiz/quiz_result_model.dart	
@@ -0,0 +1,31 @@
+import 'package:cloud_firestore/cloud_firestore.dart';
+
+import 'package:finney/shared/localization/locales.dart';
+
+class QuizResult {
+  final int score;
+  final int totalQuestions;
+  final DateTime timestamp;
+
+  QuizResult({
+    required this.score,
+    required this.totalQuestions,
+    required this.timestamp,
+  });
+
+  factory QuizResult.fromJson(Map<String, dynamic> json) {
+    return QuizResult(
+      score: json['score'] ?? 0,
+      totalQuestions: json['totalQuestions'] ?? 0,
+      timestamp: (json['timestamp'] as Timestamp).toDate(),
+    );
+  }
+
+  Map<String, dynamic> toJson() {
+    return {
+      'score': score,
+      'totalQuestions': totalQuestions,
+      'timestamp': Timestamp.fromDate(timestamp),
+    };
+  }
+}
Index: lib/pages/5-learn/quiz/quiz_results_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/quiz/quiz_results_page.dart b/lib/pages/5-learn/quiz/quiz_results_page.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/quiz/quiz_results_page.dart	
@@ -0,0 +1,185 @@
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/pages/5-learn/string_extension.dart';
+
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+
+import '../../../core/storage/storage_manager.dart';
+import '../../../core/storage/cloud/models/learning_model.dart';
+
+class QuizResultsPage extends StatefulWidget {
+  const QuizResultsPage({super.key});
+
+  @override
+  State<QuizResultsPage> createState() => _QuizResultsPageState();
+}
+
+class _QuizResultsPageState extends State<QuizResultsPage> {
+  List<QuizResult> _results = [];
+  bool _isLoading = true;
+  String? _error;
+
+  @override
+  void initState() {
+    super.initState();
+    _loadResults();
+  }
+
+  Future<void> _loadResults() async {
+    try {
+      setState(() {
+        _isLoading = true;
+        _error = null;
+      });
+
+      final results = await StorageManager().learningService.getAllQuizResults();
+
+      setState(() {
+        _results = results;
+        _isLoading = false;
+      });
+    } catch (e) {
+      setState(() {
+        _error = LocaleData.quizLoadError.getString(context);
+        _isLoading = false;
+      });
+    }
+  }
+
+  void _confirmReset(BuildContext context) async {
+    final confirmed = await showDialog<bool>(
+      context: context,
+      builder: (_) => AlertDialog(
+        title: Text(LocaleData.quizReset.getString(context)),
+        content: Text(LocaleData.quizResetConfirm.getString(context)),
+        actions: [
+          TextButton(
+            onPressed: () => Navigator.pop(context, false),
+            child: Text(LocaleData.cancel.getString(context)),
+          ),
+          ElevatedButton(
+            style: ElevatedButton.styleFrom(
+              backgroundColor: Colors.redAccent,
+            ),
+            onPressed: () => Navigator.pop(context, true),
+            child: Text(LocaleData.reset.getString(context)),
+          ),
+        ],
+      ),
+    );
+
+    if (confirmed == true) {
+      try {
+        await StorageManager().learningService.clearQuizResults();
+        ScaffoldMessenger.of(context).showSnackBar(
+          SnackBar(content: Text(LocaleData.quizResetSuccess.getString(context))),
+        );
+        _loadResults();
+      } catch (e) {
+        ScaffoldMessenger.of(context).showSnackBar(
+          SnackBar(content: Text("${LocaleData.error.getString(context)}: $e")),
+        );
+      }
+    }
+  }
+
+  Color _getCardColor(double percent) {
+    if (percent >= 0.8) return Colors.green.shade50;
+    if (percent >= 0.5) return Colors.yellow.shade50;
+    return Colors.red.shade50;
+  }
+
+  String _getMessage(double percent) {
+    if (percent >= 0.8) return LocaleData.greatJob.getString(context);
+    if (percent >= 0.5) return LocaleData.goodEffort.getString(context);
+    return LocaleData.tryAgain.getString(context);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        title: Text(LocaleData.quizResults.getString(context)),
+        backgroundColor: Colors.white,
+        foregroundColor: Colors.black,
+        elevation: 1,
+        actions: [
+          IconButton(
+            icon: const Icon(Icons.refresh),
+            onPressed: _loadResults,
+            tooltip: LocaleData.refresh.getString(context),
+          ),
+          IconButton(
+            icon: const Icon(Icons.delete_forever, color: Colors.redAccent),
+            onPressed: () => _confirmReset(context),
+            tooltip: LocaleData.clearAllResults.getString(context),
+          )
+        ],
+      ),
+      body: _isLoading
+          ? const Center(child: CircularProgressIndicator())
+          : _error != null
+          ? Center(
+        child: Text(_error!, style: const TextStyle(color: Colors.red)),
+      )
+          : _results.isEmpty
+          ? Center(
+        child: Text(
+          LocaleData.quizNoResults.getString(context),
+          style: const TextStyle(fontSize: 16, color: Colors.black54),
+        ),
+      )
+          : ListView.builder(
+        itemCount: _results.length,
+        padding: const EdgeInsets.symmetric(vertical: 16),
+        itemBuilder: (context, index) {
+          final result = _results[index];
+          final percent = result.score / result.totalQuestions;
+          final formattedDate = DateFormat(
+            'MMM dd, yyyy – hh:mm a',
+          ).format(result.timestamp.toLocal());
+
+          final bgColor = _getCardColor(percent);
+          final message = _getMessage(percent);
+
+          return Container(
+            margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+            padding: const EdgeInsets.all(16),
+            decoration: BoxDecoration(
+              color: bgColor,
+              borderRadius: BorderRadius.circular(16),
+              boxShadow: const [BoxShadow(color: Colors.black12, blurRadius: 5)],
+            ),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Text(
+                  message,
+                  style: const TextStyle(
+                    fontSize: 18,
+                    fontWeight: FontWeight.bold,
+                  ),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  "${LocaleData.score.getString(context)}: ${result.score} / ${result.totalQuestions}",
+                  style: const TextStyle(fontSize: 16, color: Colors.black87),
+                ),
+                Text(
+                  "${LocaleData.accuracy.getString(context)}: ${result.percentageScore.toStringAsFixed(1)}%",
+                  style: const TextStyle(fontSize: 14, color: Colors.black87),
+                ),
+                const SizedBox(height: 4),
+                Text(
+                  "${LocaleData.date.getString(context)}: $formattedDate",
+                  style: const TextStyle(color: Colors.grey),
+                ),
+              ],
+            ),
+          );
+        },
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/report_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/report_edu.dart b/lib/pages/5-learn/app_tour/report_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/report_edu.dart	
@@ -0,0 +1,111 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class ReportEduPage extends StatefulWidget {
+  const ReportEduPage({Key? key}) : super(key: key);
+
+  @override
+  State<ReportEduPage> createState() => _ReportEduPageState();
+}
+
+class _ReportEduPageState extends State<ReportEduPage> {
+  final String lessonKey = 'report_edu';
+  final Color cardColor = Color(0xFFC8E6C9);
+
+  late YoutubePlayerController _controller;
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _controller = YoutubePlayerController(
+      initialVideoId: 'dQw4w9WgXcQ',
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+    setState(() => _completed = true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.report.getString(context),
+          style: TextStyle(color: Colors.blueAccent),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(color: Colors.black12, blurRadius: 5),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.tourReportTitle.getString(context),
+                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  LocaleData.tourReportDesc.getString(context),
+                  style: TextStyle(color: Colors.black54),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(
+                      _completed
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/chatbot_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/chatbot_edu.dart b/lib/pages/5-learn/app_tour/chatbot_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/chatbot_edu.dart	
@@ -0,0 +1,119 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class ChatbotEduPage extends StatefulWidget {
+  const ChatbotEduPage({Key? key}) : super(key: key);
+
+  @override
+  State<ChatbotEduPage> createState() => _ChatbotEduPageState();
+}
+
+class _ChatbotEduPageState extends State<ChatbotEduPage> {
+  final String lessonKey = 'chatbot_edu';
+  final Color cardColor = Color(0xFFFFCDD2);
+
+  late YoutubePlayerController _controller;
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _controller = YoutubePlayerController(
+      initialVideoId: 'dQw4w9WgXcQ',
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+    setState(() => _completed = true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.tourChatbotTitle.getString(context),
+          style: TextStyle(color: Colors.blueAccent),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(
+                  color: Colors.black12,
+                  blurRadius: 5,
+                  offset: Offset(0, 3),
+                ),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.tourChatbotTitle.getString(context),
+                  style: TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                    color: Colors.black87,
+                  ),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  LocaleData.tourChatbotDesc.getString(context),
+                  style: TextStyle(color: Colors.black54),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(
+                      _completed
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/settings_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/settings_edu.dart b/lib/pages/5-learn/app_tour/settings_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/settings_edu.dart	
@@ -0,0 +1,105 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class SettingsEduPage extends StatefulWidget {
+  const SettingsEduPage({Key? key}) : super(key: key);
+
+  @override
+  State<SettingsEduPage> createState() => _SettingsEduPageState();
+}
+
+class _SettingsEduPageState extends State<SettingsEduPage> {
+  final String lessonKey = 'settings_edu';
+  final Color cardColor = Color(0xFFB39DDB);
+
+  late YoutubePlayerController _controller;
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _controller = YoutubePlayerController(
+      initialVideoId: 'dQw4w9WgXcQ',
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+    setState(() => _completed = true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(LocaleData.settings.getString(context),
+            style: TextStyle(color: Colors.blueAccent)),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(color: Colors.black12, blurRadius: 5)
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.tourSettingsTitle.getString(context),
+                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  LocaleData.tourSettingsDesc.getString(context),
+                  style: TextStyle(color: Colors.black54),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(_completed ? LocaleData.completed.getString(context) :LocaleData.tourMarkDone.getString(context)),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/dashboard_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/dashboard_edu.dart b/lib/pages/5-learn/app_tour/dashboard_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/dashboard_edu.dart	
@@ -0,0 +1,109 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class DashboardEduPage extends StatefulWidget {
+  const DashboardEduPage({super.key});
+
+  @override
+  State<DashboardEduPage> createState() => _DashboardEduPageState();
+}
+
+class _DashboardEduPageState extends State<DashboardEduPage> {
+  final String lessonKey = 'dashboard_edu';
+  final Color cardColor = Color(0xFFBBDEFB);
+
+  late YoutubePlayerController _controller;
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _controller = YoutubePlayerController(
+      initialVideoId: 'dQw4w9WgXcQ',
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+    setState(() => _completed = true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(LocaleData.dashboard.getString(context),
+            style: const TextStyle(color: Colors.blueAccent)),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(
+                    color: Colors.black12, blurRadius: 5, offset: Offset(0, 3))
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.tourDashboardTitle.getString(context),
+                  style: const TextStyle(
+                      fontWeight: FontWeight.bold,
+                      fontSize: 16,
+                      color: Colors.black87),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  LocaleData.tourDashboardDesc.getString(context),
+                  style: const TextStyle(color: Colors.black54),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(_completed ? 'Completed' : 'Mark as Done'),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/saving_goals_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/saving_goals_edu.dart b/lib/pages/5-learn/app_tour/saving_goals_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/saving_goals_edu.dart	
@@ -0,0 +1,116 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class SavingGoalsEduPage extends StatefulWidget {
+  const SavingGoalsEduPage({Key? key}) : super(key: key);
+
+  @override
+  State<SavingGoalsEduPage> createState() => _SavingGoalsEduPageState();
+}
+
+class _SavingGoalsEduPageState extends State<SavingGoalsEduPage> {
+  final String lessonKey = 'saving_goals_edu';
+  final Color cardColor = Color(0xFFC5CAE9);
+
+  final String videoId = 'dQw4w9WgXcQ';
+
+  late YoutubePlayerController _controller;
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _controller = YoutubePlayerController(
+      initialVideoId: videoId,
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+    setState(() => _completed = true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.savingGoals.getString(context),
+          style: TextStyle(color: Colors.blueAccent),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(color: Colors.black12, blurRadius: 5),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.savingGoalheading.getString(context),
+                  style: const TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                  ),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  LocaleData.savingGoalSubtitled.getString(context),
+                  style: const TextStyle(fontSize: 14, color: Colors.black54),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(
+                      _completed
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/budget_reminder_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/budget_reminder_edu.dart b/lib/pages/5-learn/app_tour/budget_reminder_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/budget_reminder_edu.dart	
@@ -0,0 +1,125 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+
+
+
+
+class BudgetReminderEduPage extends StatefulWidget {
+  const BudgetReminderEduPage({super.key});
+
+  @override
+  State<BudgetReminderEduPage> createState() => _BudgetReminderEduPageState();
+}
+
+class _BudgetReminderEduPageState extends State<BudgetReminderEduPage> {
+  final String lessonKey = 'budget_reminder_edu';
+
+  final Color cardColor = Color(0xFFDCEDC8);
+
+  late YoutubePlayerController _controller;
+
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+
+    _controller = YoutubePlayerController(
+      initialVideoId: 'dQw4w9WgXcQ',
+
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+
+    setState(() {
+      _completed = true;
+    });
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.tourBudgetTitle.getString(context),
+          style: const TextStyle(
+            fontWeight: FontWeight.bold,
+            color: Colors.green,
+          ),
+        ),
+        iconTheme: const IconThemeData(color: Colors.green),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(
+                  color: Colors.black12,
+                  blurRadius: 5,
+                  offset: Offset(0, 3),
+                ),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.tourBudgetDesc.getString(context),
+                  style: const TextStyle(color: Colors.black87, fontSize: 14),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(
+                      _completed
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.green,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/learnhub_module_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/learnhub_module_edu.dart b/lib/pages/5-learn/app_tour/learnhub_module_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/learnhub_module_edu.dart	
@@ -0,0 +1,111 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class LearnhubModuleEduPage extends StatefulWidget {
+  const LearnhubModuleEduPage({super.key});
+
+  @override
+  State<LearnhubModuleEduPage> createState() => _LearnhubModuleEduPageState();
+}
+
+class _LearnhubModuleEduPageState extends State<LearnhubModuleEduPage> {
+  final String lessonKey = 'learnhub_module_edu';
+  final Color cardColor = Color(0xFFB3E5FC);
+
+  late YoutubePlayerController _controller;
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _controller = YoutubePlayerController(
+      initialVideoId: 'dQw4w9WgXcQ',
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+    setState(() => _completed = true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.tourLearnhubTitle.getString(context),
+          style: TextStyle(color: Colors.blueAccent),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(color: Colors.black12, blurRadius: 5),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.tourLearnhubTitle.getString(context),
+                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  LocaleData.tourLearnhubDesc.getString(context),
+                  style: TextStyle(color: Colors.black54),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(
+                      _completed
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/app_tour/expense_tracking_edu.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/app_tour/expense_tracking_edu.dart b/lib/pages/5-learn/app_tour/expense_tracking_edu.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/app_tour/expense_tracking_edu.dart	
@@ -0,0 +1,119 @@
+import 'package:flutter/material.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class ExpenseTrackingEduPage extends StatefulWidget {
+  const ExpenseTrackingEduPage({Key? key}) : super(key: key);
+
+  @override
+  State<ExpenseTrackingEduPage> createState() => _ExpenseTrackingEduPageState();
+}
+
+class _ExpenseTrackingEduPageState extends State<ExpenseTrackingEduPage> {
+  final String lessonKey = 'expense_tracking_edu';
+  final Color cardColor = Color(0xFFB2EBF2);
+
+  late YoutubePlayerController _controller;
+  bool _completed = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _controller = YoutubePlayerController(
+      initialVideoId: 'dQw4w9WgXcQ',
+      flags: const YoutubePlayerFlags(autoPlay: false),
+    );
+    _loadCompletionStatus();
+  }
+  void _loadCompletionStatus() async {
+    final isDone = await LearnProgress.isVideoCompleted(lessonKey, 0);
+    if (mounted) {
+      setState(() => _completed = isDone);
+    }
+  }
+
+  @override
+  void dispose() {
+    _controller.dispose();
+    super.dispose();
+  }
+
+  void _markAsDone() async {
+    await LearnProgress.markVideoCompleted(lessonKey, 0);
+    setState(() => _completed = true);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.expenseTracking.getString(context),
+          style: TextStyle(color: Colors.blueAccent),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView(
+        padding: const EdgeInsets.all(16),
+        children: [
+          Container(
+            decoration: BoxDecoration(
+              color: cardColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(
+                  color: Colors.black12,
+                  blurRadius: 5,
+                  offset: Offset(0, 3),
+                ),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controller),
+                const SizedBox(height: 12),
+                Text(
+                  LocaleData.tourExpenseTitle.getString(context),
+                  style: TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                    color: Colors.black87,
+                  ),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  LocaleData.tourExpenseDesc.getString(context),
+                  style: TextStyle(color: Colors.black54),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed ? null : _markAsDone,
+                    icon: const Icon(Icons.check),
+                    label: Text(
+                      _completed
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/learn.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/learn.dart b/lib/pages/5-learn/learn.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/learn.dart	
@@ -0,0 +1,514 @@
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter/material.dart';
+import 'package:lucide_icons/lucide_icons.dart';
+import 'package:finney/pages/5-learn/financial_learn/smart_spending_tips.dart';
+import 'package:finney/pages/5-learn/financial_learn/simple_budgeting.dart';
+import 'package:finney/pages/5-learn/financial_learn/saving_money_easy.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:finney/pages/5-learn/app_tour/dashboard_edu.dart';
+import 'package:finney/pages/5-learn/app_tour/expense_tracking_edu.dart';
+import 'package:finney/pages/5-learn/app_tour/saving_goals_edu.dart';
+import 'package:finney/pages/5-learn/app_tour/budget_reminder_edu.dart';
+import 'package:finney/pages/5-learn/app_tour/chatbot_edu.dart';
+import 'package:finney/pages/5-learn/app_tour/report_edu.dart';
+import 'package:finney/pages/5-learn/app_tour/learnhub_module_edu.dart';
+import 'package:finney/pages/5-learn/app_tour/settings_edu.dart';
+import 'package:finney/pages/5-learn/quiz/quiz.dart';
+import 'package:finney/pages/5-learn/quiz/quiz_results_page.dart';
+import 'package:finney/pages/5-learn/financial_learn/savings_coach.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+
+class Learn extends StatefulWidget {
+  const Learn({super.key});
+
+  @override
+  State<Learn> createState() => _LearnState();
+}
+
+class _LearnState extends State<Learn> {
+  final TextEditingController _searchController = TextEditingController();
+  String _selectedTab = 'Lessons';
+
+  // Map to store progress and status for each lesson
+  final Map<String, Map<String, dynamic>> _lessonProgress = {};
+
+  List<Map<String, dynamic>> get _lessons => [
+    {
+      'title': LocaleData.smartSpendingTips.getString(context),
+      'icon': LucideIcons.badgeDollarSign,
+      'color': const Color(0xFFB3E5FC),
+      'subtitle': LocaleData.smartSpendingTipsSubtitle.getString(context),
+      'lessonKey': 'smart_spending_tips',
+      'totalVideos': 2,
+      'page': const SmartSpendingTips(),
+    },
+    {
+      'title': LocaleData.simpleBudgetingTitle.getString(context),
+      'icon': LucideIcons.layoutDashboard,
+      'color': const Color(0xFFD1C4E9),
+      'subtitle': LocaleData.simpleBudgetingSubtitle.getString(context),
+      'lessonKey': 'simple_budgeting',
+      'totalVideos': 2,
+      'page': const SimpleBudgeting(),
+    },
+    {
+      'title': LocaleData.savingMoneyEasy.getString(context),
+      'icon': LucideIcons.piggyBank,
+      'color': const Color(0xFFE1D5F0),
+      'subtitle': LocaleData.savingMoneyEasySubtitle.getString(context),
+      'lessonKey': 'saving_money_easy',
+      'totalVideos': 2,
+      'page': const SavingMoneyEasy(),
+    },
+    {
+      'title': LocaleData.savingsCoach.getString(context),
+      'icon': LucideIcons.coins,
+      'color': const Color(0xFFDFF8EB),
+      'subtitle': LocaleData.savingsCoachSubtitle.getString(context),
+      'lessonKey': 'savings_coach',
+      'totalVideos': 0,
+      'status': 'activity',
+      'page': SavingsCoach(),
+    },
+  ];
+
+  List<Map<String, dynamic>> get _appTourLessons => [
+    {
+      'title': LocaleData.dashboard.getString(context),
+      'icon': LucideIcons.layoutDashboard,
+      'color': const Color(0xFFBBDEFB),
+      'subtitle': LocaleData.apptourDashSubtitle.getString(context),
+      'lessonKey': 'dashboard_edu',
+      'totalVideos': 1,
+      'page': const DashboardEduPage(),
+    },
+    {
+      'title': LocaleData.expenseTracking.getString(context),
+      'icon': LucideIcons.fileSpreadsheet,
+      'color': const Color(0xFFB2EBF2),
+      'subtitle': LocaleData.expenseTrackingSubtite.getString(context),
+      'lessonKey': 'expense_tracking_edu',
+      'totalVideos': 1,
+      'page': const ExpenseTrackingEduPage(),
+    },
+    {
+      'title': LocaleData.savingGoals.getString(context),
+      'icon': LucideIcons.flag,
+      'color': const Color(0xFFC5CAE9),
+      'subtitle': LocaleData.savingGoalSubheading.getString(context),
+      'lessonKey': 'saving_goals_edu',
+      'totalVideos': 1,
+      'page': const SavingGoalsEduPage(),
+    },
+    {
+      'title': LocaleData.tourBudgetTitle.getString(context),
+      'icon': LucideIcons.bell,
+      'color': const Color(0xFFDCEDC8),
+      'subtitle': LocaleData.tourBudgetSubTitle.getString(context),
+      'lessonKey': 'budget_reminder_edu',
+      'totalVideos': 1,
+      'page': const BudgetReminderEduPage(),
+    },
+    {
+      'title': LocaleData.tourChatbotTitle.getString(context),
+      'icon': LucideIcons.messageSquare,
+      'color': const Color(0xFFFFCDD2),
+      'subtitle': LocaleData.tourCahtBotSubtite.getString(context),
+      'lessonKey': 'chatbot_edu',
+      'totalVideos': 1,
+      'page': const ChatbotEduPage(),
+    },
+    {
+      'title': LocaleData.tourReportTitle.getString(context),
+      'icon': LucideIcons.barChart,
+      'color': const Color(0xFFC8E6C9),
+      'subtitle': LocaleData.tourReportSubtite.getString(context),
+      'lessonKey': 'report_edu',
+      'totalVideos': 1,
+      'page': const ReportEduPage(),
+    },
+    {
+      'title': LocaleData.learnHub.getString(context),
+      'icon': LucideIcons.bookOpenCheck,
+      'color': const Color(0xFFB3E5FC),
+      'subtitle': LocaleData.learnHubSubtitle.getString(context),
+      'lessonKey': 'learnhub_module_edu',
+      'totalVideos': 1,
+      'page': const LearnhubModuleEduPage(),
+    },
+    {
+      'title': LocaleData.settings.getString(context),
+      'icon': LucideIcons.settings,
+      'color': const Color(0xFFB39DDB),
+      'subtitle': LocaleData.settingSubHeading.getString(context),
+      'lessonKey': 'settings_edu',
+      'totalVideos': 1,
+      'page': const SettingsEduPage(),
+    },
+  ];
+
+  List<Map<String, dynamic>> get _quizItems => [
+    {
+      'title': LocaleData.taketheQuiz.getString(context),
+      'icon': LucideIcons.bookOpen,
+      'color': const Color(0xFFE1BEE7),
+      'subtitle': LocaleData.taketheQuizSubtitle.getString(context),
+      'lessonKey': 'quiz_section',
+      'totalVideos': 0,
+      'page': const QuizPage(),
+    },
+    {
+      'title': LocaleData.viewQuizResult.getString(context),
+      'icon': LucideIcons.barChart,
+      'color': const Color(0xFFE0F7FA),
+      'subtitle': LocaleData.quizResultSubtitle.getString(context),
+      'lessonKey': 'quiz_results',
+      'totalVideos': 0,
+      'page': const QuizResultsPage(),
+    },
+  ];
+
+  @override
+  void initState() {
+    super.initState();
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      _updateLessonStatuses();
+    });
+  }
+
+  Future<void> _updateLessonStatuses() async {
+    for (var lesson in [..._lessons, ..._appTourLessons]) {
+      final String key = lesson['lessonKey'];
+
+      // Initialize progress map for this lesson if needed
+      _lessonProgress[key] ??= {'progress': 0.0, 'status': 'all'};
+
+      // Handle activity status (no videos)
+      if (lesson['status'] == 'activity' || lesson['totalVideos'] == 0) {
+        _lessonProgress[key]!['progress'] = 0.0;
+        _lessonProgress[key]!['status'] = lesson['status'] ?? 'all';
+        continue;
+      }
+
+      final int total = lesson['totalVideos'];
+      final completed = await LearnProgress.getCompletedCount(key, total);
+      final isDone = await LearnProgress.isLessonCompleted(key, total);
+
+      _lessonProgress[key]!['progress'] = completed / total;
+      _lessonProgress[key]!['status'] =
+      isDone ? 'completed' : (completed > 0 ? 'ongoing' : 'all');
+    }
+
+    if (mounted) {
+      setState(() {});
+    }
+  }
+
+  Future<void> _resetAllProgress() async {
+    await LearnProgress.resetAll(
+      [..._lessons, ..._appTourLessons]
+          .where((e) => e['totalVideos'] > 0)
+          .map((e) => e['lessonKey'] as String)
+          .toList(),
+    );
+
+    // Clear our progress map
+    _lessonProgress.clear();
+
+    await _updateLessonStatuses();
+
+    if (mounted) {
+      ScaffoldMessenger.of(context).showSnackBar(
+        SnackBar(content: Text(LocaleData.learningReset.getString(context))),
+      );
+    }
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+    // Update lesson statuses whenever dependencies (like locale) change
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      _updateLessonStatuses();
+    });
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final isQuizTab = _selectedTab == 'Quiz';
+    final isAppTourTab = _selectedTab == 'App Tour';
+    final isLessonsTab = _selectedTab == 'Lessons';
+    final isProgressTab = _selectedTab == 'Progress';
+
+    // Get the base lesson lists
+    final allItems = [..._lessons, ..._appTourLessons];
+
+    // Enhance with progress data from our tracking map
+    final allItemsWithProgress = allItems.map((lesson) {
+      final key = lesson['lessonKey'];
+      final progress = _lessonProgress.containsKey(key)
+          ? _lessonProgress[key]!
+          : {'progress': 0.0, 'status': 'all'};
+      return {
+        ...lesson,
+        'progress': progress['progress'],
+        'status': progress['status'],
+      };
+    }).toList();
+
+    // Filter by status
+    final ongoingLessons =
+    allItemsWithProgress.where((e) => e['status'] == 'ongoing').toList();
+    final completedLessons =
+    allItemsWithProgress.where((e) => e['status'] == 'completed').toList();
+
+    final searchText = _searchController.text.toLowerCase();
+
+    final filteredList = searchText.isNotEmpty
+        ? [...allItemsWithProgress, ..._quizItems]
+        .where((item) => item['title'].toLowerCase().contains(searchText))
+        .toList()
+        : isQuizTab
+        ? _quizItems
+        : isAppTourTab
+        ? allItemsWithProgress
+        .where((e) => _appTourLessons.any(
+          (a) => a['lessonKey'] == e['lessonKey'],
+    ))
+        .toList()
+        : isLessonsTab
+        ? allItemsWithProgress
+        .where((e) => _lessons.any((l) => l['lessonKey'] == e['lessonKey']))
+        .toList()
+        : [];
+
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.learningHub.getString(context),
+          style: TextStyle(
+            fontWeight: FontWeight.bold,
+            fontSize: 24,
+            color: Colors.blueAccent,
+          ),
+        ),
+        automaticallyImplyLeading: false,
+        actions: [
+          if (_selectedTab == 'Lessons' || _selectedTab == 'App Tour')
+            IconButton(
+              icon: const Icon(Icons.refresh, color: Colors.blueAccent),
+              onPressed: _resetAllProgress,
+              tooltip: 'Reset Progress',
+            ),
+        ],
+      ),
+      body: Padding(
+        padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8),
+        child: Column(
+          children: [
+            Row(
+              children: [
+                _buildTab('Lessons'),
+                _buildTab('App Tour'),
+                _buildTab('Progress'),
+                _buildTab('Quiz'),
+              ],
+            ),
+            const SizedBox(height: 16),
+            _buildSearchBar(),
+            const SizedBox(height: 16),
+            Expanded(
+              child: isProgressTab
+                  ? ListView(
+                padding: const EdgeInsets.only(bottom: 24),
+                children: [
+                  Text(
+                    LocaleData.ongoing.getString(context),
+                    style: TextStyle(
+                      fontWeight: FontWeight.bold,
+                      fontSize: 16,
+                    ),
+                  ),
+                  const SizedBox(height: 12),
+                  ...ongoingLessons.map(
+                        (item) => Padding(
+                      padding: const EdgeInsets.only(bottom: 16),
+                      child: _buildCardItem(item),
+                    ),
+                  ),
+                  const SizedBox(height: 24),
+                  Text(
+                    LocaleData.completed.getString(context),
+                    style: TextStyle(
+                      fontWeight: FontWeight.bold,
+                      fontSize: 16,
+                    ),
+                  ),
+                  const SizedBox(height: 12),
+                  ...completedLessons.map(
+                        (item) => Padding(
+                      padding: const EdgeInsets.only(bottom: 16),
+                      child: _buildCardItem(item),
+                    ),
+                  ),
+                ],
+              )
+                  : filteredList.isEmpty
+                  ? Center(
+                child: Text(
+                  LocaleData.noResultsFound.getString(context),
+                ),
+              )
+                  : ListView.separated(
+                itemCount: filteredList.length,
+                separatorBuilder: (_, __) => const SizedBox(height: 16),
+                itemBuilder: (context, index) => _buildCardItem(filteredList[index]),
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildTab(String label) {
+    String localizedLabel;
+    if (label == 'Lessons') {
+      localizedLabel = LocaleData.lessons.getString(context);
+    } else if (label == 'App Tour') {
+      localizedLabel = LocaleData.appTour.getString(context);
+    } else if (label == 'Progress') {
+      localizedLabel = LocaleData.progress.getString(context);
+    } else if (label == 'Quiz') {
+      localizedLabel = LocaleData.quiz.getString(context);
+    } else {
+      localizedLabel = label;
+    }
+    final isActive = _selectedTab == label;
+    return Padding(
+      padding: const EdgeInsets.only(right: 12),
+      child: GestureDetector(
+        onTap: () => setState(() => _selectedTab = label),
+        child: Container(
+          padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+          decoration: BoxDecoration(
+            color: isActive ? Colors.blueAccent : Colors.transparent,
+            borderRadius: BorderRadius.circular(20),
+          ),
+          child: Text(
+            localizedLabel,
+            style: TextStyle(
+              color: isActive ? Colors.white : Colors.grey,
+              fontWeight: FontWeight.w600,
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+
+  Widget _buildSearchBar() {
+    return Container(
+      padding: const EdgeInsets.symmetric(horizontal: 16),
+      decoration: BoxDecoration(
+        color: Colors.white,
+        borderRadius: BorderRadius.circular(16),
+        boxShadow: const [BoxShadow(color: Colors.black12, blurRadius: 4)],
+      ),
+      child: TextField(
+        controller: _searchController,
+        onChanged: (_) => setState(() {}),
+        decoration: InputDecoration(
+          icon: Icon(Icons.search),
+          hintText: LocaleData.searchTextfiedText.getString(context),
+          border: InputBorder.none,
+        ),
+      ),
+    );
+  }
+
+  Widget _buildCardItem(Map<String, dynamic> item) {
+    return GestureDetector(
+      onTap: () async {
+        await Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => item['page']),
+        );
+        if (mounted) {
+          await _updateLessonStatuses();
+        }
+      },
+      child: _buildLessonCard(
+        title: item['title'],
+        icon: item['icon'],
+        backgroundColor: item['color'],
+        subtitle: item['subtitle'],
+        progress: item['progress'] ?? 0.0,
+      ),
+    );
+  }
+
+  Widget _buildLessonCard({
+    required String title,
+    required IconData icon,
+    required Color backgroundColor,
+    required String subtitle,
+    required double progress,
+  }) {
+    return Container(
+      decoration: BoxDecoration(
+        color: backgroundColor,
+        borderRadius: BorderRadius.circular(16),
+      ),
+      padding: const EdgeInsets.all(16),
+      child: Row(
+        children: [
+          Icon(icon, size: 36, color: Colors.black87),
+          const SizedBox(width: 16),
+          Expanded(
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Text(
+                  title,
+                  style: const TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                    color: Colors.black87,
+                  ),
+                ),
+                if (subtitle.isNotEmpty)
+                  Padding(
+                    padding: const EdgeInsets.only(top: 4.0),
+                    child: Text(
+                      subtitle,
+                      style: const TextStyle(
+                        fontSize: 12,
+                        color: Colors.black54,
+                      ),
+                    ),
+                  ),
+                if (progress > 0.0)
+                  Padding(
+                    padding: const EdgeInsets.only(top: 8.0),
+                    child: LinearProgressIndicator(
+                      value: progress,
+                      backgroundColor: Colors.white54,
+                      valueColor: const AlwaysStoppedAnimation<Color>(
+                        Colors.green,
+                      ),
+                    ),
+                  ),
+              ],
+            ),
+          ),
+          const Icon(Icons.arrow_forward_ios, size: 18, color: Colors.grey),
+        ],
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/5-learn/financial_learn/savings_coach.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/financial_learn/savings_coach.dart b/lib/pages/5-learn/financial_learn/savings_coach.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/financial_learn/savings_coach.dart	
@@ -0,0 +1,393 @@
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+import 'package:finney/shared/localization/locales.dart';
+
+class SavingsCoach extends StatefulWidget {
+  const SavingsCoach({super.key});
+
+  @override
+  _SavingsCoachState createState() => _SavingsCoachState();
+}
+
+class _SavingsCoachState extends State<SavingsCoach> {
+  int currentStep = 0;
+  String selectedOption = '';
+  TextEditingController otherController = TextEditingController();
+  List<String> userAnswers = [];
+
+  List<Map<String, dynamic>> get questions => [
+    {
+      'question': LocaleData.coachQ1.getString(context),
+      'options': [
+        LocaleData.coachOptMoneyBoss.getString(context),
+        LocaleData.coachOptDoingOkay.getString(context),
+        LocaleData.coachOptNeedsWork.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ2.getString(context),
+      'options': [
+        LocaleData.coachOpt0_200.getString(context),
+        LocaleData.coachOpt200_500.getString(context),
+        LocaleData.coachOpt500plus.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ3.getString(context),
+      'options': [
+        LocaleData.coachOpt0_1000.getString(context),
+        LocaleData.coachOpt1000_2000.getString(context),
+        LocaleData.coachOpt2000plus.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ4.getString(context),
+      'options': [
+        LocaleData.coachOpt100.getString(context),
+        LocaleData.coachOpt500.getString(context),
+        LocaleData.coachOpt1000plus.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ5.getString(context),
+      'options': [
+        LocaleData.coachOptAlways.getString(context),
+        LocaleData.coachOptSometimes.getString(context),
+        LocaleData.coachOptNotReally.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ6.getString(context),
+      'options': [
+        LocaleData.coachOptFood.getString(context),
+        LocaleData.coachOptShopping.getString(context),
+        LocaleData.coachOptEntertainment.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ7.getString(context),
+      'options': [
+        LocaleData.coachOptAlways.getString(context),
+        LocaleData.coachOptSometimes.getString(context),
+        LocaleData.coachOptNever.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ8.getString(context),
+      'options': [
+        LocaleData.coachOptYes.getString(context),
+        LocaleData.coachOptMaybe.getString(context),
+        LocaleData.coachOptNo.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ9.getString(context),
+      'options': [
+        LocaleData.coachOptYes.getString(context),
+        LocaleData.coachOptSometimes.getString(context),
+        LocaleData.coachOptRarely.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ10.getString(context),
+      'options': [
+        LocaleData.coachOptSaveIt.getString(context),
+        LocaleData.coachOptSpendIt.getString(context),
+        LocaleData.coachOptBoth.getString(context),
+      ],
+    },
+    {
+      'question': LocaleData.coachQ11.getString(context),
+      'options': [
+        LocaleData.coachOptSaveBig.getString(context),
+        LocaleData.coachOptTreats.getString(context),
+        LocaleData.coachOptNotSure.getString(context),
+      ],
+    },
+  ];
+
+  bool get canProceed {
+    return selectedOption.isNotEmpty || otherController.text.trim().isNotEmpty;
+  }
+
+  void nextStep() {
+    String answer =
+    selectedOption.isNotEmpty
+        ? selectedOption
+        : otherController.text.trim();
+    userAnswers.add(answer);
+
+    if (currentStep < questions.length - 1) {
+      setState(() {
+        currentStep++;
+        selectedOption = '';
+        otherController.clear();
+      });
+    } else {
+      Navigator.pushReplacement(
+        context,
+        MaterialPageRoute(
+          builder: (_) => ResultScreen(userAnswers: userAnswers),
+        ),
+      );
+    }
+  }
+
+  Widget buildProgressBar() {
+    return Padding(
+      padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
+      child: LinearProgressIndicator(
+        value: (currentStep + 1) / questions.length,
+        backgroundColor: Colors.white54,
+        valueColor: const AlwaysStoppedAnimation<Color>(Colors.blueAccent),
+      ),
+    );
+  }
+
+  Widget buildCard(Widget child) {
+    return Expanded(
+      child: Padding(
+        padding: const EdgeInsets.all(20),
+        child: Container(
+          width: double.infinity,
+          padding: const EdgeInsets.all(24),
+          decoration: BoxDecoration(
+            color: Colors.white,
+            borderRadius: BorderRadius.circular(24),
+          ),
+          child: child,
+        ),
+      ),
+    );
+  }
+
+  Widget buildOptions(List<String> options) {
+    return Column(
+      children: [
+        ...options.map(
+              (option) => GestureDetector(
+            onTap: () {
+              setState(() {
+                selectedOption = option;
+                otherController.clear();
+              });
+            },
+            child: Container(
+              width: double.infinity,
+              margin: const EdgeInsets.only(bottom: 12),
+              padding: const EdgeInsets.symmetric(vertical: 14, horizontal: 16),
+              decoration: BoxDecoration(
+                color:
+                selectedOption == option
+                    ? Colors.blueAccent.withOpacity(0.2)
+                    : Colors.white,
+                border: Border.all(color: Colors.black12),
+                borderRadius: BorderRadius.circular(16),
+              ),
+              child: Text(option, style: const TextStyle(fontSize: 16)),
+            ),
+          ),
+        ),
+        const SizedBox(height: 12),
+        TextField(
+          controller: otherController,
+          onChanged: (_) => setState(() {}),
+          decoration: InputDecoration(
+            hintText: LocaleData.coachOtherHint.getString(context),
+            filled: true,
+            fillColor: Colors.white,
+            border: OutlineInputBorder(borderRadius: BorderRadius.circular(16)),
+          ),
+        ),
+      ],
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final currentQuestion = questions[currentStep];
+
+    return Scaffold(
+      backgroundColor: const Color(0xFFDFF8EB),
+      appBar: AppBar(
+        backgroundColor: const Color(0xFFDFF8EB),
+        elevation: 0,
+        title: Text(
+          LocaleData.savingsCoach.getString(context),
+          style: TextStyle(color: Colors.black),
+        ),
+        centerTitle: true,
+        iconTheme: const IconThemeData(color: Colors.black),
+      ),
+      body: SafeArea(
+        child: Column(
+          children: [
+            buildProgressBar(),
+            buildCard(
+              SingleChildScrollView(
+                child: Column(
+                  crossAxisAlignment: CrossAxisAlignment.start,
+                  children: [
+                    Text(
+                      currentQuestion['question'],
+                      style: const TextStyle(
+                        fontSize: 20,
+                        fontWeight: FontWeight.bold,
+                      ),
+                    ),
+                    const SizedBox(height: 24),
+                    buildOptions(currentQuestion['options']),
+                  ],
+                ),
+              ),
+            ),
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 16),
+              child: ElevatedButton(
+                onPressed: canProceed ? nextStep : null,
+                style: ElevatedButton.styleFrom(
+                  backgroundColor: Colors.blueAccent,
+                  foregroundColor: Colors.white,
+                  minimumSize: const Size(double.infinity, 50),
+                  shape: RoundedRectangleBorder(
+                    borderRadius: BorderRadius.circular(16),
+                  ),
+                ),
+                child: Text(
+                  currentStep == questions.length - 1
+                      ? LocaleData.coachSeeResult.getString(context)
+                      : LocaleData.coachNext.getString(context),
+                ),
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+class ResultScreen extends StatefulWidget {
+  final List<String> userAnswers;
+
+  const ResultScreen({super.key, required this.userAnswers});
+
+  @override
+  State<ResultScreen> createState() => _ResultScreenState();
+}
+
+class _ResultScreenState extends State<ResultScreen> {
+  String generateAdvice() {
+    String savingRange = widget.userAnswers[1];
+    String spendingRange = widget.userAnswers[2];
+    String bigSpendArea = widget.userAnswers[5];
+    String tracksExpenses = widget.userAnswers[6];
+    String willingToAdjust = widget.userAnswers[7];
+
+    String advice = "";
+
+    if (savingRange == "\$0-\$200") {
+      advice += LocaleData.coachSavingSmall.getString(context);
+    } else if (savingRange == "\$200-\$500") {
+      advice += LocaleData.coachOnYourWay.getString(context);
+    } else {
+      advice += LocaleData.coachPraiseGreat.getString(context);
+    }
+
+    if (spendingRange == "\$2000+") {
+      advice += LocaleData.coachSpendingHigh
+          .getString(context)
+          .replaceFirst('%s', bigSpendArea);
+    } else if (spendingRange == "\$1000-\$2000") {
+      advice += LocaleData.coachSpendingMedium
+          .getString(context)
+          .replaceFirst('%s', bigSpendArea);
+    } else {
+      advice += LocaleData.coachSpendingHealthy.getString(context);
+    }
+
+    if (tracksExpenses == LocaleData.never.getString(context)) {
+      advice += LocaleData.coachTrackStart.getString(context);
+    } else if (tracksExpenses == LocaleData.sometimes.getString(context)) {
+      advice += LocaleData.coachTrackMore.getString(context);
+    }
+
+    if (willingToAdjust == LocaleData.no.getString(context)) {
+      advice += LocaleData.coachAdjustNo.getString(context);
+    } else if (willingToAdjust == LocaleData.maybe.getString(context)) {
+      advice += LocaleData.coachAdjustMaybe.getString(context);
+    } else {
+      advice += LocaleData.coachAdjustYes.getString(context);
+    }
+
+    return advice;
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    String advice = generateAdvice();
+
+    return Scaffold(
+      backgroundColor: const Color(0xFFDFF8EB),
+      appBar: AppBar(
+        backgroundColor: const Color(0xFFDFF8EB),
+        elevation: 0,
+        title: Text(
+          LocaleData.coachSavingPlan.getString(context),
+          style: TextStyle(color: Colors.black),
+        ),
+        centerTitle: true,
+        iconTheme: const IconThemeData(color: Colors.black),
+      ),
+      body: Center(
+        child: Padding(
+          padding: const EdgeInsets.all(24),
+          child: Container(
+            padding: const EdgeInsets.all(24),
+            decoration: BoxDecoration(
+              color: Colors.white,
+              borderRadius: BorderRadius.circular(24),
+            ),
+            width: double.infinity,
+            child: Column(
+              mainAxisSize: MainAxisSize.min,
+              children: [
+                Text(
+                  LocaleData.coachAdviceTitle.getString(context),
+                  style: const TextStyle(
+                    fontSize: 20,
+                    fontWeight: FontWeight.bold,
+                  ),
+                  textAlign: TextAlign.center,
+                ),
+                const SizedBox(height: 24),
+                Text(
+                  advice,
+                  textAlign: TextAlign.center,
+                  style: const TextStyle(fontSize: 16),
+                ),
+                const SizedBox(height: 32),
+                ElevatedButton(
+                  onPressed: () {
+                    Navigator.pushReplacement(
+                      context,
+                      MaterialPageRoute(builder: (_) => SavingsCoach()),
+                    );
+                  },
+                  style: ElevatedButton.styleFrom(
+                    backgroundColor: Colors.blueAccent,
+                    foregroundColor: Colors.white,
+                    shape: RoundedRectangleBorder(
+                      borderRadius: BorderRadius.circular(16),
+                    ),
+                  ),
+                  child: Text(LocaleData.coachRestart.getString(context)),
+                ),
+              ],
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/financial_learn/learn_progress.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/financial_learn/learn_progress.dart b/lib/pages/5-learn/financial_learn/learn_progress.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/financial_learn/learn_progress.dart	
@@ -0,0 +1,30 @@
+import 'package:finney/core/storage/storage_manager.dart';
+import 'package:finney/core/storage/cloud/service/learning_cloud_service.dart';
+
+class LearnProgress {
+  static final LearningCloudService _learningService = StorageManager().learningService;
+
+  static Future<void> markVideoCompleted(String lessonKey, int videoIndex) async {
+    await _learningService.markVideoCompleted(lessonKey, videoIndex);
+  }
+
+  static Future<bool> isVideoCompleted(String lessonKey, int videoIndex) async {
+    return await _learningService.isVideoCompleted(lessonKey, videoIndex);
+  }
+
+  static Future<int> getCompletedCount(String lessonKey, int totalVideos) async {
+    return await _learningService.getCompletedCount(lessonKey, totalVideos);
+  }
+
+  static Future<bool> isLessonCompleted(String lessonKey, int totalVideos) async {
+    return await _learningService.isLessonCompleted(lessonKey, totalVideos);
+  }
+
+  static Future<void> resetAll(List<String> lessonKeys) async {
+    await _learningService.resetAllLessons(lessonKeys);
+  }
+
+  static Stream<Map<String, bool>> streamLessonProgress(String lessonKey) {
+    return _learningService.streamLessonProgress(lessonKey);
+  }
+}
Index: lib/pages/5-learn/financial_learn/simple_budgeting.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/financial_learn/simple_budgeting.dart b/lib/pages/5-learn/financial_learn/simple_budgeting.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/financial_learn/simple_budgeting.dart	
@@ -0,0 +1,167 @@
+import 'package:flutter/material.dart';
+import 'package:lucide_icons/lucide_icons.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+
+class SimpleBudgeting extends StatefulWidget {
+  const SimpleBudgeting({super.key});
+
+  @override
+  State<SimpleBudgeting> createState() => _SimpleBudgetingState();
+}
+
+class _SimpleBudgetingState extends State<SimpleBudgeting> {
+  final String lessonKey = 'simple_budgeting';
+
+  late List<YoutubePlayerController> _controllers;
+  late List<bool> _completed;
+  late List<Map<String, String>> _steps;
+
+  final Color contentColor = Color(0xFFD1C4E9);
+
+  @override
+  void initState() {
+    super.initState();
+    _steps = [];
+    _completed = [];
+    _controllers = [];
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+
+    _steps = [
+      {
+        'title': LocaleData.simpleBudgetingvideo1Title.getString(context),
+        'description': LocaleData.simpleBudgetingvideo1Subtitle.getString(context),
+        'videoId': 'ycPRDF4WOhw',
+      },
+      {
+        'title': LocaleData.simpleBudgetingvideo2Title.getString(context),
+        'description': LocaleData.simpleBudgetingvideo2Subtitle.getString(context),
+        'videoId': 'ngVpfw8K7K8',
+      },
+    ];
+
+    _completed = List.generate(_steps.length, (_) => false);
+
+    _controllers = _steps.map((step) {
+      return YoutubePlayerController(
+        initialVideoId: step['videoId']!,
+        flags: const YoutubePlayerFlags(autoPlay: false),
+      );
+    }).toList();
+
+    _loadCompletionStatus();
+    setState(() {}); // refresh UI
+  }
+
+  Future<void> _loadCompletionStatus() async {
+    for (int i = 0; i < _steps.length; i++) {
+      final done = await LearnProgress.isVideoCompleted(lessonKey, i);
+      if (mounted) {
+        setState(() {
+          _completed[i] = done;
+        });
+      }
+    }
+  }
+
+  void _markStepCompleted(int index) async {
+    await LearnProgress.markVideoCompleted(lessonKey, index);
+    setState(() {
+      _completed[index] = true;
+    });
+  }
+
+  @override
+  void dispose() {
+    for (final controller in _controllers) {
+      controller.dispose();
+    }
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.simpleBudgetingTitle.getString(context),
+          style: TextStyle(
+            fontWeight: FontWeight.bold,
+            color: Colors.blueAccent,
+          ),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView.separated(
+        padding: const EdgeInsets.all(16),
+        separatorBuilder: (_, __) => const SizedBox(height: 24),
+        itemCount: _steps.length,
+        itemBuilder: (context, index) {
+          final step = _steps[index];
+          return Container(
+            decoration: BoxDecoration(
+              color: contentColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(
+                  color: Colors.black12,
+                  blurRadius: 5,
+                  offset: Offset(0, 3),
+                ),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controllers[index]),
+                const SizedBox(height: 12),
+                Text(
+                  step['title']!,
+                  style: const TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                    color: Colors.black87,
+                  ),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  step['description']!,
+                  style: const TextStyle(color: Colors.black54, fontSize: 14),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed[index]
+                        ? null
+                        : () => _markStepCompleted(index),
+                    icon: const Icon(LucideIcons.check),
+                    label: Text(
+                      _completed[index]
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor:
+                      _completed[index] ? Colors.green[300] : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          );
+        },
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/financial_learn/saving_money_easy.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/financial_learn/saving_money_easy.dart b/lib/pages/5-learn/financial_learn/saving_money_easy.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/financial_learn/saving_money_easy.dart	
@@ -0,0 +1,168 @@
+import 'package:flutter/material.dart';
+import 'package:lucide_icons/lucide_icons.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+
+class SavingMoneyEasy extends StatefulWidget {
+  const SavingMoneyEasy({super.key});
+
+  @override
+  State<SavingMoneyEasy> createState() => _SavingMoneyEasyState();
+}
+
+class _SavingMoneyEasyState extends State<SavingMoneyEasy> {
+  final String lessonKey = 'saving_money_easy';
+
+  late List<YoutubePlayerController> _controllers;
+  late List<bool> _completed;
+  late List<Map<String, String>> _steps;
+
+  final Color contentColor = Color(0xFFE1D5F0);
+
+  @override
+  void initState() {
+    super.initState();
+    _steps = [];
+    _completed = [];
+    _controllers = [];
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+
+    _steps = [
+      {
+        'title': LocaleData.savingMoneyVideo1Title.getString(context),
+        'description': LocaleData.savingMoneyVideo1Subtitle.getString(context),
+        'videoId': 'RUz9yjgnGi8',
+      },
+      {
+        'title': LocaleData.savingMoneyVideo2Title.getString(context),
+        'description': LocaleData.savingMoneyVideo2Subtitle.getString(context),
+        'videoId': 'QNu4u0XsIoM',
+      },
+    ];
+
+    _completed = List.generate(_steps.length, (_) => false);
+
+    _controllers = _steps.map((step) {
+      return YoutubePlayerController(
+        initialVideoId: step['videoId']!,
+        flags: const YoutubePlayerFlags(autoPlay: false),
+      );
+    }).toList();
+
+    _loadCompletionStatus();
+    setState(() {}); // optional UI refresh
+  }
+
+  Future<void> _loadCompletionStatus() async {
+    for (int i = 0; i < _steps.length; i++) {
+      final done = await LearnProgress.isVideoCompleted(lessonKey, i);
+      if (mounted) {
+        setState(() {
+          _completed[i] = done;
+        });
+      }
+    }
+  }
+
+  void _markStepCompleted(int index) async {
+    await LearnProgress.markVideoCompleted(lessonKey, index);
+    setState(() {
+      _completed[index] = true;
+    });
+  }
+
+  @override
+  void dispose() {
+    for (final controller in _controllers) {
+      controller.dispose();
+    }
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.savingMoneyEasy.getString(context),
+          style: TextStyle(
+            fontWeight: FontWeight.bold,
+            color: Colors.blueAccent,
+          ),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView.separated(
+        padding: const EdgeInsets.all(16),
+        separatorBuilder: (_, __) => const SizedBox(height: 24),
+        itemCount: _steps.length,
+        itemBuilder: (context, index) {
+          final step = _steps[index];
+          return Container(
+            decoration: BoxDecoration(
+              color: contentColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(
+                  color: Colors.black12,
+                  blurRadius: 5,
+                  offset: Offset(0, 3),
+                ),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controllers[index]),
+                const SizedBox(height: 12),
+                Text(
+                  step['title']!,
+                  style: const TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                    color: Colors.black87,
+                  ),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  step['description']!,
+                  style: const TextStyle(color: Colors.black54, fontSize: 14),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed[index]
+                        ? null
+                        : () => _markStepCompleted(index),
+                    icon: const Icon(LucideIcons.check),
+                    label: Text(
+                      _completed[index]
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor: _completed[index]
+                          ? Colors.green[300]
+                          : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          );
+        },
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/financial_learn/smart_spending_tips.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/financial_learn/smart_spending_tips.dart b/lib/pages/5-learn/financial_learn/smart_spending_tips.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/financial_learn/smart_spending_tips.dart	
@@ -0,0 +1,168 @@
+import 'package:flutter/material.dart';
+import 'package:lucide_icons/lucide_icons.dart';
+import 'package:youtube_player_flutter/youtube_player_flutter.dart';
+import 'package:finney/pages/5-learn/financial_learn/learn_progress.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart' hide getString;
+
+class SmartSpendingTips extends StatefulWidget {
+  const SmartSpendingTips({super.key});
+
+  @override
+  State<SmartSpendingTips> createState() => _SmartSpendingTipsState();
+}
+
+class _SmartSpendingTipsState extends State<SmartSpendingTips> {
+  final String lessonKey = 'smart_spending_tips';
+
+  late List<YoutubePlayerController> _controllers;
+  late List<bool> _completed;
+  late List<Map<String, String>> _steps;
+
+  final Color contentColor = Color(0xFFE0E7FA);
+
+  @override
+  void initState() {
+    super.initState();
+    _steps = [];
+    _completed = [];
+    _controllers = [];
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+
+    _steps = [
+      {
+        'title': LocaleData.spendingVideo1Title.getString(context),
+        'description': LocaleData.spendingVideo1Subtitle.getString(context),
+        'videoId': 'Vwb07EXFgfA',
+      },
+      {
+        'title': LocaleData.spendingVideo2Title.getString(context),
+        'description': LocaleData.spendingVideo2Subtitle.getString(context),
+        'videoId': 'f-FMn43hR34',
+      },
+    ];
+
+    _completed = List.generate(_steps.length, (_) => false);
+
+    _controllers = _steps.map((step) {
+      return YoutubePlayerController(
+        initialVideoId: step['videoId']!,
+        flags: const YoutubePlayerFlags(autoPlay: false),
+      );
+    }).toList();
+
+    _loadCompletionStatus();
+    setState(() {}); // Refresh UI after localization
+  }
+
+  Future<void> _loadCompletionStatus() async {
+    for (int i = 0; i < _steps.length; i++) {
+      final done = await LearnProgress.isVideoCompleted(lessonKey, i);
+      if (mounted) {
+        setState(() {
+          _completed[i] = done;
+        });
+      }
+    }
+  }
+
+  void _markStepCompleted(int index) async {
+    await LearnProgress.markVideoCompleted(lessonKey, index);
+    setState(() {
+      _completed[index] = true;
+    });
+  }
+
+  @override
+  void dispose() {
+    for (final controller in _controllers) {
+      controller.dispose();
+    }
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: const Color(0xFFF5F7FB),
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.smartSpendingTips.getString(context),
+          style: TextStyle(
+            fontWeight: FontWeight.bold,
+            color: Colors.blueAccent,
+          ),
+        ),
+        iconTheme: const IconThemeData(color: Colors.blueAccent),
+      ),
+      body: ListView.separated(
+        padding: const EdgeInsets.all(16),
+        separatorBuilder: (_, __) => const SizedBox(height: 24),
+        itemCount: _steps.length,
+        itemBuilder: (context, index) {
+          final step = _steps[index];
+          return Container(
+            decoration: BoxDecoration(
+              color: contentColor,
+              borderRadius: BorderRadius.circular(20),
+              boxShadow: const [
+                BoxShadow(
+                  color: Colors.black12,
+                  blurRadius: 5,
+                  offset: Offset(0, 3),
+                ),
+              ],
+            ),
+            padding: const EdgeInsets.all(16),
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                YoutubePlayer(controller: _controllers[index]),
+                const SizedBox(height: 12),
+                Text(
+                  step['title']!,
+                  style: const TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                    color: Colors.black87,
+                  ),
+                ),
+                const SizedBox(height: 8),
+                Text(
+                  step['description']!,
+                  style: const TextStyle(color: Colors.black54, fontSize: 14),
+                ),
+                const SizedBox(height: 12),
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: ElevatedButton.icon(
+                    onPressed: _completed[index]
+                        ? null
+                        : () => _markStepCompleted(index),
+                    icon: const Icon(LucideIcons.check),
+                    label: Text(
+                      _completed[index]
+                          ? LocaleData.completed.getString(context)
+                          : LocaleData.tourMarkDone.getString(context),
+                    ),
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor: _completed[index]
+                          ? Colors.green[300]
+                          : Colors.blueAccent,
+                    ),
+                  ),
+                ),
+              ],
+            ),
+          );
+        },
+      ),
+    );
+  }
+}
Index: lib/pages/5-learn/string_extension.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/5-learn/string_extension.dart b/lib/pages/5-learn/string_extension.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/5-learn/string_extension.dart	
@@ -0,0 +1,10 @@
+import 'package:flutter/widgets.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+extension FinneyStringExtension on String {
+  String getString(BuildContext context) {
+    final locale = Localizations.localeOf(context).languageCode;
+    if (locale == 'bn') return LocaleData.bn[this] ?? this;
+    return LocaleData.en[this] ?? this;
+  }
+}
Index: lib/pages/4-saving/services/saving_notification_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/4-saving/services/saving_notification_service.dart b/lib/pages/4-saving/services/saving_notification_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/4-saving/services/saving_notification_service.dart	
@@ -0,0 +1,104 @@
+import 'package:flutter/material.dart';
+//import 'package:flutter_localization/flutter_localization.dart';
+//import 'package:finney/localization/locales.dart';
+
+class SavingNotificationService {
+  // Color constants
+  static const _successColor = Color(0xFF4CAF50);
+  static const _errorColor = Color(0xFFF44336);
+  static const _infoColor = Color(0xFF2196F3);
+  static const _warningColor = Color(0xFFFFA000);
+
+  static void showSuccess({
+    required BuildContext context,
+    required String message,
+    Duration duration = const Duration(seconds: 3),
+  }) {
+    _showSnackBar(
+      context: context,
+      message: message,
+      backgroundColor: _successColor,
+      icon: Icons.check_circle_outline,
+      duration: duration,
+    );
+  }
+
+  static void showError({
+    required BuildContext context,
+    required String message,
+    Duration duration = const Duration(seconds: 4),
+  }) {
+    _showSnackBar(
+      context: context,
+      message: message,
+      backgroundColor: _errorColor,
+      icon: Icons.error_outline,
+      duration: duration,
+    );
+  }
+
+  static void showInfo({
+    required BuildContext context,
+    required String message,
+    Duration duration = const Duration(seconds: 3),
+  }) {
+    _showSnackBar(
+      context: context,
+      message: message,
+      backgroundColor: _infoColor,
+      icon: Icons.info_outline,
+      duration: duration,
+    );
+  }
+
+  static void showWarning({
+    required BuildContext context,
+    required String message,
+    Duration duration = const Duration(seconds: 4),
+  }) {
+    _showSnackBar(
+      context: context,
+      message: message,
+      backgroundColor: _warningColor,
+      icon: Icons.warning_amber_outlined,
+      duration: duration,
+    );
+  }
+
+  static void _showSnackBar({
+    required BuildContext context,
+    required String message,
+    required Color backgroundColor,
+    required IconData icon,
+    required Duration duration,
+  }) {
+    ScaffoldMessenger.of(context).showSnackBar(
+      SnackBar(
+        content: Row(
+          children: [
+            Icon(icon, color: Colors.white),
+            const SizedBox(width: 12),
+            Expanded(
+              child: Text(
+                message,
+                style: const TextStyle(
+                  fontSize: 16,
+                  fontWeight: FontWeight.w500,
+                ),
+              ),
+            ),
+          ],
+        ),
+        backgroundColor: backgroundColor,
+        behavior: SnackBarBehavior.floating,
+        shape: RoundedRectangleBorder(
+          borderRadius: BorderRadius.circular(12),
+        ),
+        duration: duration,
+        margin: const EdgeInsets.all(16),
+        elevation: 6,
+        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
+      ),
+    );
+  }
+} 
\ No newline at end of file
Index: lib/pages/4-saving/add_saving/saving_goal_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/4-saving/add_saving/saving_goal_page.dart b/lib/pages/4-saving/add_saving/saving_goal_page.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/4-saving/add_saving/saving_goal_page.dart	
@@ -0,0 +1,447 @@
+import 'package:flutter/material.dart';
+import 'package:finney/core/storage/cloud/models/saving_goal_model.dart';
+import 'package:finney/core/storage/cloud/service/saving_goal_service.dart';
+import 'package:finney/pages/4-saving/add_saving/add_edit_goal_page.dart';
+import 'package:finney/pages/3-dashboard/widgets/goal_card.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart'; 
+
+class SavingGoalPage extends StatefulWidget {
+  const SavingGoalPage({super.key});
+
+  @override
+  SavingGoalPageState createState() => SavingGoalPageState();
+}
+
+class SavingGoalPageState extends State<SavingGoalPage> {
+  final SavingGoalService _goalService = SavingGoalService();
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Colors.grey[50],
+      appBar: AppBar(
+        title: Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          children: [
+            Text(
+              LocaleData.mySavingGoals.getString(context),
+              style: const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
+            ),
+            ElevatedButton.icon(
+              onPressed: _navigateToAddGoal,
+              icon: const Icon(Icons.add_circle_outline, size: 20),
+              label: Text(
+                LocaleData.newGoal.getString(context),
+                style: const TextStyle(fontSize: 14)),
+              style: ElevatedButton.styleFrom(
+                backgroundColor: Colors.green, 
+                foregroundColor: Colors.white,
+                elevation: 0,
+                shape: RoundedRectangleBorder(
+                  borderRadius: BorderRadius.circular(17.5),
+                ),
+                padding: const EdgeInsets.symmetric(
+                  horizontal: 12,
+                  vertical: 8,
+                ),
+              ),
+            ),
+          ],
+        ),
+        centerTitle: false,
+        leading: IconButton(
+          icon: const Icon(Icons.arrow_back_rounded, size: 28),
+          onPressed: () => Navigator.of(context).pop(),
+        ),
+        actions: [
+          IconButton(
+            icon: const Icon(Icons.help_outline_rounded, size: 28),
+            onPressed: _showSavingsInfo,
+          ),
+        ],
+      ),
+      body: StreamBuilder<List<SavingGoal>>(
+        stream: _goalService.getGoals(),
+        builder: (context, snapshot) {
+          if (snapshot.connectionState == ConnectionState.waiting) {
+            return Center(
+              child: Column(
+                mainAxisAlignment: MainAxisAlignment.center,
+                children: [
+                  const CircularProgressIndicator(),
+                  const SizedBox(height: 20),
+                  Text(
+                    LocaleData.loadingGoals.getString(context),
+                    style: TextStyle(fontSize: 16, color: Colors.grey[600]),
+                  ),
+                ],
+              ),
+            );
+          }
+
+          if (!snapshot.hasData || snapshot.data!.isEmpty) {
+            return Center(
+              child: Column(
+                mainAxisAlignment: MainAxisAlignment.center,
+                children: [
+                  Icon(
+                    Icons.savings_outlined,
+                    size: 80,
+                    color: Colors.grey[400],
+                  ),
+                  const SizedBox(height: 20),
+                  Text(
+                    LocaleData.noSavingGoals.getString(context),
+                    style: TextStyle(fontSize: 18, color: Colors.grey[700]),
+                  ),
+                  const SizedBox(height: 16),
+                  ElevatedButton.icon(
+                    onPressed: _navigateToAddGoal,
+                    icon: const Icon(Icons.add_circle_outline),
+                    label: Text(LocaleData.createFirstGoal.getString(context)),
+                    style: ElevatedButton.styleFrom(
+                      padding: const EdgeInsets.symmetric(
+                        horizontal: 24,
+                        vertical: 16,
+                      ),
+                      shape: RoundedRectangleBorder(
+                        borderRadius: BorderRadius.circular(12),
+                      ),
+                    ),
+                  ),
+                ],
+              ),
+            );
+          }
+
+          final goals = snapshot.data!;
+
+          return Column(
+            children: [
+              // Progress Card
+              Padding(
+                padding: const EdgeInsets.all(16.0),
+                child: Card(
+                  elevation: 2,
+                  shape: RoundedRectangleBorder(
+                    borderRadius: BorderRadius.circular(16),
+                  ),
+                  child: Padding(
+                    padding: const EdgeInsets.all(16),
+                    child: _buildTotalSavingsProgress(goals),
+                  ),
+                ),
+              ),
+
+              // Goals List
+              Expanded(
+                child: RefreshIndicator(
+                  onRefresh: _refreshGoals,
+                  color: AppColors.primary, 
+                  child: ListView.builder(
+                    padding: const EdgeInsets.symmetric(horizontal: 16),
+                    itemCount: goals.length,
+                    itemBuilder:
+                        (context, index) => Padding(
+                          padding: const EdgeInsets.only(bottom: 12),
+                          child: GoalCard(
+                            goal: goals[index],
+                            onTap: () => _navigateToEditGoal(goals[index]),
+                            onAddSavings:
+                                (amount) => _addToSavings(goals[index], amount),
+                            onDelete: () => _deleteGoal(goals[index]),
+                          ),
+                        ),
+                  ),
+                ),
+              ),
+            ],
+          );
+        },
+      ),
+    );
+  }
+
+  Widget _buildTotalSavingsProgress(List<SavingGoal> goals) {
+    final totalTarget = goals.fold(0.0, (sum, goal) => sum + goal.targetAmount);
+    final totalSaved = goals.fold(0.0, (sum, goal) => sum + goal.savedAmount);
+    final progress = totalTarget > 0 ? totalSaved / totalTarget : 0;
+    final percentage = (progress * 100).toStringAsFixed(1);
+
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Row(
+          children: [
+            Icon(Icons.bar_chart_rounded, color: AppColors.primary, size: 24),
+            const SizedBox(width: 8),
+            Text(
+              LocaleData.totalSavingsProgress.getString(context),
+              style: const TextStyle(
+                fontSize: 14,
+                fontWeight: FontWeight.bold,
+                color: Colors.grey,
+              ),
+            ),
+          ],
+        ),
+        const SizedBox(height: 16),
+        LinearProgressIndicator(
+          value: progress.toDouble(),
+          minHeight: 12,
+          backgroundColor: Colors.grey[200],
+          valueColor: AlwaysStoppedAnimation<Color>(Colors.green), 
+          borderRadius: BorderRadius.circular(6),
+        ),
+        const SizedBox(height: 12),
+        Row(
+          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+          children: [
+            Text(
+              LocaleData.percentComplete.getString(context).replaceFirst(
+                '%s',
+                percentage,
+              ),
+              style: TextStyle(
+                fontSize: 14,
+                fontWeight: FontWeight.bold,
+                color: Colors.green,
+              ),
+            ),
+            Text(
+              LocaleData.savingsOfTarget.getString(context).replaceFirst(
+                '%s',
+                '৳${totalSaved.toStringAsFixed(2)}',
+              ).replaceFirst(
+                '%s',
+                '৳${totalTarget.toStringAsFixed(2)}',
+              ),
+              style: const TextStyle(fontSize: 14, fontWeight: FontWeight.bold),
+            ),
+          ],
+        ),
+      ],
+    );
+  }
+
+  Future<void> _refreshGoals() async {
+    AppSnackBar.showInfo(
+      context,
+      message: LocaleData.goalsRefreshed.getString(context),
+    );
+    setState(() {});
+  }
+
+  void _navigateToAddGoal() {
+    Navigator.push(
+      context,
+      MaterialPageRoute(
+        builder: (_) => AddEditGoalPage(
+          onGoalSaved: (SavingGoal goal) {
+            AppSnackBar.showSuccess(
+              context,
+              message: LocaleData.goalCreated.getString(context).replaceFirst('%s', goal.title),
+            );
+          },
+        ),
+      ),
+    ); 
+  }
+
+  void _navigateToEditGoal(SavingGoal goal) {
+    Navigator.push(
+      context,
+      MaterialPageRoute(
+        builder: (_) => AddEditGoalPage(
+          existingGoal: goal,
+          onGoalSaved: (SavingGoal updatedGoal) {
+            AppSnackBar.showSuccess(
+              context,
+              message: LocaleData.goalUpdated.getString(context).replaceFirst('%s', updatedGoal.title),
+            );
+          },
+          onGoalDeleted: () {
+            AppSnackBar.showError(
+              context,
+              message: LocaleData.goalWasDeleted.getString(context),
+            );
+          },
+        ),
+      ),
+    );
+  }
+
+  Future<void> _addToSavings(SavingGoal goal, double amount) async {
+    final success = await _goalService.addToSavings(goal.id, amount, context);
+    
+    if (success) {
+      AppSnackBar.showSuccess(
+        context,
+        message: LocaleData.addedToSavings.getString(context)
+            .replaceFirst('%s', amount.toString())
+            .replaceFirst('%s', goal.title),
+      );
+    }
+  }
+
+  Future<void> _deleteGoal(SavingGoal goal) async {
+    final confirmed = await showDialog<bool>(
+      context: context,
+      builder: (context) => AlertDialog(
+        shape: RoundedRectangleBorder(
+          borderRadius: BorderRadius.circular(16),
+        ),
+        title: Row(
+          children: [
+            Icon(Icons.warning_amber_rounded, color: Colors.redAccent), 
+            const SizedBox(width: 12),
+            Text(LocaleData.deleteGoalQuestion.getString(context)),
+          ],
+        ),
+        content: Text(LocaleData.confirmDeleteGoalPermanent.getString(context).replaceFirst(
+          '%s',
+          goal.title,
+        )),
+        actions: [
+          TextButton(
+            onPressed: () => Navigator.pop(context, false),
+            child: Text(LocaleData.cancel.getString(context)),
+          ),
+          ElevatedButton(
+            style: ElevatedButton.styleFrom(backgroundColor: Colors.redAccent), 
+            onPressed: () => Navigator.pop(context, true),
+            child: Text(
+              LocaleData.delete.getString(context),
+              style: const TextStyle(color: Colors.white),
+            ),
+          ),
+        ],
+      ),
+    );
+
+    if (confirmed == true) {
+      try {
+        await _goalService.deleteGoal(goal.id);
+        AppSnackBar.showSuccess(
+          context,
+          message: LocaleData.goalDeleted.getString(context).replaceFirst('%s', goal.title),
+        );
+      } catch (e) {
+        AppSnackBar.showError(
+          context,
+          message: LocaleData.couldNotDeleteGoal.getString(context),
+        );
+      }
+    }
+  }
+
+  void _showSavingsInfo() {
+    showDialog(
+      context: context,
+      builder:
+          (context) => Dialog(
+            shape: RoundedRectangleBorder(
+              borderRadius: BorderRadius.circular(16),
+            ),
+            child: Padding(
+              padding: const EdgeInsets.all(24),
+              child: Column(
+                mainAxisSize: MainAxisSize.min,
+                children: [
+                  Row(
+                    children: [
+                      Icon(Icons.savings_rounded, size: 32, color: AppColors.categoryFood), // Changed from _infoColor to categoryFood
+                      const SizedBox(width: 12),
+                      Text(
+                        LocaleData.aboutSavingGoals.getString(context),
+                        style: TextStyle(
+                          fontSize: 20,
+                          fontWeight: FontWeight.bold,
+                          color: AppColors.categoryFood, // Changed from _infoColor to categoryFood
+                        ),
+                      ),
+                    ],
+                  ),
+                  const SizedBox(height: 24),
+                  _buildInfoTip(
+                    Icons.track_changes_rounded,
+                    LocaleData.trackProgress.getString(context),
+                    LocaleData.trackProgressDescription.getString(context),
+                  ),
+                  const SizedBox(height: 16),
+                  _buildInfoTip(
+                    Icons.attach_money_rounded,
+                    LocaleData.addMoneyAnytime.getString(context),
+                    LocaleData.addMoneyAnytimeDescription.getString(context),
+                  ),
+                  const SizedBox(height: 16),
+                  _buildInfoTip(
+                    Icons.calendar_today_rounded,
+                    LocaleData.setTargetDates.getString(context),
+                    LocaleData.setTargetDatesDescription.getString(context),
+                  ),
+                  const SizedBox(height: 24),
+                  SizedBox(
+                    width: double.infinity,
+                    child: ElevatedButton(
+                      style: ElevatedButton.styleFrom(
+                        backgroundColor: AppColors.primary, 
+                        padding: const EdgeInsets.symmetric(vertical: 16),
+                        shape: RoundedRectangleBorder(
+                          borderRadius: BorderRadius.circular(12),
+                        ),
+                      ),
+                      onPressed: () => Navigator.pop(context),
+                      child: const Text(
+                        "Got It",
+                        style: TextStyle(
+                          fontSize: 16,
+                          fontWeight: FontWeight.bold,
+                          color: Colors.white,
+                        ),
+                      ),
+                    ),
+                  ),
+                ],
+              ),
+            ),
+          ),
+    );
+  }
+
+  Widget _buildInfoTip(IconData icon, String title, String description) {
+    return Row(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        Icon(icon, size: 24, color: AppColors.primary), 
+        const SizedBox(width: 12),
+        Expanded(
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              Text(
+                title,
+                style: const TextStyle(
+                  fontSize: 16,
+                  fontWeight: FontWeight.bold,
+                ),
+              ),
+              const SizedBox(height: 4),
+              Text(
+                description,
+                style: TextStyle(
+                  fontSize: 14,
+                  color: Colors.grey[700],
+                  height: 1.4,
+                ),
+              ),
+            ],
+          ),
+        ),
+      ],
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/4-saving/add_saving/add_edit_goal_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/4-saving/add_saving/add_edit_goal_page.dart b/lib/pages/4-saving/add_saving/add_edit_goal_page.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/4-saving/add_saving/add_edit_goal_page.dart	
@@ -0,0 +1,312 @@
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+import 'package:cloud_firestore/cloud_firestore.dart';
+import 'package:finney/core/storage/cloud/models/saving_goal_model.dart';
+import 'package:finney/pages/4-saving/services/saving_notification_service.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class AddEditGoalPage extends StatefulWidget {
+  final SavingGoal? existingGoal;
+  final Function(SavingGoal)? onGoalSaved;
+  final VoidCallback? onGoalDeleted;
+
+  const AddEditGoalPage({
+    super.key,
+    this.existingGoal,
+    this.onGoalSaved,
+    this.onGoalDeleted,
+  });
+
+  @override
+  State<AddEditGoalPage> createState() => _AddEditGoalPageState();
+}
+
+class _AddEditGoalPageState extends State<AddEditGoalPage> {
+  final _formKey = GlobalKey<FormState>();
+  final _titleController = TextEditingController();
+  final _targetAmountController = TextEditingController();
+  final _descriptionController = TextEditingController();
+  DateTime _selectedDate = DateTime.now().add(const Duration(days: 30));
+
+  @override
+  void initState() {
+    super.initState();
+    if (widget.existingGoal != null) {
+      _titleController.text = widget.existingGoal!.title;
+      _targetAmountController.text =
+          widget.existingGoal!.targetAmount.toString();
+      _descriptionController.text = widget.existingGoal!.description ?? '';
+      _selectedDate = widget.existingGoal!.targetDate;
+    }
+  }
+
+  @override
+  void dispose() {
+    _titleController.dispose();
+    _targetAmountController.dispose();
+    _descriptionController.dispose();
+    super.dispose();
+  }
+
+  Future<void> _selectDate(BuildContext context) async {
+    final DateTime? picked = await showDatePicker(
+      context: context,
+      initialDate: _selectedDate,
+      firstDate: DateTime.now(),
+      lastDate: DateTime(2100),
+    );
+    if (picked != null && picked != _selectedDate) {
+      setState(() {
+        _selectedDate = picked;
+      });
+    }
+  }
+
+  Future<void> _saveGoal() async {
+    if (_formKey.currentState!.validate()) {
+      try {
+        final amount = double.tryParse(_targetAmountController.text);
+        if (amount == null || amount <= 0) {
+          SavingNotificationService.showError(
+            context: context,
+            message: LocaleData.pleaseEnterPositiveAmount.getString(context),
+          );
+          return;
+        }
+
+        final goal = SavingGoal(
+          id:
+              widget.existingGoal?.id ??
+              FirebaseFirestore.instance.collection('goals').doc().id,
+          title: _titleController.text,
+          targetAmount: amount,
+          savedAmount: widget.existingGoal?.savedAmount ?? 0.0,
+          targetDate: _selectedDate,
+          description:
+              _descriptionController.text.isNotEmpty
+                  ? _descriptionController.text
+                  : null,
+          createdAt: widget.existingGoal?.createdAt ?? DateTime.now(),
+        );
+
+        await FirebaseFirestore.instance
+            .collection('goals')
+            .doc(goal.id)
+            .set(goal.toMap());
+
+        SavingNotificationService.showSuccess(
+          context: context,
+          message: widget.existingGoal == null
+              ? LocaleData.goalCreated.getString(context).replaceFirst('%s', goal.title)
+              : LocaleData.goalUpdated.getString(context).replaceFirst('%s', goal.title),
+        );
+
+        if (widget.onGoalSaved != null) {
+          widget.onGoalSaved!(goal);
+        }
+
+        Navigator.of(context).pop();
+      } catch (e) {
+        SavingNotificationService.showError(
+          context: context,
+          message: LocaleData.errorSavingGoal.getString(context),
+        );
+      }
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        title: Text(
+          widget.existingGoal == null 
+            ? LocaleData.addSavingGoal.getString(context)
+            : LocaleData.editSavingGoal.getString(context),
+          style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 20),
+        ),
+        centerTitle: true,
+        elevation: 0,
+        backgroundColor: Colors.white,
+        foregroundColor: Colors.black,
+      ),
+      backgroundColor: Colors.white,
+      body: SingleChildScrollView(
+        padding: const EdgeInsets.all(20),
+        child: Form(
+          key: _formKey,
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              // Amount Field
+              Row(
+                crossAxisAlignment: CrossAxisAlignment.center,
+                children: [
+                  const Text(
+                    '৳',
+                    style: TextStyle(
+                      fontSize: 40,
+                      fontWeight: FontWeight.bold,
+                      color: Color(0xFF4CAF50),
+                    ),
+                  ),
+                  const SizedBox(width: 8),
+                  Expanded(
+                    child: TextFormField(
+                      controller: _targetAmountController,
+                      keyboardType: TextInputType.numberWithOptions(
+                        decimal: true,
+                      ),
+                      style: const TextStyle(
+                        fontSize: 40,
+                        fontWeight: FontWeight.bold,
+                        color: Color(0xFF4CAF50),
+                      ),
+                      decoration: InputDecoration(
+                        border: InputBorder.none,
+                        contentPadding: EdgeInsets.zero,
+                        hintText: LocaleData.amountHint.getString(context),
+                        hintStyle: TextStyle(
+                          color: Color(0xFF4CAF50),
+                          fontWeight: FontWeight.bold,
+                          fontSize: 40,
+                        ),
+                      ),
+                      validator: (value) {
+                        if (value == null || value.isEmpty) {
+                          return LocaleData.pleaseEnterAmount.getString(context);
+                        }
+                        final amount = double.tryParse(value);
+                        if (amount == null) {
+                          return LocaleData.pleaseEnterValidNumber.getString(context);
+                        }
+                        if (amount <= 0) {
+                          return LocaleData.pleaseEnterPositiveAmount.getString(context);
+                        }
+                        return null;
+                      },
+                    ),
+                  ),
+                ],
+              ),
+              const SizedBox(height: 20),
+
+              // Goal Name Field
+              Text(
+                LocaleData.savingGoalPurpose.getString(context),
+                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
+              ),
+              const SizedBox(height: 10),
+              TextFormField(
+                controller: _titleController,
+                decoration: InputDecoration(
+                  hintText: LocaleData.savingGoalHint.getString(context),
+                  filled: true,
+                  fillColor: const Color(0xFFF5F5F5),
+                  border: OutlineInputBorder(
+                    borderRadius: BorderRadius.circular(8),
+                    borderSide: BorderSide.none,
+                  ),
+                  contentPadding: const EdgeInsets.all(15),
+                ),
+                validator:
+                    (value) =>
+                        value == null || value.isEmpty
+                            ? LocaleData.pleaseEnterSavingGoalName.getString(context)
+                            : null,
+              ),
+              const SizedBox(height: 20),
+
+              // Date Field
+              Text(
+                LocaleData.targetDate.getString(context),
+                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
+              ),
+              const SizedBox(height: 10),
+              InkWell(
+                onTap: () => _selectDate(context),
+                child: Container(
+                  padding: const EdgeInsets.all(15),
+                  decoration: BoxDecoration(
+                    color: const Color(0xFFF5F5F5),
+                    borderRadius: BorderRadius.circular(8),
+                  ),
+                  child: Row(
+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                    children: [
+                      Text(
+                        DateFormat('EEEE').format(_selectedDate),
+                        style: const TextStyle(
+                          color: Color(0xFF424242),
+                          fontWeight: FontWeight.w500,
+                        ),
+                      ),
+                      Text(
+                        DateFormat('dd/MM/yyyy').format(_selectedDate),
+                        style: const TextStyle(
+                          color: Color(0xFF424242),
+                          fontWeight: FontWeight.w500,
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+              ),
+              const SizedBox(height: 20),
+
+              // Description Field
+              Text(
+                LocaleData.description.getString(context),
+                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
+              ),
+              const SizedBox(height: 10),
+              TextField(
+                controller: _descriptionController,
+                decoration: InputDecoration(
+                  hintText: LocaleData.descriptionHint.getString(context),
+                  hintStyle: const TextStyle(
+                    color: Color(0xFFBDBDBD),
+                    fontSize: 14,
+                  ),
+                  filled: true,
+                  fillColor: const Color(0xFFF5F5F5),
+                  border: OutlineInputBorder(
+                    borderRadius: BorderRadius.circular(8),
+                    borderSide: BorderSide.none,
+                  ),
+                  contentPadding: const EdgeInsets.all(15),
+                ),
+                maxLines: 3,
+              ),
+              const SizedBox(height: 40),
+
+              // Save Button
+              SizedBox(
+                width: double.infinity,
+                child: ElevatedButton(
+                  onPressed: _saveGoal,
+                  style: ElevatedButton.styleFrom(
+                    backgroundColor: Colors.green,
+                    padding: const EdgeInsets.symmetric(vertical: 16),
+                    shape: RoundedRectangleBorder(
+                      borderRadius: BorderRadius.circular(8),
+                    ),
+                  ),
+                  child:  Text(
+                    LocaleData.saveGoal.getString(context),
+                    style: TextStyle(
+                      fontSize: 16,
+                      fontWeight: FontWeight.bold,
+                      color: Colors.white,
+                    ),
+                  ),
+                ),
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
Index: lib/pages/2-chatbot/utils/chatbot_help.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/utils/chatbot_help.dart b/lib/pages/2-chatbot/utils/chatbot_help.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/utils/chatbot_help.dart	
@@ -0,0 +1,46 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/widgets/common/help_pages.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/path/app_images.dart';
+
+class ChatbotHelp {
+  static void show(BuildContext context) {
+    final pages = [
+      AppHelpPage(
+        title: LocaleData.chatbotHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.chatbotText,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.chatbotHelpInstruction1.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.chatbotHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.chatbotImage,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.chatbotHelpInstruction2.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.chatbotHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.chatbotVoice,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.chatbotHelpInstruction3.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.chatbotHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.chatbotInteraction,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.chatbotHelpInstruction4.getString(context),
+      ),
+    ];
+    
+    AppHelp.show(context, pages);
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/utils/chat_constants.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/utils/chat_constants.dart b/lib/pages/2-chatbot/utils/chat_constants.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/utils/chat_constants.dart	
@@ -0,0 +1,57 @@
+import 'package:dash_chat_2/dash_chat_2.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:intl/intl.dart';
+
+class ChatConstants {
+  static String get currentDate {
+    final now = DateTime.now();
+    return DateFormat('yyyy-MM-dd').format(now);
+  }
+
+  static String get systemPrompt {
+    return """You are Finney AI, a friendly financial assistant developed by P26 Team.
+    
+    Today's date is $currentDate.
+    
+    Keep all responses brief and conversational - aim for 1-3 sentences using simple language.
+    Explain financial concepts using everyday examples.
+
+    When provided with Transaction Data Context, always reference it accurately to answer the user's question.
+    For data analysis questions, provide concise insights based on the transaction data.
+    
+    When users mention spending/earning money (like "I spent 30 at KFC today"), format your response like this:
+
+    I detected a transaction:
+    - Amount: \$30.00
+    - Name: KFC
+    - Category: Food
+    - Date: Apr 16, 2025
+    - Description: spent on KFC
+    
+    Would you like me to add this transaction to your records? (Yes/No)
+    IMPORTANT: For transaction responses, do NOT add any additional questions or text after the Yes/No prompt. End the message exactly with "(Yes/No)".
+ 
+    Choose an appropriate category from:
+      'Shopping', 'Food', 'Entertainment', 'Transport', 'Health', 'Utilities', 'Others', for Expenses.
+      'Salary', 'Investment', 'Business', 'Gift', 'Others' for Incomes.
+
+    When users ask non-financial questions, say: "I'm here to help with your financial questions. What money matters can I assist with?"
+    For non-financial images, reply: "I can only analyze financial documents or receipts. Need help with something financial?"
+    End your responses with a brief helpful advice or tip related to the user's question.
+    """;
+  }
+
+  // Method to get localized suggested questions
+  static List<String> getSuggestedQuestions(BuildContext context) {
+    return [
+      LocaleData.suggestedQuestion1.getString(context),
+      LocaleData.suggestedQuestion2.getString(context),
+      LocaleData.suggestedQuestion3.getString(context),
+    ];
+  }
+
+  static final ChatUser currentUser = ChatUser(id: '0', firstName: 'User');
+  static final ChatUser geminiUser = ChatUser(id: '1', firstName: 'Finney AI');
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/utils/robot_animation.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/utils/robot_animation.dart b/lib/pages/2-chatbot/utils/robot_animation.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/utils/robot_animation.dart	
@@ -0,0 +1,53 @@
+import 'package:finney/shared/path/app_animations.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:lottie/lottie.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class RobotAnimationHeader extends StatelessWidget {
+  final bool isTyping;
+  
+  const RobotAnimationHeader({
+    super.key,
+    this.isTyping = false,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      width: double.infinity,
+      decoration: BoxDecoration(
+        color: Colors.white,
+      ),
+
+      child: SafeArea(
+        child: Column(
+          mainAxisSize: MainAxisSize.min,
+          mainAxisAlignment: MainAxisAlignment.center,
+          children: [
+            SizedBox(
+              height: 200,
+              width: 200,
+              child: Lottie.asset(
+                isTyping ? AppAnimations.roboTyping : AppAnimations.robotIdle,
+                repeat: true,
+                frameRate: FrameRate.max, 
+                fit: BoxFit.contain, 
+              ),
+            ),
+
+            Text(
+              isTyping ? LocaleData.thinking.getString(context) : "",
+              style: const TextStyle(
+                fontSize: 16,
+                fontWeight: FontWeight.bold,
+                color: AppColors.primary,
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/services/llm_rag.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/services/llm_rag.dart b/lib/pages/2-chatbot/services/llm_rag.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/services/llm_rag.dart	
@@ -0,0 +1,137 @@
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/core/storage/storage_manager.dart';
+import 'package:intl/intl.dart';
+
+class TransactionRAGService {
+  late final TransactionCloudService _transactionService;
+  
+  // Constructor that initializes TransactionCloudService from StorageManager
+  TransactionRAGService() {
+    _transactionService = StorageManager().transactionService;
+  }
+  
+  /// Retrieves user transaction data and formats it for RAG context
+  Future<String> getTransactionContext() async {
+    try {
+      // Wait for transactions to be retrieved
+      final transactionsFuture = _transactionService.getTransactions().first;
+      final transactions = await transactionsFuture;
+      
+      if (transactions.isEmpty) {
+        return "No transactions found in your records.";
+      }
+      
+      // Get monthly stats
+      final income = await _transactionService.getCurrentMonthIncome();
+      final expenses = await _transactionService.getCurrentMonthExpenses();
+      final balance = income - expenses;
+      
+      // Get category expenses for insights
+      final categoryExpenses = await _transactionService.getCategoryExpenses();
+      String categoryInsights = _formatCategoryInsights(categoryExpenses);
+      
+      // Format all transactions, grouped by month
+      String formattedTransactions = _formatAllTransactions(transactions);
+      
+      // Build the context
+      String context = """
+User's Transaction Data:
+- Current Month Income: ${NumberFormat.currency(symbol: '\$').format(income)}
+- Current Month Expenses: ${NumberFormat.currency(symbol: '\$').format(expenses)}
+- Current Balance: ${NumberFormat.currency(symbol: '\$').format(balance)}
+
+$categoryInsights
+
+Transaction History (All Transactions):
+$formattedTransactions
+""";
+      
+      return context;
+    } catch (e) {
+      return "Error retrieving transaction data: $e";
+    }
+  }
+  
+  String _formatAllTransactions(List<TransactionModel> transactions) {
+    if (transactions.isEmpty) return "No transactions found.";
+    
+    final dateFormat = DateFormat('MMM d, yyyy');
+    final monthFormat = DateFormat('MMMM yyyy');
+    final currencyFormat = NumberFormat.currency(symbol: '\$');
+    final buffer = StringBuffer();
+    
+    // Group transactions by month
+    Map<String, List<TransactionModel>> transactionsByMonth = {};
+    
+    for (var transaction in transactions) {
+      final monthKey = monthFormat.format(transaction.date);
+      if (!transactionsByMonth.containsKey(monthKey)) {
+        transactionsByMonth[monthKey] = [];
+      }
+      transactionsByMonth[monthKey]!.add(transaction);
+    }
+    
+    // Sort months chronologically (most recent first)
+    final sortedMonths = transactionsByMonth.keys.toList()
+      ..sort((a, b) {
+        DateTime dateA = DateFormat('MMMM yyyy').parse(a);
+        DateTime dateB = DateFormat('MMMM yyyy').parse(b);
+        return dateB.compareTo(dateA);  // Most recent first
+      });
+    
+    // Format transactions by month
+    for (var month in sortedMonths) {
+      buffer.writeln("\n## $month");
+      
+      final monthTransactions = transactionsByMonth[month]!;
+      // Sort transactions by date (most recent first)
+      monthTransactions.sort((a, b) => b.date.compareTo(a.date));
+      
+      double monthlyIncome = 0;
+      double monthlyExpense = 0;
+      
+      for (var transaction in monthTransactions) {
+        final amount = transaction.amount;
+        if (amount > 0) {
+          monthlyIncome += amount;
+        } else {
+          monthlyExpense += amount.abs();
+        }
+        
+        final formattedAmount = transaction.isIncome 
+            ? "+${currencyFormat.format(transaction.amount)}" 
+            : currencyFormat.format(transaction.amount);
+        
+        buffer.writeln("- ${dateFormat.format(transaction.date)}: ${transaction.name} (${transaction.category}) - $formattedAmount");
+        if (transaction.description != null && transaction.description!.isNotEmpty) {
+          buffer.writeln("  Description: ${transaction.description}");
+        }
+      }
+      
+      // Add monthly summary
+      buffer.writeln("  Monthly Income: ${currencyFormat.format(monthlyIncome)}");
+      buffer.writeln("  Monthly Expenses: ${currencyFormat.format(monthlyExpense)}");
+      buffer.writeln("  Monthly Balance: ${currencyFormat.format(monthlyIncome - monthlyExpense)}");
+    }
+    
+    return buffer.toString();
+  }
+  
+  String _formatCategoryInsights(List<CategoryExpense> categoryExpenses) {
+    if (categoryExpenses.isEmpty) return "No category insights available.";
+    
+    final currencyFormat = NumberFormat.currency(symbol: '\$');
+    final buffer = StringBuffer("Top Spending Categories:\n");
+    
+    // Sort and include all categories
+    final sortedCategories = List.of(categoryExpenses)
+      ..sort((a, b) => b.amount.compareTo(a.amount));
+    
+    for (var category in sortedCategories) {
+      buffer.writeln("- ${category.name}: ${currencyFormat.format(category.amount)}");
+    }
+    
+    return buffer.toString();
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/services/llm_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/services/llm_service.dart b/lib/pages/2-chatbot/services/llm_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/services/llm_service.dart	
@@ -0,0 +1,94 @@
+import 'dart:io';
+import 'package:finney/pages/2-chatbot/services/llm_rag.dart';
+import 'package:finney/pages/2-chatbot/services/tts_service.dart';
+import 'package:finney/pages/2-chatbot/utils/chat_constants.dart';
+import 'package:flutter/foundation.dart';
+import 'package:flutter_gemini/flutter_gemini.dart';
+import 'package:dash_chat_2/dash_chat_2.dart';
+
+class LlmService {
+  final Gemini gemini;
+  List<Content> conversationHistory;
+  final TransactionRAGService _transactionRAGService = TransactionRAGService();
+  
+  LlmService({
+    required this.gemini,
+    required this.conversationHistory,
+  });
+  
+  //update conversation history
+  void updateConversationHistory(List<Content> newHistory) {
+    conversationHistory = newHistory;
+  }
+
+  Future<String> sendMessage(ChatMessage chatMessage) async {
+    //check if this message relates to transaction data
+    bool needsTransactionContext = _messageNeedsTransactionContext(chatMessage.text);
+    String transactionContext = '';
+    
+    if (needsTransactionContext) {
+      transactionContext = await _transactionRAGService.getTransactionContext();
+    }
+    
+    String augmentedQuestion;
+    
+    if (needsTransactionContext) {
+      augmentedQuestion = """${ChatConstants.systemPrompt}
+
+User's Transaction Data Context:
+$transactionContext
+
+User Question: ${chatMessage.text}""";
+    } else {
+      augmentedQuestion = "${ChatConstants.systemPrompt}\n\nUser Question: ${chatMessage.text}";
+    }
+    
+    List<Part> parts = [];
+    
+    if (chatMessage.medias?.isNotEmpty ?? false) {
+      Uint8List images = File(chatMessage.medias!.first.url).readAsBytesSync();
+      parts.add(Part.uint8List(images));
+    } else {
+      parts.add(Part.text(augmentedQuestion));
+    }
+
+    conversationHistory.add(Content(
+      parts: parts,
+      role: 'user',
+    ));
+
+    try {
+      final value = await gemini.chat(conversationHistory);
+      String response = value?.output ?? 'Something went wrong. Please try again later...';
+      
+      bool isFromVoiceInput = chatMessage.customProperties?['fromVoiceInput'] == true;
+      if (isFromVoiceInput) {
+        await TtsService().speak(response);
+      }
+      
+      conversationHistory.add(Content(
+        parts: [Part.text(response)],
+        role: 'model',
+      ));
+
+      return response;
+    } catch (e) {
+      return 'An error occurred. Please try again after 1 minute.';
+    }
+  }
+  
+  bool _messageNeedsTransactionContext(String message) {
+    //list of keywords that indicate the user is asking about their transaction data
+    final List<String> transactionKeywords = [
+      'transaction', 'spent', 'spend', 'spending', 'income', 'expense', 'expenses',
+      'how much', 'balance', 'budget', 'category', 'money', 'financial', 'summary',
+      'report', 'analytics', 'analysis', 'history', 'account', 'payment', 'purchase',
+      'bought', 'paid', 'finance', 'statistics', 'total', 'spend'
+    ];
+    
+    message = message.toLowerCase();
+    
+    //check if the message contains any keywords
+    return transactionKeywords.any((keyword) => message.contains(keyword));
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/services/stt_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/services/stt_service.dart b/lib/pages/2-chatbot/services/stt_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/services/stt_service.dart	
@@ -0,0 +1,65 @@
+import 'package:speech_to_text/speech_to_text.dart';
+
+class STTService {
+  final SpeechToText _speechToText = SpeechToText();
+  bool _isInitialized = false;
+  String _lastWords = '';
+  bool _isListening = false;
+
+  // Getters
+  bool get isInitialized => _isInitialized;
+  bool get isListening => _isListening;
+  String get lastWords => _lastWords;
+
+  // Initialize the speech recognition service
+  Future<bool> initialize() async {
+    if (_isInitialized) return true;
+    
+    try {
+      _isInitialized = await _speechToText.initialize();
+      return _isInitialized;
+    } catch (e) {
+      _isInitialized = false;
+      return false;
+    }
+  }
+
+  // Start listening for speech input
+  Future<void> startListening(Function(String) onWordsChanged) async {
+    if (!_isInitialized) {
+      await initialize();
+    }
+
+    if (_isInitialized) {
+      await _speechToText.listen(
+        onResult: (result) {
+          _lastWords = result.recognizedWords;
+          onWordsChanged(_lastWords);
+        },
+      );
+      _isListening = true;
+    }
+  }
+
+  // Stop listening for speech input
+  Future<void> stopListening() async {
+    await _speechToText.stop();
+    _isListening = false;
+  }
+
+  // Toggle listening state
+  Future<bool> toggleListening(Function(String) onWordsChanged) async {
+    if (_isListening) {
+      await stopListening();
+      return false;
+    } else {
+      await startListening(onWordsChanged);
+      return true;
+    }
+  }
+
+  // Clean up resources
+  void dispose() {
+    _speechToText.stop();
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/services/tts_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/services/tts_service.dart b/lib/pages/2-chatbot/services/tts_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/services/tts_service.dart	
@@ -0,0 +1,12 @@
+import 'package:flutter_tts/flutter_tts.dart';
+
+class TtsService {
+  final flutterTts = FlutterTts();
+
+  Future<void> speak(String content) async {
+    await flutterTts.setLanguage("en-US");
+    await flutterTts.setPitch(1.0);
+    await flutterTts.setSpeechRate(0.5);
+    await flutterTts.speak(content);
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/chatbot.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/chatbot.dart b/lib/pages/2-chatbot/chatbot.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/chatbot.dart	
@@ -0,0 +1,583 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/core/storage/cloud/models/chat_message_model.dart';
+import 'package:finney/core/storage/cloud/service/chat_cloud_service.dart';
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/pages/2-chatbot/presentation/chat_interface.dart';
+import 'package:finney/pages/2-chatbot/presentation/transaction_preview.dart';
+import 'package:finney/pages/2-chatbot/presentation/voicechat_interface.dart';
+import 'package:finney/pages/2-chatbot/services/llm_transactionparser.dart';
+import 'package:finney/pages/2-chatbot/utils/chat_constants.dart'; 
+import 'package:finney/core/storage/storage_manager.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_gemini/flutter_gemini.dart';
+import 'package:dash_chat_2/dash_chat_2.dart';
+import 'package:image_picker/image_picker.dart';
+import 'services/llm_service.dart';
+import 'presentation/welcome_screen.dart';
+import 'utils/chatbot_help.dart';
+import 'dart:async';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+class Chatbot extends StatefulWidget {
+  final String? initialQuestion;
+  
+  const Chatbot({
+    super.key, 
+    this.initialQuestion,
+  });
+
+  @override
+  State<Chatbot> createState() => _ChatbotState();
+}
+
+class _ChatbotState extends State<Chatbot> {
+  // Use core services from StorageManager
+  final ChatCloudService _chatCloudService = StorageManager().chatCloudService;
+  final TransactionCloudService _transactionService = StorageManager().transactionService;
+  late LlmService _llmService;
+  final gemini = Gemini.instance;
+  bool showWelcomeScreen = true;
+  List<ChatMessage> messages = [];
+  List<Content> conversationHistory = [];
+  
+  // Stream subscription to properly dispose
+  StreamSubscription? _messagesSubscription;
+  
+  // For transaction handling
+  bool _awaitingTransactionConfirmation = false;
+  Map<String, dynamic>? _pendingTransaction;
+
+  // For AI typing animation
+  bool _isAiTyping = false;
+  
+  // For cloud message loading
+  bool _isLoadingMessages = true;
+
+  @override
+  void initState() {
+    super.initState();
+    _initServices();
+
+    if (widget.initialQuestion != null && widget.initialQuestion!.isNotEmpty) {
+      Future.delayed(const Duration(milliseconds: 100), () {
+        _handleInitialQuestion(widget.initialQuestion!);
+      });
+    }
+  }
+
+  // ADD THESE ADAPTER METHODS TO HANDLE TYPE CONVERSIONS
+
+  // Adapter method to save a message
+  Future<void> saveMessage(ChatMessage message, {required String role}) async {
+    final chatModel = ChatMessageModel(
+      text: message.text,
+      createdAt: message.createdAt,
+      userId: message.user.id,
+      userFirstName: message.user.firstName ?? '',
+      role: role,
+      mediaUrl: message.medias?.isNotEmpty == true ? message.medias!.first.url : null,
+    );
+    
+    await _chatCloudService.addMessage(chatModel);
+  }
+  
+  // Adapter method to convert ChatMessageModel to List<Content> for Gemini
+  List<Content> toGeminiContent(List<ChatMessageModel> messages) {
+    return messages.map((message) {
+      // Convert each message to Gemini Content format
+      return Content(
+        role: message.role,
+        parts: [TextPart(message.text)],
+      );
+    }).toList();
+  }
+  
+  void _handleInitialQuestion(String question) {
+    final chatMessage = ChatMessage(
+      user: ChatConstants.currentUser,
+      createdAt: DateTime.now(),
+      text: question,
+    );
+    _sendMessage(chatMessage);
+    setState(() {
+      showWelcomeScreen = false;
+    });
+  }
+
+  Future<void> _initServices() async {
+    _llmService = LlmService(
+      gemini: gemini,
+      conversationHistory: conversationHistory,
+    );
+    _loadCloudMessages();
+  }
+
+  void _loadCloudMessages() {
+    if (!mounted) return;
+    
+    setState(() {
+      _isLoadingMessages = true;
+    });
+    
+    // Store the subscription so we can cancel it later
+    _messagesSubscription = _chatCloudService.streamMessages().listen(
+      (cloudMessages) {
+        if (!mounted) return;
+        
+        // Convert CloudMessages to ChatMessages
+        final convertedMessages = cloudMessages.map((cloudMsg) {
+          return ChatMessage(
+            text: cloudMsg.text,
+            user: ChatUser(
+              id: cloudMsg.userId,
+              firstName: cloudMsg.userFirstName,
+            ),
+            createdAt: cloudMsg.createdAt,
+            medias: cloudMsg.mediaUrl != null 
+              ? [ChatMedia(url: cloudMsg.mediaUrl!, fileName: '', type: MediaType.image)]
+              : null,
+            customProperties: {'role': cloudMsg.role},
+          );
+        }).toList();
+        
+        setState(() {
+          messages = convertedMessages;
+          showWelcomeScreen = messages.isEmpty;
+          _isLoadingMessages = false;
+        });
+        
+        // Update conversation history for LLM context
+        conversationHistory = toGeminiContent(cloudMessages);
+        _llmService.updateConversationHistory(conversationHistory);
+      }, 
+      onError: (error) {
+        debugPrint('Error loading cloud messages: $error');
+        
+        if (!mounted) return;
+        
+        setState(() {
+          _isLoadingMessages = false;
+          messages = [];
+          showWelcomeScreen = true;
+        });
+        
+        // Show error using AppSnackBar
+        AppSnackBar.showError(
+          context,
+          message: 'errorLoadingMessages'.getString(context),
+        );
+      }
+    );
+  }
+
+  void _sendMessage(ChatMessage chatMessage) async {
+    if (_awaitingTransactionConfirmation) {
+      _handleTransactionConfirmation(chatMessage);
+      return;
+    }
+
+    setState(() {
+      messages = [chatMessage] + messages;
+      showWelcomeScreen = false;
+      _isAiTyping = true;  // Start the typing animation
+    });
+    
+    // Save to cloud storage service
+    await saveMessage(chatMessage, role: 'user');
+
+    // The animation will show the AI is thinking
+    final response = await _llmService.sendMessage(chatMessage);
+    
+    if (TransactionParser.hasTransactionInfo(response)) {
+      final transactionData = TransactionParser.extractTransactionFromMessage(response);
+      
+      if (transactionData != null) {
+        // Create transaction model for preview
+        final transactionModel = TransactionParser.createTransactionModel(transactionData);
+        
+        final message = ChatMessage(
+          user: ChatConstants.geminiUser,
+          createdAt: DateTime.now(),
+          text: response,
+        );
+        
+        setState(() {
+          _isAiTyping = false;  // Stop the typing animation
+          messages = [message] + messages;
+        });
+        
+        // Save to cloud storage service
+        await saveMessage(message, role: 'model');
+        
+        // Show the transaction preview dialog with simplified interface (no edit)
+        if (mounted) {
+          final confirmed = await TransactionPreviewPopup.show(
+            context: context, 
+            transaction: transactionModel,
+            onConfirm: (confirmedTransaction) async {
+              try {
+                // Handle confirmation - save the transaction using core service
+                await _transactionService.addTransaction(confirmedTransaction);
+                
+                if (mounted) {
+                  // Show success message using AppSnackBar
+                  AppSnackBar.showSuccess(
+                    context,
+                    message: LocaleData.transactionAddedSuccess.getString(context),
+                  );
+                  
+                  // Add confirmation message to chat
+                  final confirmMessage = ChatMessage(
+                    user: ChatConstants.geminiUser,
+                    createdAt: DateTime.now(),
+                    text: LocaleData.transactionAddedSuccess.getString(context),
+                  );
+                  
+                  setState(() {
+                    messages = [confirmMessage] + messages;
+                  });
+                  
+                  await saveMessage(confirmMessage, role: 'model');
+                }
+              } catch (e) {
+                // Show error using AppSnackBar if transaction fails
+                if (mounted) {
+                  AppSnackBar.showError(
+                    context,
+                    message: LocaleData.transactionAddError.getString(context),
+                  );
+                }
+              }
+            },
+          );
+          
+          // Handle cancellation
+          if (confirmed == false) {
+            if (mounted) {
+              // Add a cancellation message from the bot
+              final cancelMessage = ChatMessage(
+                user: ChatConstants.geminiUser,
+                createdAt: DateTime.now(),
+                text: LocaleData.transactionCanceled.getString(context),
+              );
+              
+              setState(() {
+                messages = [cancelMessage] + messages;
+              });
+              
+              await saveMessage(cancelMessage, role: 'model');
+            }
+          }
+        }
+        
+        return;
+      }
+    }
+
+    final message = ChatMessage(
+      user: ChatConstants.geminiUser,
+      createdAt: DateTime.now(),
+      text: response,
+    );
+
+    setState(() {
+      _isAiTyping = false; 
+      messages = [message] + messages;
+    });
+    
+    // Save to cloud storage service
+    await saveMessage(message, role: 'model');
+  }
+
+  void _handleTransactionConfirmation(ChatMessage userMessage) async {
+    setState(() {
+      messages = [userMessage] + messages;
+      _isAiTyping = true;  // Start typing animation
+    });
+    
+    // Save user confirmation message
+    await saveMessage(userMessage, role: 'user');
+    
+    
+    if (_pendingTransaction != null) {
+      final transactionModel = TransactionParser.createTransactionModel(_pendingTransaction!);
+      
+      if (TransactionParser.isConfirmingTransaction(userMessage.text)) {
+        try {
+          await _transactionService.addTransaction(transactionModel);
+
+          if (mounted) {
+            // Use AppSnackBar for success messages
+            AppSnackBar.showSuccess(
+              context,
+              message: LocaleData.transactionAddedSuccess.getString(context),
+            );
+          }
+          
+          final message = ChatMessage(
+            user: ChatConstants.geminiUser,
+            createdAt: DateTime.now(),
+            text: LocaleData.transactionAddedSuccess.getString(context),
+          );
+          
+          setState(() {
+            _isAiTyping = false;
+            messages = [message] + messages;
+          });
+          
+          await saveMessage(message, role: 'model');
+          
+        } catch (e) {
+          // Use AppSnackBar for error messages
+          if (mounted) {
+            AppSnackBar.showError(
+              context,
+              message: LocaleData.transactionAddError.getString(context),
+            );
+          }
+          
+          final message = ChatMessage(
+            user: ChatConstants.geminiUser,
+            createdAt: DateTime.now(),
+            text: LocaleData.transactionAddError.getString(context),
+          );
+          
+          setState(() {
+            _isAiTyping = false;
+            messages = [message] + messages;
+          });
+          
+          await saveMessage(message, role: 'model');
+        }
+      } else if (TransactionParser.isCancelingTransaction(userMessage.text)) {
+        final message = ChatMessage(
+          user: ChatConstants.geminiUser,
+          createdAt: DateTime.now(),
+          text: LocaleData.transactionCanceled.getString(context),
+        );
+        
+        setState(() {
+          _isAiTyping = false;
+          messages = [message] + messages;
+        });
+        
+        await saveMessage(message, role: 'model');
+      } else {
+        // If the user's response wasn't clear, show the popup
+        final message = ChatMessage(
+          user: ChatConstants.geminiUser,
+          createdAt: DateTime.now(),
+          text: LocaleData.transactionConfirmPrompt.getString(context),
+        );
+        
+        setState(() {
+          _isAiTyping = false;
+          messages = [message] + messages;
+        });
+        
+        await saveMessage(message, role: 'model');
+        
+        // Show the popup
+        if (mounted) {
+          await TransactionPreviewPopup.show(
+            context: context,
+            transaction: transactionModel,
+            onConfirm: (confirmedTransaction) async {
+              try {
+                await _transactionService.addTransaction(confirmedTransaction);
+                
+                if (mounted) {
+                  // Use AppSnackBar for success messages
+                  AppSnackBar.showSuccess(
+                    context,
+                    message: LocaleData.transactionAddedSuccess.getString(context),
+                  );
+                  
+                  final confirmMessage = ChatMessage(
+                    user: ChatConstants.geminiUser,
+                    createdAt: DateTime.now(),
+                    text: LocaleData.transactionAddedSuccess.getString(context),
+                  );
+                  
+                  setState(() {
+                    messages = [confirmMessage] + messages;
+                  });
+                  
+                  await saveMessage(confirmMessage, role: 'model');
+                }
+              } catch (e) {
+                // Use AppSnackBar for error messages
+                if (mounted) {
+                  AppSnackBar.showError(
+                    context,
+                    message: LocaleData.transactionAddError.getString(context),
+                  );
+                }
+              }
+            },
+          );
+        }
+      }
+    } else {
+      // If somehow _pendingTransaction is null
+      final message = ChatMessage(
+        user: ChatConstants.geminiUser,
+        createdAt: DateTime.now(),
+        text: LocaleData.transactionNoPending.getString(context),
+      );
+      
+      setState(() {
+        _isAiTyping = false;
+        messages = [message] + messages;
+      });
+      
+      await saveMessage(message, role: 'model');
+    }
+    
+    _awaitingTransactionConfirmation = false;
+    _pendingTransaction = null;
+  }
+
+  void _sendMediaMessage() async {
+    final picker = ImagePicker();
+    final file = await picker.pickImage(source: ImageSource.gallery);
+
+    if (file != null) {
+      final message = ChatMessage(
+        user: ChatConstants.currentUser,
+        createdAt: DateTime.now(),
+        medias: [
+          ChatMedia(
+            url: file.path,
+            fileName: '',
+            type: MediaType.image,
+          ),
+        ],
+      );
+      _sendMessage(message);
+    }
+  }
+
+  void _navigateToVoiceChat() {
+    Navigator.of(context).push(
+      MaterialPageRoute(
+        builder: (context) => VoiceChatInterface(
+          currentUser: ChatConstants.currentUser,
+          onSend: _sendMessage,
+          messages: messages,
+        ),
+      ),
+    );
+  }
+
+  Future<void> clearChat() async {
+    await _chatCloudService.clearChat();
+    
+    setState(() {
+      messages = [];
+      conversationHistory = [];
+      showWelcomeScreen = true;
+      _awaitingTransactionConfirmation = false;
+      _pendingTransaction = null;
+    });
+    
+    // Show confirmation using AppSnackBar
+    if (mounted) {
+      AppSnackBar.showInfo(
+        context,
+        message: 'chatCleared'.getString(context),
+      );
+    }
+  }
+
+  @override
+  void dispose() {
+    _messagesSubscription?.cancel();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final suggestedQuestions = ChatConstants.getSuggestedQuestions(context);
+
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        title: Text(
+          LocaleData.chatbotTitle.getString(context),
+          style: const TextStyle(
+            color: AppColors.primary,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        actions: [
+          IconButton(
+            icon: const Icon(Icons.delete_outline),
+            onPressed: clearChat,
+          ),
+          IconButton(
+            icon: const Icon(Icons.help_outline),
+            onPressed: () => ChatbotHelp.show(context),
+          ),
+        ],
+      ),
+      body: Stack(
+        children: [
+          Column(
+            children: [
+              Expanded(
+                child: _isLoadingMessages 
+                  ? const Center(child: CircularProgressIndicator())
+                  : showWelcomeScreen 
+                    ? WelcomeScreen(
+                            suggestedQuestions: suggestedQuestions,
+                            onSendMessage: _sendMessage,
+                            currentUser: ChatConstants.currentUser,
+                            onQuestionSelected: () {
+                              setState(() {
+                                showWelcomeScreen = false;
+                              });
+                            },
+                          )
+                        : ChatInterface(
+                            currentUser: ChatConstants.currentUser,
+                            onSend: _sendMessage,
+                            messages: messages,
+                            onMediaSend: _sendMediaMessage,
+                            isAiTyping: _isAiTyping,
+                          ),
+              ),
+            ],
+          ),
+          
+          Positioned(
+            right: 17,
+            bottom: 80,
+            child: Material(
+              elevation: 4.0,
+              borderRadius: BorderRadius.circular(16),
+              color: AppColors.darkBlue,
+              child: InkWell(
+                onTap: _navigateToVoiceChat,
+                borderRadius: BorderRadius.circular(16),
+                child: Container(
+                  width: 56.0,
+                  height: 56.0,
+                  alignment: Alignment.center,
+                  child: const Icon(
+                    Icons.mic,
+                    color: Colors.white,
+                    size: 24.0,
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/presentation/chat_interface.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/presentation/chat_interface.dart b/lib/pages/2-chatbot/presentation/chat_interface.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/presentation/chat_interface.dart	
@@ -0,0 +1,72 @@
+import 'package:finney/pages/2-chatbot/utils/robot_animation.dart';
+import 'package:flutter/material.dart';
+import 'package:dash_chat_2/dash_chat_2.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class ChatInterface extends StatelessWidget {
+  final ChatUser currentUser;
+  final Function(ChatMessage) onSend;
+  final List<ChatMessage> messages;
+  final VoidCallback onMediaSend;
+  final bool isAiTyping;
+
+  const ChatInterface({
+    super.key,
+    required this.currentUser,
+    required this.onSend,
+    required this.messages,
+    required this.onMediaSend,
+    this.isAiTyping = false,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      children: [
+        RobotAnimationHeader(isTyping: isAiTyping),
+        
+        Expanded(
+          child: DashChat(
+            currentUser: currentUser,
+            onSend: onSend,
+            messages: messages,
+            messageOptions: MessageOptions(
+              containerColor: AppColors.softGray,
+              currentUserContainerColor: AppColors.primary,
+              textColor: Colors.black,
+              currentUserTextColor: Colors.white,
+              showTime: false,
+              showOtherUsersName: false,
+              showOtherUsersAvatar: false,
+              showCurrentUserAvatar: false,
+            ),
+            inputOptions: InputOptions(
+              trailing: [
+                IconButton(
+                  onPressed: onMediaSend,
+                  icon: Icon(Icons.image, color: AppColors.darkBlue),
+                ),
+              ],
+              inputDecoration: InputDecoration(
+                hintText: LocaleData.chatInputHint.getString(context),
+                border: OutlineInputBorder(
+                  borderRadius: BorderRadius.circular(12),
+                  borderSide: BorderSide.none, 
+                ),
+                filled: true,
+                fillColor: AppColors.blurGray.withValues(alpha: 0.2), 
+                contentPadding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
+              ),
+              sendButtonBuilder: (onSend) => IconButton(
+                icon: const Icon(Icons.send_rounded, color: AppColors.darkBlue),
+                onPressed: onSend,
+              ),
+            ),
+          ),
+        ),
+      ],
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/presentation/welcome_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/presentation/welcome_screen.dart b/lib/pages/2-chatbot/presentation/welcome_screen.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/presentation/welcome_screen.dart	
@@ -0,0 +1,147 @@
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/pages/2-chatbot/utils/robot_animation.dart';
+import 'package:flutter/material.dart';
+import 'package:dash_chat_2/dash_chat_2.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class WelcomeScreen extends StatelessWidget {
+  final List<String> suggestedQuestions;
+  final Function(ChatMessage) onSendMessage;
+  final ChatUser currentUser;
+  final Function() onQuestionSelected;
+
+  const WelcomeScreen({
+    super.key,
+    required this.suggestedQuestions,
+    required this.onSendMessage,
+    required this.currentUser,
+    required this.onQuestionSelected,
+  });
+
+@override
+Widget build(BuildContext context) {
+  return Scaffold(
+    backgroundColor: Colors.white,
+    body: Column(
+      children: [
+
+        const RobotAnimationHeader(isTyping: false),
+        
+        Expanded(
+          child: SingleChildScrollView(
+            child: Padding(
+              padding: const EdgeInsets.all(20.0),
+              child: Column(
+                mainAxisAlignment: MainAxisAlignment.center,
+                children: [
+                  _buildTryAskingText(context),
+                  const SizedBox(height: 20),
+                  _buildSuggestedQuestions(),
+                  const SizedBox(height: 20),
+                  _buildSkipButton(context),
+                  const SizedBox(height: 20),
+                ],
+              ),
+            ),
+          ),
+        ),
+      ],
+    ),
+  );
+}
+
+  Widget _buildTryAskingText(BuildContext context) {
+    return Text(
+      LocaleData.welcomeTryAsking.getString(context),
+      style: TextStyle(
+        fontSize: 16,
+        fontWeight: FontWeight.bold,
+        color: Colors.grey[700],
+      ),
+    );
+  }
+
+  Widget _buildSuggestedQuestions() {
+    return Column(
+      children: suggestedQuestions.map((question) {
+        return Padding(
+          padding: const EdgeInsets.only(bottom: 12),
+          child: InkWell(
+            onTap: () {
+              onQuestionSelected();
+              onSendMessage(ChatMessage(
+                text: question,
+                user: currentUser,
+                createdAt: DateTime.now(),
+              ));
+            },
+            child: Container(
+              width: double.infinity,
+              padding: const EdgeInsets.all(16),
+              decoration: BoxDecoration(
+                color: Colors.white,
+                borderRadius: BorderRadius.circular(12),
+                border: Border.all(
+                  color: AppColors.primary.withValues(alpha: 0.2),
+                ),
+                boxShadow: [
+                  BoxShadow(
+                    color: Colors.black.withValues(alpha: 0.05),
+                    blurRadius: 5,
+                    offset: const Offset(0, 2),
+                  ),
+                ],
+              ),
+              child: Row(
+                children: [
+                  Icon(
+                    Icons.chat_outlined,
+                    color: AppColors.primary,
+                    size: 20,
+                  ),
+                  const SizedBox(width: 12),
+                  Expanded(
+                    child: Text(
+                      question,
+                      style: const TextStyle(
+                        fontSize: 15,
+                      ),
+                    ),
+                  ),
+                  Icon(
+                    Icons.arrow_forward_ios,
+                    color: AppColors.primary,
+                    size: 16,
+                  ),
+                ],
+              ),
+            ),
+          ),
+        );
+      }).toList(),
+    );
+  }
+
+  Widget _buildSkipButton(BuildContext context) {
+    return TextButton(
+      onPressed: onQuestionSelected,
+      style: TextButton.styleFrom(
+        padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),
+        shape: RoundedRectangleBorder(
+          borderRadius: BorderRadius.circular(8),
+          side: BorderSide(
+            color: AppColors.primary.withValues(alpha: 0.5), 
+          ),
+        ),
+      ),
+      child: Text(
+        LocaleData.welcomeWriteQuestion.getString(context),
+        style: TextStyle(
+          color: AppColors.primary,
+          fontWeight: FontWeight.w500,
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/presentation/transaction_preview.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/presentation/transaction_preview.dart b/lib/pages/2-chatbot/presentation/transaction_preview.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/presentation/transaction_preview.dart	
@@ -0,0 +1,194 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/shared/category.dart'; // Import CategoryUtils
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class TransactionPreviewPopup extends StatelessWidget {
+  final TransactionModel transaction;
+  final Function(TransactionModel) onConfirm;
+  final VoidCallback onCancel;
+
+  const TransactionPreviewPopup({
+    super.key,
+    required this.transaction,
+    required this.onConfirm,
+    required this.onCancel,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final isIncome = transaction.amount > 0;
+    final categoryColor = CategoryUtils.getColorForCategory(transaction.category);
+
+    return Dialog(
+      shape: RoundedRectangleBorder(
+        borderRadius: BorderRadius.circular(16),
+      ),
+      elevation: 0,
+      backgroundColor: Colors.transparent,
+      child: Container(
+        padding: const EdgeInsets.all(20),
+        decoration: BoxDecoration(
+          color: Colors.white,
+          borderRadius: BorderRadius.circular(16),
+        ),
+        child: Column(
+          mainAxisSize: MainAxisSize.min,
+          children: [
+            Text(
+              LocaleData.transactionPreviewTitle.getString(context),
+              style: TextStyle(
+                fontSize: 18,
+                fontWeight: FontWeight.bold,
+              ),
+            ),
+
+            const SizedBox(height: 16),
+
+            //transaction item design - matched with transaction_item.dart
+            Container(
+              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
+              decoration: BoxDecoration(
+                color: Colors.white,
+                borderRadius: BorderRadius.circular(12),
+                border: Border.all(color: Colors.grey.shade200),
+              ),
+              child: Row(
+                children: [
+                  Container(
+                    padding: const EdgeInsets.all(10),
+                    decoration: BoxDecoration(
+                      color: categoryColor.withValues(alpha: 0.1), 
+                      borderRadius: BorderRadius.circular(12),
+                    ),
+                    child: Icon(
+                      transaction.icon,
+                      color: categoryColor,
+                      size: 24,
+                    ),
+                  ),
+
+                  const SizedBox(width: 16),
+
+                  Expanded(
+                    child: Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: [
+                        Text(
+                          transaction.name,
+                          style: const TextStyle(
+                            fontWeight: FontWeight.bold,
+                            fontSize: 16,
+                          ),
+                        ),
+
+                        const SizedBox(height: 4),
+
+                        Text(
+                          transaction.category,
+                          style: TextStyle(
+                            color: Colors.grey.shade600,
+                            fontSize: 12,
+                          ),
+                        ),
+                      ],
+                    ),
+                  ),
+                  Column(
+                    crossAxisAlignment: CrossAxisAlignment.end,
+                    children: [
+                      Row(
+                        children: [
+                          Text(
+                            isIncome
+                                ? '+${NumberFormat.currency(symbol: '\$').format(transaction.amount)}'
+                                : NumberFormat.currency(symbol: '\$').format(transaction.amount),
+                            style: TextStyle(
+                              fontWeight: FontWeight.bold,
+                              fontSize: 16,
+                              color: isIncome ? Colors.green : Colors.redAccent,
+                            ),
+                          ),
+                        ],
+                      ),
+                    ],
+                  ),
+                ],
+              ),
+            ),
+
+            const SizedBox(height: 20),
+
+            Row(
+              mainAxisAlignment: MainAxisAlignment.center,
+              children: [
+                TextButton(
+                  onPressed: onCancel,
+                      style: TextButton.styleFrom(
+                        padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
+                        shape: RoundedRectangleBorder(
+                          borderRadius: BorderRadius.circular(8),
+                          side: BorderSide(
+                            color: AppColors.primary,
+                          ),
+                        ),
+                      ),
+                      child: Text(
+                        LocaleData.transactionPreviewCancel.getString(context),
+                        style: TextStyle(
+                          color: AppColors.primary,
+                          fontWeight: FontWeight.w600,
+                        ),
+                      ),
+                    ),
+
+                const SizedBox(width: 16),
+
+                ElevatedButton(
+                  onPressed: () => onConfirm(transaction),
+                  style: ElevatedButton.styleFrom(
+                    backgroundColor: AppColors.primary,
+                    foregroundColor: Colors.white,
+                    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
+                    shape: RoundedRectangleBorder(
+                      borderRadius: BorderRadius.circular(8),
+                    ),
+                  ),
+                  child: Text( LocaleData.transactionPreviewConfirm.getString(context),),
+                ),
+              ],
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  // Show the popup
+  static Future<bool?> show({
+    required BuildContext context,
+    required TransactionModel transaction,
+    required Function(TransactionModel) onConfirm,
+  }) {
+    return showDialog<bool>(
+      context: context,
+      barrierDismissible: false,
+      builder: (BuildContext context) {
+        return TransactionPreviewPopup(
+          transaction: transaction,
+          onConfirm: (transaction) {
+            Navigator.of(context).pop(true);
+            //execute onConfirm with the transaction
+            onConfirm(transaction);
+          },
+          onCancel: () {
+            Navigator.of(context).pop(false);
+          },
+        );
+      },
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/2-chatbot/presentation/voicechat_interface.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/2-chatbot/presentation/voicechat_interface.dart b/lib/pages/2-chatbot/presentation/voicechat_interface.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/2-chatbot/presentation/voicechat_interface.dart	
@@ -0,0 +1,198 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter/material.dart';
+import 'package:dash_chat_2/dash_chat_2.dart';
+import 'package:finney/pages/2-chatbot/services/stt_service.dart';
+import 'package:finney/pages/2-chatbot/utils/robot_animation.dart'; 
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class VoiceChatInterface extends StatefulWidget {
+  final ChatUser currentUser;
+  final Function(ChatMessage) onSend;
+  final List<ChatMessage> messages;
+
+  const VoiceChatInterface({
+    super.key,
+    required this.currentUser,
+    required this.onSend,
+    required this.messages,
+  });
+
+  @override
+  State<VoiceChatInterface> createState() => _VoiceChatInterfaceState();
+}
+
+class _VoiceChatInterfaceState extends State<VoiceChatInterface> {
+  final STTService _sttService = STTService();
+  bool _isListening = false;
+  String _lastWords = '';
+  bool _isProcessing = false;
+
+  @override
+  void initState() {
+    super.initState();
+    _initializeSpeechService();
+  }
+
+  Future<void> _initializeSpeechService() async {
+    bool available = await _sttService.initialize();
+    if (!available && mounted) {
+      ScaffoldMessenger.of(context).showSnackBar(
+        SnackBar(content: Text(LocaleData.voiceSttNotAvailable.getString(context)),),
+      );
+    }
+  }
+
+  void _updateWords(String words) {
+    setState(() {
+      _lastWords = words;
+    });
+  }
+
+  Future<void> _toggleListening() async {
+    if (_isProcessing) return;
+    
+    if (_isListening) {
+      // Stop listening and process the query
+      bool isNowListening = false;
+      await _sttService.stopListening();
+      setState(() {
+        _isListening = isNowListening;
+        _isProcessing = true;
+      });
+      
+      if (_lastWords.isNotEmpty) {
+        await _sendVoiceMessageToAI(_lastWords);
+        
+        await Future.delayed(const Duration(milliseconds: 1500));
+      }
+      
+      setState(() {
+        _isProcessing = false;
+        _lastWords = '';
+      });
+    } else {
+      // Start listening
+      bool isNowListening = await _sttService.toggleListening(_updateWords);
+      setState(() {
+        _isListening = isNowListening;
+      });
+    }
+  }
+  
+  Future<void> _sendVoiceMessageToAI(String text) async {
+    final message = ChatMessage(
+      text: text,
+      user: widget.currentUser,
+      createdAt: DateTime.now(),
+      customProperties: {
+        'fromVoiceInput': true, 
+      },
+    );
+    widget.onSend(message);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      // Add AppBar with title and back button
+      appBar: AppBar(
+        backgroundColor: Colors.transparent,
+        elevation: 0,
+        leading: IconButton(
+          icon: const Icon(Icons.arrow_back, color: Colors.black),
+          onPressed: () => Navigator.of(context).pop(),
+        ),
+      ),
+      body: Stack(
+        children: [
+          RobotAnimationHeader(isTyping: _isProcessing),
+          Center(
+            child: Column(
+              mainAxisAlignment: MainAxisAlignment.center,
+              children: [
+                // Current recognized text
+                if (_lastWords.isNotEmpty)
+                  Padding(
+                    padding: const EdgeInsets.all(20.0),
+                    child: Card(
+                      elevation: 3,
+                      child: Padding(
+                        padding: const EdgeInsets.all(16.0),
+                        child: Text(
+                          _lastWords,
+                          style: const TextStyle(fontSize: 18),
+                          textAlign: TextAlign.center,
+                        ),
+                      ),
+                    ),
+                  ),
+                
+                Text(
+                   _isListening
+                      ? LocaleData.voiceListening.getString(context)
+                      : _isProcessing
+                          ? LocaleData.voiceProcessing.getString(context)
+                          : LocaleData.voiceTapMic.getString(context),
+                  style: const TextStyle(
+                    fontSize: 16,
+                    color: Colors.grey,
+                  ),
+                ),
+              ],
+            ),
+          ),
+          
+          //microphone button
+          Positioned(
+            left: 0,
+            right: 0,
+            bottom: 50,
+            child: Center(
+              child: GestureDetector(
+                onTap: _toggleListening,
+                child: AnimatedContainer(
+                  duration: const Duration(milliseconds: 200),
+                  width: _isListening ? 55 : 65,
+                  height: _isListening ? 55 : 65,
+                  decoration: BoxDecoration(
+                    color: _isProcessing 
+                        ? Colors.orange 
+                        : _isListening 
+                            ? Colors.redAccent 
+                            : AppColors.darkBlue,
+                    borderRadius: BorderRadius.circular(16),
+                    boxShadow: [
+                      BoxShadow(
+                        color: Colors.black.withValues(alpha: 0.2),
+                        spreadRadius: 2,
+                        blurRadius: 7,
+                        offset: const Offset(0, 3),
+                      ),
+                    ],
+                  ),
+                  child: Icon(
+                    _isProcessing 
+                        ? Icons.hourglass_top 
+                        : _isListening 
+                            ? Icons.stop 
+                            : Icons.mic,
+                    color: Colors.white,
+                    size: 35,
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+  
+  @override
+  void dispose() {
+    _sttService.dispose();
+    super.dispose();
+  }
+}
\ No newline at end of file
Index: lib/pages/9-setting/widgets/profile_dialog.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/9-setting/widgets/profile_dialog.dart b/lib/pages/9-setting/widgets/profile_dialog.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/9-setting/widgets/profile_dialog.dart	
@@ -0,0 +1,212 @@
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class ProfileDialog extends StatefulWidget {
+  final String initialName;
+  final String initialPhone;
+  final String initialAddress;
+  final String email;
+  final String userId;
+  final Function(String, String, String) onSave;
+
+  const ProfileDialog({
+    super.key,
+    required this.initialName,
+    required this.initialPhone,
+    required this.initialAddress,
+    required this.email,
+    required this.userId,
+    required this.onSave,
+  });
+
+  @override
+  State<ProfileDialog> createState() => _ProfileDialogState();
+}
+
+class _ProfileDialogState extends State<ProfileDialog> {
+  late TextEditingController nameController;
+  late TextEditingController phoneController;
+  late TextEditingController addressController;
+  bool isEditing = false;
+
+  @override
+  void initState() {
+    super.initState();
+    nameController = TextEditingController(text: widget.initialName);
+    phoneController = TextEditingController(text: widget.initialPhone);
+    addressController = TextEditingController(text: widget.initialAddress);
+  }
+
+  @override
+  void dispose() {
+    nameController.dispose();
+    phoneController.dispose();
+    addressController.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Dialog(
+      shape: RoundedRectangleBorder(
+        borderRadius: BorderRadius.circular(16),
+      ),
+      backgroundColor: Colors.grey[200],
+      child: Padding(
+        padding: const EdgeInsets.all(20),
+        child: SingleChildScrollView(
+          child: Column(
+            mainAxisSize: MainAxisSize.min,
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              Center(
+                child: Text(
+                  LocaleData.profileInformation.getString(context),
+                  style: TextStyle(
+                    fontSize: 18,
+                    fontWeight: FontWeight.bold,
+                    color: AppColors.primary,
+                  ),
+                ),
+              ),
+              const SizedBox(height: 20),
+              _buildEditableField(
+                LocaleData.fullName.getString(context),
+                nameController,
+                isEditing,
+              ),
+              _buildEditableField(
+                LocaleData.phoneNumber.getString(context),
+                phoneController,
+                isEditing,
+              ),
+              _buildEditableField(
+                LocaleData.address.getString(context),
+                addressController,
+                isEditing,
+              ),
+              _buildDisplayField(
+                LocaleData.email.getString(context),
+                widget.email,
+              ),
+              _buildDisplayField(
+                LocaleData.userId.getString(context),
+                widget.userId,
+              ),
+              const SizedBox(height: 20),
+              Row(
+                mainAxisAlignment: MainAxisAlignment.end,
+                children: [
+                  TextButton(
+                    onPressed: () async {
+                      if (isEditing) {
+                        // Save changes
+                        widget.onSave(
+                          nameController.text,
+                          phoneController.text,
+                          addressController.text,
+                        );
+                        setState(() => isEditing = false);
+                      } else {
+                        setState(() => isEditing = true);
+                      }
+                    },
+                    child: Text(
+                      isEditing
+                          ? LocaleData.save.getString(context)
+                          : LocaleData.edit.getString(context),
+                    ),
+                  ),
+                  TextButton(
+                    onPressed: () {
+                      setState(() => isEditing = false);
+                      Navigator.pop(context);
+                    },
+                    child: Text(
+                      LocaleData.close.getString(context),
+                    ),
+                  ),
+                ],
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+
+  Widget _buildEditableField(
+    String label,
+    TextEditingController controller,
+    bool editable,
+  ) {
+    return Padding(
+      padding: const EdgeInsets.only(bottom: 12),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Text(
+            label,
+            style: const TextStyle(
+              color: AppColors.primary,
+              fontWeight: FontWeight.w600,
+            ),
+          ),
+          const SizedBox(height: 4),
+          TextField(
+            controller: controller,
+            enabled: editable,
+            decoration: InputDecoration(
+              filled: true,
+              fillColor: Colors.white,
+              contentPadding: const EdgeInsets.symmetric(
+                horizontal: 12,
+                vertical: 10,
+              ),
+              border: OutlineInputBorder(
+                borderSide: BorderSide(color: AppColors.primary),
+                borderRadius: BorderRadius.circular(10),
+              ),
+              enabledBorder: OutlineInputBorder(
+                borderSide: BorderSide(color: AppColors.primary),
+                borderRadius: BorderRadius.circular(10),
+              ),
+            ),
+            style: const TextStyle(fontSize: 14),
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildDisplayField(String label, String value) {
+    return Padding(
+      padding: const EdgeInsets.only(bottom: 12),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Text(
+            label,
+            style: const TextStyle(
+              color: AppColors.primary,
+              fontWeight: FontWeight.w600,
+            ),
+          ),
+          const SizedBox(height: 4),
+          Container(
+            width: double.infinity,
+            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 10),
+            decoration: BoxDecoration(
+              color: Colors.white,
+              border: Border.all(color: AppColors.primary),
+              borderRadius: BorderRadius.circular(10),
+            ),
+            child: Text(value, style: const TextStyle(fontSize: 14)),
+          ),
+        ],
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/9-setting/widgets/security_dialog.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/9-setting/widgets/security_dialog.dart b/lib/pages/9-setting/widgets/security_dialog.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/9-setting/widgets/security_dialog.dart	
@@ -0,0 +1,54 @@
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class SecurityDialog extends StatelessWidget {
+  final Function(String) onSavePin;
+
+  const SecurityDialog({
+    super.key,
+    required this.onSavePin,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final pinController = TextEditingController();
+    
+    return AlertDialog(
+      title: Text(LocaleData.setPin.getString(context)),
+      content: TextField(
+        controller: pinController,
+        keyboardType: TextInputType.number,
+        maxLength: 4,
+        obscureText: true,
+        decoration: InputDecoration(
+          labelText: LocaleData.enterPin.getString(context),
+          border: const OutlineInputBorder(),
+        ),
+      ),
+      actions: [
+        TextButton(
+          onPressed: () => Navigator.pop(context),
+          child: Text(LocaleData.cancel.getString(context)),
+        ),
+        TextButton(
+          onPressed: () {
+            if (pinController.text.length == 4) {
+              onSavePin(pinController.text);
+              Navigator.pop(context);
+            } else {
+              ScaffoldMessenger.of(context).showSnackBar(
+                SnackBar(
+                  content: Text(
+                    LocaleData.invalidPin.getString(context),
+                  ),
+                ),
+              );
+            }
+          },
+          child: Text(LocaleData.save.getString(context)),
+        ),
+      ],
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/9-setting/setting.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/9-setting/setting.dart b/lib/pages/9-setting/setting.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/9-setting/setting.dart	
@@ -0,0 +1,331 @@
+import 'dart:io';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/core/storage/cloud/service/setting_service.dart';
+import 'package:finney/pages/9-setting/language_selection.dart';
+import 'package:finney/pages/9-setting/widgets/dropdown_setting.dart';
+import 'package:finney/pages/9-setting/widgets/language_setting.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:image_picker/image_picker.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart';
+import 'widgets/profile_dialog.dart';
+import 'widgets/security_dialog.dart';
+import 'widgets/setting_option.dart';
+
+class Setting extends StatefulWidget {
+  const Setting({super.key});
+
+  @override
+  State<Setting> createState() => _SettingState();
+}
+
+class _SettingState extends State<Setting> {
+  final ImagePicker _picker = ImagePicker();
+  XFile? _imageFile;
+  late final UserSettingsService _settingsService;
+
+  // User data
+  String fullName = '';
+  String phoneNumber = '';
+  String address = '';
+  String email = '';
+  String userId = '';
+  String selectedLanguage = 'Bengali';
+  String selectedTextSize = 'Medium';
+
+  @override
+  void initState() {
+    super.initState();
+    _settingsService = UserSettingsService();
+    _loadUserData();
+  }
+
+  Future<void> _loadUserData() async {
+    final userData = await _settingsService.loadUserData();
+    if (mounted) {
+      setState(() {
+        fullName = userData['name'] ?? '';
+        phoneNumber = userData['phone'] ?? '';
+        address = userData['address'] ?? '';
+        email = userData['email'] ?? '';
+        userId = _settingsService.currentUser?.uid ?? '';
+        selectedTextSize = userData['textSize'] ?? 'Medium';
+        selectedLanguage = userData['language'] ?? 'Bengali';
+      });
+    }
+  }
+
+  Future<void> _pickImage() async {
+    final XFile? image = await _picker.pickImage(source: ImageSource.gallery);
+    if (image != null && mounted) {
+      setState(() {
+        _imageFile = image;
+      });
+    }
+  }
+
+  void _showProfileDialog() {
+    showDialog(
+      context: context,
+      builder: (context) => ProfileDialog(
+        initialName: fullName,
+        initialPhone: phoneNumber,
+        initialAddress: address,
+        email: email,
+        userId: userId,
+        onSave: (name, phone, address) async {
+          final success = await _settingsService.saveUserData(
+            name: name,
+            phone: phone,
+            address: address,
+            textSize: selectedTextSize,
+            language: selectedLanguage,
+          );
+          
+          if (success && mounted) {
+            setState(() {
+              fullName = name;
+              phoneNumber = phone;
+              this.address = address;
+            });
+            
+            AppSnackBar.showSuccess(
+              context, 
+              message: LocaleData.save.getString(context),
+            );
+          } else if (mounted) {
+            AppSnackBar.showError(
+              context,
+              message: LocaleData.errorSavingData.getString(context),
+            );
+          }
+        },
+      ),
+    );
+  }
+
+  void _showSecuritySettings() {
+    showDialog(
+      context: context,
+      builder: (context) => SecurityDialog(
+        onSavePin: (pin) async {
+          final success = await _settingsService.saveSecurityPin(pin);
+          
+          if (success && mounted) {
+            AppSnackBar.showSuccess(
+              context,
+              message: LocaleData.pinSaved.getString(context),
+            );
+          } else if (mounted) {
+            AppSnackBar.showError(
+              context,
+              message: LocaleData.errorSavingData.getString(context),
+            );
+          }
+        },
+      ),
+    );
+  }
+
+  void _showHelpSupport() {
+    AppSnackBar.showInfo(
+      context,
+      message: LocaleData.helpSupportComingSoon.getString(context),
+    );
+  }
+
+  Future<void> _signOut() async {
+    await _settingsService.signOut();
+    if (mounted) {
+      Navigator.pushAndRemoveUntil(
+        context,
+        MaterialPageRoute(builder: (context) => const LanguageSelectionPage()),
+        (route) => false,
+      );
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    double textScaleFactor;
+    switch (selectedTextSize) {
+      case 'Small':
+        textScaleFactor = 0.8;
+        break;
+      case 'Large':
+        textScaleFactor = 1.2;
+        break;
+      default:
+        textScaleFactor = 1.0;
+    }
+
+    return Builder(
+      builder: (context) => MediaQuery(
+        data: MediaQuery.of(context).copyWith(
+          textScaler: TextScaler.linear(textScaleFactor),
+        ),
+        child: Scaffold(
+          backgroundColor: Colors.white,
+          body: SafeArea(
+            child: SingleChildScrollView(
+              child: Column(
+                children: [
+                  AppBar(
+                    backgroundColor: Colors.transparent,
+                    elevation: 0,
+                    title: Text(
+                      LocaleData.settings.getString(context),
+                      style: TextStyle(
+                        color: AppColors.primary,
+                        fontWeight: FontWeight.bold,
+                      ),
+                    ),
+                  ),
+                  const SizedBox(height: 20),
+                  GestureDetector(
+                    onTap: _pickImage,
+                    child: CircleAvatar(
+                      radius: 50,
+                      backgroundColor: Colors.grey[300],
+                      backgroundImage: _imageFile == null
+                          ? const AssetImage('assets/images/placeholder.png')
+                          : FileImage(File(_imageFile!.path)) as ImageProvider,
+                      child: _imageFile == null
+                          ? const Icon(Icons.camera_alt, color: Colors.white)
+                          : null,
+                    ),
+                  ),
+                  const SizedBox(height: 20),
+                  Text(
+                    fullName.isEmpty
+                        ? LocaleData.user.getString(context)
+                        : fullName,
+                    style: const TextStyle(
+                      fontSize: 20,
+                      fontWeight: FontWeight.bold,
+                    ),
+                  ),
+                  const SizedBox(height: 4),
+                  Text(
+                    email.isEmpty ? LocaleData.notAvailable.getString(context) : email,
+                    style: const TextStyle(
+                      color: Colors.grey,
+                      fontSize: 13,
+                    ),
+                  ),
+                  const SizedBox(height: 15),
+                  InkWell(
+                    borderRadius: BorderRadius.circular(15),
+                    onTap: _showProfileDialog,
+                    child: Padding(
+                      padding: const EdgeInsets.symmetric(
+                        horizontal: 16,
+                        vertical: 8,
+                      ),
+                      child: Text(
+                        LocaleData.viewProfile.getString(context),
+                        style: TextStyle(
+                          fontSize: 18,
+                          color: AppColors.primary,
+                          fontWeight: FontWeight.w500,
+                        ),
+                      ),
+                    ),
+                  ),
+                  const SizedBox(height: 30),
+                  Padding(
+                    padding: const EdgeInsets.symmetric(horizontal: 20),
+                    child: Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: [
+                        Text(
+                          LocaleData.appearance.getString(context),
+                          style: TextStyle(
+                            fontSize: 18,
+                            fontWeight: FontWeight.bold,
+                            color: AppColors.primary,
+                          ),
+                        ),
+                        const SizedBox(height: 10),
+                        LanguageSettingOption(
+                          icon: Icons.language,
+                          title: LocaleData.language.getString(context),
+                          value: selectedLanguage,
+                        ),
+                        const SizedBox(height: 10),
+                        DropdownSettingOption(
+                          icon: Icons.text_fields,
+                          title: LocaleData.textSize.getString(context),
+                          value: selectedTextSize,
+                          items: const ['Small', 'Medium', 'Large'],
+                          onChanged: (val) async {
+                            if (val != null) {
+                              setState(() {
+                                selectedTextSize = val;
+                              });
+                              
+                              await _settingsService.saveUserData(
+                                name: fullName,
+                                phone: phoneNumber,
+                                address: address,
+                                textSize: selectedTextSize,
+                                language: selectedLanguage,
+                              );
+                            }
+                          },
+                        ),
+                      ],
+                    ),
+                  ),
+                  const SizedBox(height: 20),
+                  Padding(
+                    padding: const EdgeInsets.symmetric(horizontal: 20),
+                    child: Column(
+                      crossAxisAlignment: CrossAxisAlignment.start,
+                      children: [
+                        Text(
+                          LocaleData.management.getString(context),
+                          style: TextStyle(
+                            fontSize: 18,
+                            fontWeight: FontWeight.bold,
+                            color: AppColors.primary,
+                          ),
+                        ),
+                        const SizedBox(height: 10),
+                        SettingOption(
+                          icon: Icons.security,
+                          title: LocaleData.security.getString(context),
+                          subtitle: LocaleData.setPin.getString(context),
+                          onTap: _showSecuritySettings,
+                        ),
+                        const SizedBox(height: 10),
+                        SettingOption(
+                          icon: Icons.help,
+                          title: LocaleData.helpSupport.getString(context),
+                          subtitle: LocaleData.helpSupport.getString(context),
+                          onTap: _showHelpSupport,
+                        ),
+                        const SizedBox(height: 10),
+                        SettingOption(
+                          icon: Icons.logout,
+                          title: LocaleData.logOut.getString(context),
+                          subtitle: null,
+                          iconColor: Colors.white,
+                          textColor: Colors.white,
+                          isLogOut: true,
+                          onTap: _signOut,
+                        ),
+                      ],
+                    ),
+                  ),
+                  const SizedBox(height: 30),
+                ],
+              ),
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/9-setting/language_selection.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/9-setting/language_selection.dart b/lib/pages/9-setting/language_selection.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/9-setting/language_selection.dart	
@@ -0,0 +1,63 @@
+import 'package:finney/shared/path/app_images.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/pages/1-auth/widgets/my_button.dart';
+import 'package:finney/pages/1-auth/auth_page.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:shared_preferences/shared_preferences.dart'; // Changed from Hive to SharedPreferences
+
+class LanguageSelectionPage extends StatelessWidget {
+  const LanguageSelectionPage({super.key});
+
+  void _setLanguage(BuildContext context, String languageCode) async {
+    // Update locale using FlutterLocalization
+    final localization = FlutterLocalization.instance;
+    localization.translate(languageCode);
+
+    // Save language preference to SharedPreferences instead of Hive
+    final prefs = await SharedPreferences.getInstance();
+    await prefs.setString('language', languageCode);
+
+    // Navigate to AuthPage
+    if (context.mounted) {
+      Navigator.pushReplacement(
+        context,
+        MaterialPageRoute(builder: (context) => const AuthPage()),
+      );
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      body: SafeArea(
+        child: Center(
+          child: Column(
+            mainAxisAlignment: MainAxisAlignment.center,
+            children: [
+              Image.asset(
+                AppImages.appLogo,
+                height: 100,
+              ),
+              const SizedBox(height: 50),
+              MyButton(
+                text: 'English',
+                onTap: () => _setLanguage(context, 'en'),
+                backgroundColor: AppColors.primary,
+                textColor: AppColors.lightBackground,
+              ),
+              const SizedBox(height: 20),
+              MyButton(
+                text: 'বাংলা',
+                onTap: () => _setLanguage(context, 'bn'),
+                backgroundColor: AppColors.primary,
+                textColor: AppColors.lightBackground,
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/7-insights/components/charts/pie/pie_chart.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/7-insights/components/charts/pie/pie_chart.dart b/lib/pages/7-insights/components/charts/pie/pie_chart.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/7-insights/components/charts/pie/pie_chart.dart	
@@ -0,0 +1,291 @@
+import 'package:finney/pages/7-insights/components/charts/pie/pie_category_item.dart';
+import 'package:finney/pages/7-insights/chart_query.dart';
+import 'package:flutter/material.dart';
+import 'package:fl_chart/fl_chart.dart';
+import 'package:intl/intl.dart';
+import 'package:finney/shared/category.dart';
+import 'package:finney/pages/7-insights/insights.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:sprintf/sprintf.dart';
+
+class CategoryPieChart extends StatefulWidget {
+  final List<dynamic> categoryData;
+  final ChartViewType viewType;
+
+  const CategoryPieChart({
+    super.key,
+    required this.categoryData,
+    required this.viewType,
+  });
+
+  @override
+  State<CategoryPieChart> createState() => _CategoryPieChartState();
+}
+
+class _CategoryPieChartState extends State<CategoryPieChart> {
+  Color get _themeColor {
+    return widget.viewType == ChartViewType.income
+        ? Colors.green
+        : Colors.redAccent;
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final currencyFormat = NumberFormat.currency(symbol: '৳');
+
+    // Handle empty data case
+    final total = widget.categoryData.isEmpty
+        ? 0.0
+        : widget.categoryData.fold(0.0, (sum, category) => sum + category['amount']);
+
+    return Container(
+      padding: const EdgeInsets.all(16),
+      decoration: BoxDecoration(
+        color: Colors.white,
+        borderRadius: BorderRadius.circular(16),
+        boxShadow: [
+          BoxShadow(
+            color: Colors.black.withValues(alpha: 0.05),
+            blurRadius: 10,
+            offset: const Offset(0, 5),
+          ),
+        ],
+      ),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          // Header with title and total
+          Row(
+            mainAxisAlignment: MainAxisAlignment.spaceBetween,
+            children: [
+              Text(
+                widget.viewType == ChartViewType.expenses
+                    ? LocaleData.categoryBreakdown.getString(context)
+                    : LocaleData.incomeAnalysis.getString(context),
+                style: const TextStyle(
+                  fontSize: 18,
+                  fontWeight: FontWeight.bold,
+                ),
+              ),
+              Text(
+                '${LocaleData.total.getString(context)}: ${currencyFormat.format(total)}',
+                style: TextStyle(
+                  color: _themeColor,
+                  fontWeight: FontWeight.bold,
+                ),
+              ),
+            ],
+          ),
+
+          const SizedBox(height: 20),
+
+          //Chart container
+          if (widget.categoryData.isEmpty)
+            _buildEmptyState(widget.viewType, context)
+          else
+            Column(
+              children: [
+                Container(
+                  height: 220,
+                  width: double.infinity,
+                  padding: const EdgeInsets.only(top: 10, bottom: 20),
+                  decoration: BoxDecoration(
+                    borderRadius: BorderRadius.circular(12),
+                  ),
+                  child: Center(
+                    child: SizedBox(
+                      height: 180,
+                      width: 180,
+                      child: PieChart(
+                        PieChartData(
+                          sections: _createPieChartSections(widget.categoryData, currencyFormat),
+                          sectionsSpace: 2,
+                          centerSpaceRadius: 40,
+                          startDegreeOffset: -90,
+                          pieTouchData: PieTouchData(
+                            touchCallback: (FlTouchEvent event, pieTouchResponse) {
+                              if (!event.isInterestedForInteractions ||
+                                  pieTouchResponse == null ||
+                                  pieTouchResponse.touchedSection == null) {
+                                return;
+                              }
+                            },
+                            enabled: true,
+                            mouseCursorResolver: (FlTouchEvent touchEvent, PieTouchResponse? pieTouchResponse) {
+                              return SystemMouseCursors.click;
+                            },
+                          ),
+                        ),
+                      ),
+                    ),
+                  ),
+                ),
+                _buildSummaryText(currencyFormat),
+              ],
+            ),
+
+          const SizedBox(height: 30),
+
+          // Category legends below chart
+          ...widget.categoryData.isEmpty
+              ? []
+              : _buildCategoryList(widget.categoryData, total, currencyFormat),
+
+          ChartQuery(
+            chartData: _getChartDataForLLM(),
+            chartType: 'pie chart',
+            viewType: widget.viewType == ChartViewType.expenses ? 'expenses' : 'income',
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildEmptyState(ChartViewType viewType, BuildContext context) {
+    return Center(
+      child: Padding(
+        padding: const EdgeInsets.all(40.0),
+        child: Column(
+          children: [
+            Icon(
+              viewType == ChartViewType.expenses
+                  ? Icons.remove_shopping_cart
+                  : Icons.account_balance_wallet,
+              size: 48,
+              color: Colors.grey.shade400,
+            ),
+            const SizedBox(height: 16),
+            Text(
+              viewType == ChartViewType.expenses
+                  ? LocaleData.noExpenseData.getString(context)
+                  : LocaleData.noIncomeData.getString(context),
+              style: TextStyle(
+                color: Colors.grey.shade600,
+                fontSize: 16,
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  List<Widget> _buildCategoryList(
+      List<dynamic> categories, double total, NumberFormat formatter) {
+    // Sort categories by amount (highest first)
+    final sortedCategories = List<dynamic>.from(categories)
+      ..sort((a, b) => b['amount'].compareTo(a['amount']));
+
+    return sortedCategories.map((category) {
+      final percentage = total > 0 ? (category['amount'] / total * 100) : 0;
+
+      return CategoryExpenseItem(
+        color: category['color'],
+        name: category['name'],
+        amount: category['amount'],
+        percentage: percentage,
+        formatter: formatter,
+        icon: CategoryUtils.getIconForCategory(category['name']),
+      );
+    }).toList();
+  }
+
+  List<PieChartSectionData> _createPieChartSections(List<dynamic> data, NumberFormat currencyFormat) {
+    if (data.isEmpty) {
+      return [
+        PieChartSectionData(
+          color: Colors.grey.shade300,
+          value: 100,
+          title: '',
+          radius: 80,
+          showTitle: false,
+        )
+      ];
+    }
+
+    return data.map((category) {
+      return PieChartSectionData(
+        color: category['color'],
+        value: category['amount'],
+        title: '',
+        radius: 80,
+        showTitle: false,
+      );
+    }).toList();
+  }
+
+  Map<String, dynamic> _getChartDataForLLM() {
+    final Map<String, dynamic> data = {};
+
+    if (widget.categoryData.isEmpty) {
+      return {'empty': true};
+    }
+
+    // Create a simplified version of the chart data for the LLM
+    data['categories'] = widget.categoryData.map((category) => {
+      'name': category['name'],
+      'amount': category['amount'],
+    }).toList();
+
+    data['total'] = widget.categoryData.fold(
+        0.0, (sum, category) => sum + category['amount']);
+
+    return data;
+  }
+
+  Widget _buildSummaryText(NumberFormat currencyFormat) {
+    if (widget.categoryData.isEmpty) return const SizedBox.shrink();
+
+    // Sort categories by amount
+    final sortedCategories = List<dynamic>.from(widget.categoryData)
+      ..sort((a, b) => b['amount'].compareTo(a['amount']));
+
+    final topCategory = sortedCategories.first;
+    final topCategoryAmount = currencyFormat.format(topCategory['amount']);
+    final topCategoryName = topCategory['name'];
+    final total = widget.categoryData.fold(0.0, (sum, category) => sum + category['amount']);
+    final topCategoryPercentage = (topCategory['amount'] / total * 100).toStringAsFixed(1);
+
+    String summary = '';
+    if (widget.viewType == ChartViewType.expenses) {
+      summary = sprintf(
+        FlutterLocalization.instance.currentLocale!.languageCode == 'en' 
+            ? LocaleData.en['expenseCategorySummary']! 
+            : LocaleData.bn['expenseCategorySummary']!,
+        [
+          topCategoryName,
+          topCategoryAmount,
+          topCategoryPercentage,
+        ],
+      );
+    } else {
+      summary = sprintf(
+        FlutterLocalization.instance.currentLocale!.languageCode == 'en' 
+            ? LocaleData.en['incomeCategorySummary']! 
+            : LocaleData.bn['incomeCategorySummary']!,
+        [
+          topCategoryName,
+          topCategoryAmount,
+          topCategoryPercentage,
+        ],
+      );
+    }
+
+    return Container(
+      padding: const EdgeInsets.all(12),
+      decoration: BoxDecoration(
+        color: Colors.grey.shade100,
+        borderRadius: BorderRadius.circular(8),
+      ),
+      child: Text(
+        summary,
+        style: const TextStyle(
+          fontSize: 14,
+          height: 1.5,
+        ),
+        textAlign: TextAlign.center,
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/7-insights/components/charts/bar_chart.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/7-insights/components/charts/bar_chart.dart b/lib/pages/7-insights/components/charts/bar_chart.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/7-insights/components/charts/bar_chart.dart	
@@ -0,0 +1,434 @@
+import 'package:finney/pages/7-insights/components/charts/chart_service.dart';
+import 'package:finney/pages/7-insights/components/time_selector.dart';
+import 'package:finney/pages/7-insights/chart_query.dart';
+import 'package:finney/pages/7-insights/insights.dart';
+import 'package:flutter/material.dart';
+import 'package:fl_chart/fl_chart.dart';
+import 'package:intl/intl.dart';
+import 'package:sprintf/sprintf.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class UnifiedBarChart extends StatefulWidget {
+  final String title;
+  final List<PeriodExpense> periodExpenses;
+  final ChartInterval interval;
+  final TimeRangeData timeRange;
+  final ChartViewType viewType;
+
+  const UnifiedBarChart({
+    super.key,
+    required this.title,
+    required this.periodExpenses,
+    required this.interval,
+    required this.timeRange,
+    required this.viewType,
+  });
+
+  @override
+  State<UnifiedBarChart> createState() => _UnifiedBarChartState();
+}
+
+class _UnifiedBarChartState extends State<UnifiedBarChart> {
+  final int _itemsPerPage = 12;
+  int _currentPage = 0;
+
+  // Get bar color based on view type
+  Color get _barColor {
+    return widget.viewType == ChartViewType.income
+        ? Colors.green
+        : Colors.redAccent;
+  }
+
+  @override
+  void didUpdateWidget(UnifiedBarChart oldWidget) {
+    super.didUpdateWidget(oldWidget);
+    if (widget.periodExpenses != oldWidget.periodExpenses) {
+      _currentPage = 0;
+    }
+  }
+
+  int get _totalPages {
+    return max(1, (widget.periodExpenses.length / _itemsPerPage).ceil());
+  }
+
+  List<PeriodExpense> get _currentPageData {
+    if (widget.periodExpenses.isEmpty) return [];
+
+    final startIndex = _currentPage * _itemsPerPage;
+    final endIndex = min(startIndex + _itemsPerPage, widget.periodExpenses.length);
+
+    return widget.periodExpenses.sublist(startIndex, endIndex);
+  }
+
+  void _nextPage() {
+    if (_currentPage < _totalPages - 1) {
+      setState(() => _currentPage++);
+    }
+  }
+
+  void _previousPage() {
+    if (_currentPage > 0) {
+      setState(() => _currentPage--);
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final currencyFormat = NumberFormat.currency(symbol: '৳');
+    final totalAmount = widget.periodExpenses.isEmpty
+        ? 0.0
+        : widget.periodExpenses.fold(0.0, (sum, expense) => sum + expense.amount);
+
+    return Container(
+      padding: const EdgeInsets.all(16),
+      decoration: BoxDecoration(
+        color: Colors.white,
+        borderRadius: BorderRadius.circular(16),
+        boxShadow: [
+          BoxShadow(
+            color: Colors.black.withValues(alpha: 0.05),
+            blurRadius: 10,
+            offset: const Offset(0, 5),
+          ),
+        ],
+      ),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          _buildHeader(currencyFormat, totalAmount),
+          const SizedBox(height: 8),
+
+          if (widget.periodExpenses.isEmpty)
+            _buildEmptyState()
+          else
+            _buildChart(currencyFormat),
+          ChartQuery(
+            chartData: _getChartDataForLLM(),
+            chartType: 'bar chart',
+            viewType: widget.viewType == ChartViewType.expenses ? 'expenses' : 'income',
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildHeader(NumberFormat currencyFormat, double totalAmount) {
+    return Row(
+      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+      children: [
+        Text(
+          widget.title,
+          style: const TextStyle(
+            fontSize: 18,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        Text(
+          '${LocaleData.total.getString(context)}: ${currencyFormat.format(totalAmount)}',
+          style: TextStyle(
+            color: _barColor,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+      ],
+    );
+  }
+
+  Widget _buildEmptyState() {
+    return Center(
+      child: Padding(
+        padding: const EdgeInsets.all(40.0),
+        child: Text(
+          widget.viewType == ChartViewType.income
+              ? LocaleData.noIncomeData.getString(context)
+              : LocaleData.noExpenseData.getString(context),
+          style: const TextStyle(color: Colors.grey),
+        ),
+      ),
+    );
+  }
+
+  Widget _buildChart(NumberFormat currencyFormat) {
+    return Column(
+      children: [
+        SizedBox(
+          height: 250,
+          child: BarChart(
+            BarChartData(
+              alignment: BarChartAlignment.spaceAround,
+              maxY: _calculateMaxY(_currentPageData),
+              titlesData: _buildTitlesData(currencyFormat),
+              gridData: _buildGridData(),
+              borderData: FlBorderData(show: false),
+              barGroups: _buildBarGroups(),
+              barTouchData: _buildBarTouchData(currencyFormat),
+            ),
+            swapAnimationDuration: const Duration(milliseconds: 150),
+            swapAnimationCurve: Curves.linear,
+          ),
+        ),
+
+        if (_totalPages > 1)
+          _buildPagination(),
+
+        const SizedBox(height: 16),
+        _buildSummaryText(currencyFormat),
+      ],
+    );
+  }
+
+  Widget _buildSummaryText(NumberFormat currencyFormat) {
+    if (widget.periodExpenses.isEmpty) return const SizedBox.shrink();
+
+    final total = widget.periodExpenses.fold(0.0, (sum, expense) => sum + expense.amount);
+    final average = total / widget.periodExpenses.length;
+    final maxExpense = widget.periodExpenses.reduce((a, b) => a.amount > b.amount ? a : b);
+    final minExpense = widget.periodExpenses.reduce((a, b) => a.amount < b.amount ? a : b);
+
+    String summary = '';
+    if (widget.viewType == ChartViewType.expenses) {
+      summary = sprintf(
+        FlutterLocalization.instance.currentLocale!.languageCode == 'en' 
+            ? LocaleData.en['expenseSummary']! 
+            : LocaleData.bn['expenseSummary']!,
+        [
+          currencyFormat.format(total),
+          currencyFormat.format(average),
+          currencyFormat.format(maxExpense.amount),
+          maxExpense.period,
+          currencyFormat.format(minExpense.amount),
+          minExpense.period,
+        ],
+      );
+    } else {
+      summary = sprintf(
+        FlutterLocalization.instance.currentLocale!.languageCode == 'en' 
+            ? LocaleData.en['incomeSummary']! 
+            : LocaleData.bn['incomeSummary']!,
+        [
+          currencyFormat.format(total),
+          currencyFormat.format(average),
+          currencyFormat.format(maxExpense.amount),
+          maxExpense.period,
+          currencyFormat.format(minExpense.amount),
+          minExpense.period,
+        ],
+      );
+    }
+
+    return Container(
+      padding: const EdgeInsets.all(12),
+      decoration: BoxDecoration(
+        color: Colors.grey.shade100,
+        borderRadius: BorderRadius.circular(8),
+      ),
+      child: Text(
+        summary,
+        style: const TextStyle(
+          fontSize: 14,
+          height: 1.5,
+        ),
+        textAlign: TextAlign.center,
+      ),
+    );
+  }
+
+  FlTitlesData _buildTitlesData(NumberFormat currencyFormat) {
+    return FlTitlesData(
+      show: true,
+      bottomTitles: AxisTitles(
+        sideTitles: SideTitles(
+          showTitles: true,
+          getTitlesWidget: (value, meta) {
+            final index = value.toInt();
+            if (index >= 0 && index < _currentPageData.length) {
+              final label = _currentPageData[index].period;
+              final displayLabel = label.length > 5 ? label.substring(0, 5) : label;
+
+              return SideTitleWidget(
+                axisSide: meta.axisSide,
+                space: 8,
+                child: Text(
+                  displayLabel,
+                  style: const TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 10,
+                  ),
+                ),
+              );
+            }
+            return const SizedBox();
+          },
+          reservedSize: 30,
+        ),
+      ),
+      leftTitles: AxisTitles(
+        sideTitles: SideTitles(
+          showTitles: true,
+          getTitlesWidget: (value, meta) {
+            if (value == 0) return const SizedBox();
+            return SideTitleWidget(
+              axisSide: meta.axisSide,
+              space: 8,
+              child: Text(
+                currencyFormat.format(value),
+                style: const TextStyle(
+                  fontWeight: FontWeight.bold,
+                  fontSize: 10,
+                ),
+              ),
+            );
+          },
+          interval: _calculateYAxisInterval(_currentPageData),
+          reservedSize: 60, // Increased reserved size to prevent overlapping
+        ),
+      ),
+      topTitles: const AxisTitles(sideTitles: SideTitles(showTitles: false)),
+      rightTitles: const AxisTitles(sideTitles: SideTitles(showTitles: false)),
+    );
+  }
+
+  FlGridData _buildGridData() {
+    return FlGridData(
+      show: true,
+      drawVerticalLine: false,
+      horizontalInterval: _calculateYAxisInterval(_currentPageData),
+      getDrawingHorizontalLine: (value) {
+        return FlLine(
+          color: Colors.grey.withValues(alpha: 0.2),
+          strokeWidth: 1,
+          dashArray: [5, 5],
+        );
+      },
+    );
+  }
+
+  List<BarChartGroupData> _buildBarGroups() {
+    return _currentPageData.asMap().entries.map((entry) {
+      return BarChartGroupData(
+        x: entry.key,
+        barRods: [
+          BarChartRodData(
+            toY: entry.value.amount,
+            color: _barColor, // Use dynamic color based on type
+            width: _getBarWidth(),
+            borderRadius: const BorderRadius.only(
+              topLeft: Radius.circular(4),
+              topRight: Radius.circular(4),
+            ),
+          ),
+        ],
+      );
+    }).toList();
+  }
+
+  BarTouchData _buildBarTouchData(NumberFormat currencyFormat) {
+    return BarTouchData(
+      touchCallback: (FlTouchEvent event, response) {
+        if (response == null || response.spot == null) {
+          return;
+        }
+      },
+      touchTooltipData: BarTouchTooltipData(
+        tooltipBgColor: Colors.transparent,
+        tooltipRoundedRadius: 0,
+        tooltipPadding: EdgeInsets.zero,
+        tooltipMargin: 0,
+        getTooltipItem: (group, groupIndex, rod, rodIndex) {
+          return null;
+        },
+      ),
+    );
+  }
+
+  Widget _buildPagination() {
+    return Padding(
+      padding: const EdgeInsets.only(top: 16.0),
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          IconButton(
+            icon: Icon(
+              Icons.arrow_back_ios,
+              color: _currentPage > 0 ? _barColor : Colors.grey.shade300,
+              size: 18,
+            ),
+            onPressed: _currentPage > 0 ? _previousPage : null,
+          ),
+          Text(
+            LocaleData.pagination.getString(context).replaceAll('%d', '${_currentPage + 1}').replaceAll('%d', '$_totalPages'),
+            style: const TextStyle(fontWeight: FontWeight.bold),
+          ),
+          IconButton(
+            icon: Icon(
+              Icons.arrow_forward_ios,
+              color: _currentPage < _totalPages - 1 ? _barColor : Colors.grey.shade300,
+              size: 18,
+            ),
+            onPressed: _currentPage < _totalPages - 1 ? _nextPage : null,
+          ),
+        ],
+      ),
+    );
+  }
+
+  double _getBarWidth() {
+    final itemCount = _currentPageData.length;
+    if (itemCount <= 4) return 30;
+    if (itemCount <= 8) return 20;
+    return 12;
+  }
+
+  double _calculateMaxY(List<PeriodExpense> data) {
+    if (data.isEmpty) return 100;
+
+    final maxAmount = data
+        .map((expense) => expense.amount)
+        .reduce((a, b) => a > b ? a : b);
+
+    if (maxAmount == 0) return 100;
+
+    final interval = _calculateYAxisInterval(data);
+    return ((maxAmount / interval).ceil() * interval).toDouble();
+  }
+
+  double _calculateYAxisInterval(List<PeriodExpense> data) {
+    if (data.isEmpty) return 100;
+
+    final maxAmount = data
+        .map((expense) => expense.amount)
+        .reduce((a, b) => a > b ? a : b);
+
+    if (maxAmount == 0) return 100;
+
+    if (maxAmount > 1000) return 250;
+    if (maxAmount > 500) return 100;
+    return 50;
+  }
+
+  int min(int a, int b) => a < b ? a : b;
+  int max(int a, int b) => a > b ? a : b;
+
+
+  Map<String, dynamic> _getChartDataForLLM() {
+    final Map<String, dynamic> data = {};
+
+    if (widget.periodExpenses.isEmpty) {
+      return {'empty': true};
+    }
+
+    data['periods'] = widget.periodExpenses.map((expense) => {
+      'period': expense.period,
+      'amount': expense.amount,
+    }).toList();
+
+    data['total'] = widget.periodExpenses.fold(
+        0.0, (sum, expense) => sum + expense.amount);
+
+    data['interval'] = widget.interval.toString().split('.').last;
+    data['timeRange'] = widget.timeRange.range.toString().split('.').last;
+
+    return data;
+  }
+}
\ No newline at end of file
Index: lib/pages/7-insights/components/charts/chart_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/7-insights/components/charts/chart_service.dart b/lib/pages/7-insights/components/charts/chart_service.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/7-insights/components/charts/chart_service.dart	
@@ -0,0 +1,250 @@
+import 'package:finney/pages/7-insights/components/time_selector.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/shared/category.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+// Add TransactionType enum
+enum TransactionType {
+  expense,
+  income,
+  all
+}
+
+// Model for period expenses (for bar chart)
+class PeriodExpense {
+  final String period;
+  final double amount;
+
+  PeriodExpense({
+    required this.period,
+    required this.amount,
+  });
+}
+
+// Model for category expenses (for pie chart)
+class CategoryExpense {
+  final String name;
+  final double amount;
+  final Color color;
+
+  CategoryExpense({
+    required this.name,
+    required this.amount,
+    required this.color,
+  });
+}
+
+enum ChartInterval {
+  week, 
+  month,
+  year,
+}
+
+class ChartService {
+  List<TransactionModel> filterTransactionsByTimeRange(
+    List<TransactionModel> transactions,
+    TimeRangeData timeRange,
+  ) {
+    return transactions.where((transaction) {
+      return transaction.date.isAfter(timeRange.startDate) &&
+          transaction.date.isBefore(timeRange.endDate.add(const Duration(days: 1)));
+    }).toList();
+  }
+  
+  List<TransactionModel> filterByTransactionType(
+    List<TransactionModel> transactions,
+    TransactionType type, 
+  ) {
+    if (type == TransactionType.all) return transactions;
+    
+    return transactions.where((transaction) {
+      if (type == TransactionType.income) {
+        return transaction.amount > 0;
+      } else {
+        return transaction.amount < 0;
+      }
+    }).toList();
+  }
+
+  List<PeriodExpense> getPeriodExpenses(
+  List<TransactionModel> transactions,
+  TimeRangeData timeRange,
+  ChartInterval interval,
+  BuildContext context, {
+  TransactionType transactionType = TransactionType.expense,
+}) {
+  if (transactions.isEmpty) return [];
+
+  final filteredTransactions = filterTransactionsByTimeRange(
+    transactions,
+    timeRange,
+  );
+  final typeFilteredTransactions = filterByTransactionType(
+    filteredTransactions,
+    transactionType,
+  );
+
+  if (typeFilteredTransactions.isEmpty) return [];
+
+  final Map<String, double> periodMap = {};
+  for (var transaction in typeFilteredTransactions) {
+    final periodKey = _getPeriodKey(transaction.date, interval, context);
+    final amount = transactionType == TransactionType.expense
+        ? transaction.amount.abs()
+        : transaction.amount;
+    periodMap[periodKey] = (periodMap[periodKey] ?? 0) + amount;
+  }
+
+  final allPeriods = _generateAllPeriods(
+    timeRange.startDate,
+    timeRange.endDate,
+    interval,
+    context,
+  );
+
+  return allPeriods.map((period) {
+    return PeriodExpense(
+      period: period,
+      amount: periodMap[period] ?? 0.0,
+    );
+  }).toList();
+  }
+  List<CategoryExpense> getCategoryExpenses(
+    List<TransactionModel> transactions,
+    TimeRangeData timeRange, {
+    TransactionType transactionType = TransactionType.expense,
+  }) {
+
+    final filteredTransactions = filterTransactionsByTimeRange(
+      transactions,
+      timeRange,
+    );
+    
+    final typeFilteredTransactions = filterByTransactionType(
+      filteredTransactions,
+      transactionType,
+    );
+
+    if (typeFilteredTransactions.isEmpty) return [];
+
+    final Map<String, double> categoryMap = {};
+    final Map<String, Color> categoryColorMap = {};
+    
+    for (var transaction in typeFilteredTransactions) {
+      final category = transaction.category;
+      final amount = transactionType == TransactionType.expense
+          ? transaction.amount.abs() 
+          : transaction.amount;
+      
+      categoryMap[category] = (categoryMap[category] ?? 0) + amount;
+      categoryColorMap[category] = CategoryUtils.getColorForCategory(category);
+    }
+
+    return categoryMap.entries.map((entry) {
+      return CategoryExpense(
+        name: entry.key,
+        amount: entry.value,
+        color: categoryColorMap[entry.key] ?? Colors.grey,
+      );
+    }).toList()
+      ..sort((a, b) => b.amount.compareTo(a.amount));
+  }
+  
+  ChartInterval getIntervalForTimeRange(TimeRangeData timeRange) {
+    switch (timeRange.range) {
+      case TimeRange.week:
+        return ChartInterval.week;
+      case TimeRange.month:
+        return ChartInterval.month;
+      case TimeRange.year:
+      case TimeRange.allTime:
+        return ChartInterval.year;
+    }
+  }
+  
+  List<Map<String, dynamic>> convertCategoryExpensesToMap(List<CategoryExpense> expenses) {
+    return expenses.map((item) => {
+      'name': item.name,
+      'amount': item.amount,
+      'color': item.color,
+    }).toList();
+  }
+
+  String _getPeriodKey(DateTime date, ChartInterval interval, BuildContext context) {
+  switch (interval) {
+    case ChartInterval.week:
+      return _getWeekdayName(date.weekday, context);
+    case ChartInterval.month:
+      return date.day.toString();
+    case ChartInterval.year:
+      return _getMonthName(date.month, context);
+  }
+  }
+
+  List<String> _generateAllPeriods(
+  DateTime startDate,
+  DateTime endDate,
+  ChartInterval interval,
+  BuildContext context,
+) {
+  switch (interval) {
+    case ChartInterval.week:
+      return List.generate(7, (i) => _getWeekdayName(i + 1, context));
+    case ChartInterval.month:
+      final daysInMonth = DateTime(startDate.year, startDate.month + 1, 0).day;
+      return List.generate(daysInMonth, (i) => (i + 1).toString());
+    case ChartInterval.year:
+      return List.generate(12, (i) => _getMonthName(i + 1, context));
+  }
+  }
+
+  String _getWeekdayName(int weekday, BuildContext context) {
+  const weekdayKeys = [
+    LocaleData.mon,
+    LocaleData.tue,
+    LocaleData.wed,
+    LocaleData.thu,
+    LocaleData.fri,
+    LocaleData.sat,
+    LocaleData.sun,
+  ];
+  return weekdayKeys[weekday - 1].getString(context);
+  }
+
+  String _getMonthName(int month, BuildContext context) {
+  const monthKeys = [
+    LocaleData.jan,
+    LocaleData.feb,
+    LocaleData.mar,
+    LocaleData.apr,
+    LocaleData.may,
+    LocaleData.jun,
+    LocaleData.jul,
+    LocaleData.aug,
+    LocaleData.sep,
+    LocaleData.oct,
+    LocaleData.nov,
+    LocaleData.dec,
+  ];
+  return monthKeys[month - 1].getString(context);
+  }
+
+  double calculateTotalIncome(List<TransactionModel> transactions) {
+    return transactions
+        .where((transaction) => transaction.amount > 0)
+        .fold(0.0, (sum, transaction) => sum + transaction.amount);
+  }
+
+  double calculateTotalExpenses(List<TransactionModel> transactions) {
+    return transactions
+        .where((transaction) => transaction.amount < 0)
+        .fold(0.0, (sum, transaction) => sum + transaction.amount.abs());
+  }
+
+  double calculateBalance(List<TransactionModel> transactions) {
+    return transactions.fold(
+        0.0, (sum, transaction) => sum + transaction.amount);
+  }
+}
\ No newline at end of file
Index: lib/pages/7-insights/components/time_selector.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/7-insights/components/time_selector.dart b/lib/pages/7-insights/components/time_selector.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/7-insights/components/time_selector.dart	
@@ -0,0 +1,338 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+enum TimeRange {
+  week,
+  month,
+  year,
+  allTime,
+}
+
+class TimeRangeData {
+  final TimeRange range;
+  final DateTime startDate;
+  final DateTime endDate;
+  final String label;
+  final int? year;
+
+  TimeRangeData({
+    required this.range,
+    required this.startDate,
+    required this.endDate,
+    required this.label,
+    this.year,
+  });
+
+  factory TimeRangeData.week() {
+    final now = DateTime.now();
+    final start = now.subtract(Duration(days: now.weekday - 1));
+    final startDate = DateTime(start.year, start.month, start.day);
+    return TimeRangeData(
+      range: TimeRange.week,
+      startDate: startDate,
+      endDate: now,
+      label: 'thisWeek',
+    );
+  }
+
+  factory TimeRangeData.month() {
+    final now = DateTime.now();
+    final start = DateTime(now.year, now.month, 1);
+    return TimeRangeData(
+      range: TimeRange.month,
+      startDate: start,
+      endDate: now,
+      label: 'thisMonth',
+    );
+  }
+
+  factory TimeRangeData.year() {
+    final now = DateTime.now();
+    final start = DateTime(now.year, 1, 1);
+    return TimeRangeData(
+      range: TimeRange.year,
+      startDate: start,
+      endDate: now,
+      label: 'thisYear',
+    );
+  }
+
+  factory TimeRangeData.allTime({int? year}) {
+    final now = DateTime.now();
+    final selectedYear = year ?? now.year;
+    final start = DateTime(selectedYear, 1, 1);
+    final end = selectedYear == now.year
+        ? now
+        : DateTime(selectedYear, 12, 31);
+    return TimeRangeData(
+      range: TimeRange.allTime,
+      startDate: start,
+      endDate: end,
+      label: 'allTime',
+      year: selectedYear,
+    );
+  }
+
+  // Helper to create a new instance with a different year
+  TimeRangeData copyWithYear(int newYear) {
+    if (range != TimeRange.allTime) return this;
+    return TimeRangeData.allTime(year: newYear);
+  }
+
+  String getLocalizedLabel(BuildContext context) {
+    switch (label) {
+      case 'thisWeek':
+        return LocaleData.thisWeek.getString(context);
+      case 'thisMonth':
+        return LocaleData.thisMonth.getString(context);
+      case 'thisYear':
+        return LocaleData.thisYear.getString(context);
+      case 'allTime':
+        return '${LocaleData.allTime.getString(context)} (${year ?? DateTime.now().year})';
+      default:
+        return label;
+    }
+  }
+}
+
+class TimeRangeSelector extends StatelessWidget {
+  final TimeRangeData initialTimeRange;
+  final Function(TimeRangeData) onTimeRangeChanged;
+
+  const TimeRangeSelector({
+    super.key,
+    required this.initialTimeRange,
+    required this.onTimeRangeChanged,
+  });
+
+  void _showTimeRangeModal(BuildContext context) {
+    showModalBottomSheet(
+      context: context,
+      shape: const RoundedRectangleBorder(
+        borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
+      ),
+      builder: (context) => ClipRRect(
+        borderRadius: const BorderRadius.vertical(top: Radius.circular(20)),
+        child: TimeRangeOptionsSheet(
+          currentTimeRange: initialTimeRange,
+          onTimeRangeChanged: (newRange) {
+            Navigator.of(context).pop();
+            onTimeRangeChanged(newRange);
+          },
+        ),
+      ),
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      padding: const EdgeInsets.all(20),
+      decoration: BoxDecoration(
+        color: Colors.white,
+        borderRadius: BorderRadius.circular(20),
+      ),
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.spaceBetween,
+        children: [
+          TextButton.icon(
+            onPressed: () => _showTimeRangeModal(context),
+            icon: const Icon(Icons.calendar_today, size: 18, color: AppColors.primary),
+            label: Text(
+              initialTimeRange.getLocalizedLabel(context),
+              style: TextStyle(
+                fontSize: 16,
+                fontWeight: FontWeight.bold,
+                color: AppColors.primary,
+              ),
+            ),
+            style: TextButton.styleFrom(
+              padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),
+              shape: RoundedRectangleBorder(
+                borderRadius: BorderRadius.circular(8),
+                side: BorderSide(
+                  color: AppColors.primary,
+                ),
+              ),
+            ),
+          ),
+          if (initialTimeRange.range == TimeRange.allTime)
+            _buildYearNavigationButtons(context),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildYearNavigationButtons(BuildContext context) {
+    final currentYear = initialTimeRange.year ?? DateTime.now().year;
+    final isCurrentYear = DateTime.now().year == currentYear;
+
+    return Row(
+      children: [
+        // Previous year button
+        IconButton(
+          icon: Icon(
+            Icons.arrow_back_ios,
+            color: AppColors.primary,
+            size: 16,
+          ),
+          onPressed: () {
+            onTimeRangeChanged(initialTimeRange.copyWithYear(currentYear - 1));
+          },
+        ),
+
+        // Year display
+        Text(
+          currentYear.toString(),
+          style: const TextStyle(
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+
+        // Next year button (disable if at current year)
+        IconButton(
+          icon: Icon(
+            Icons.arrow_forward_ios,
+            color: isCurrentYear ? Colors.grey.shade300 : AppColors.primary,
+            size: 16,
+          ),
+          onPressed: isCurrentYear
+              ? null
+              : () {
+                  if (currentYear < DateTime.now().year) {
+                    onTimeRangeChanged(initialTimeRange.copyWithYear(currentYear + 1));
+                  }
+                },
+        ),
+      ],
+    );
+  }
+}
+
+class TimeRangeOptionsSheet extends StatefulWidget {
+  final TimeRangeData currentTimeRange;
+  final Function(TimeRangeData) onTimeRangeChanged;
+
+  const TimeRangeOptionsSheet({
+    super.key,
+    required this.currentTimeRange,
+    required this.onTimeRangeChanged,
+  });
+
+  @override
+  State<TimeRangeOptionsSheet> createState() => _TimeRangeOptionsSheetState();
+}
+
+class _TimeRangeOptionsSheetState extends State<TimeRangeOptionsSheet> {
+  late TimeRangeData _selectedTimeRange;
+
+  @override
+  void initState() {
+    super.initState();
+    _selectedTimeRange = widget.currentTimeRange;
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      color: Colors.white,
+      padding: const EdgeInsets.all(24),
+      child: Column(
+        mainAxisSize: MainAxisSize.min,
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Center(
+            child: Text(
+              LocaleData.selectTimePeriod.getString(context),
+              style: TextStyle(
+                fontSize: 20,
+                fontWeight: FontWeight.bold,
+              ),
+            ),
+          ),
+          const SizedBox(height: 16),
+          _buildTimeRangeOption(
+            LocaleData.thisWeek.getString(context),
+            Icons.view_week,
+            TimeRangeData.week(),
+          ),
+          _buildDivider(),
+          _buildTimeRangeOption(
+            LocaleData.thisMonth.getString(context),
+            Icons.calendar_view_month,
+            TimeRangeData.month(),
+          ),
+          _buildDivider(),
+          _buildTimeRangeOption(
+            LocaleData.thisYear.getString(context),
+            Icons.calendar_today,
+            TimeRangeData.year(),
+          ),
+          _buildDivider(),
+          _buildTimeRangeOption(
+            LocaleData.allTime.getString(context),
+            Icons.all_inclusive,
+            TimeRangeData.allTime(),
+          ),
+          const SizedBox(height: 16),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildTimeRangeOption(String title, IconData icon, TimeRangeData timeRange) {
+    final isSelected = timeRange.range == TimeRange.allTime
+        ? _selectedTimeRange.range == TimeRange.allTime
+        : _selectedTimeRange.range == timeRange.range;
+
+    return InkWell(
+      onTap: () {
+        setState(() {
+          if (timeRange.range == TimeRange.allTime && _selectedTimeRange.range == TimeRange.allTime) {
+            _selectedTimeRange = TimeRangeData.allTime(year: _selectedTimeRange.year);
+          } else {
+            _selectedTimeRange = timeRange;
+          }
+        });
+        widget.onTimeRangeChanged(_selectedTimeRange);
+      },
+      child: Padding(
+        padding: const EdgeInsets.symmetric(vertical: 12),
+        child: Row(
+          children: [
+            Icon(
+              icon,
+              size: 20,
+              color: isSelected ? AppColors.primary : Colors.grey.shade600,
+            ),
+            const SizedBox(width: 16),
+            Text(
+              title,
+              style: TextStyle(
+                fontSize: 16,
+                fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,
+                color: isSelected ? AppColors.primary : Colors.black,
+              ),
+            ),
+            const Spacer(),
+            if (isSelected)
+              Icon(
+                Icons.check_circle,
+                color: AppColors.primary,
+                size: 20,
+              ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildDivider() {
+    return Divider(
+      color: Colors.grey.withValues(alpha: 0.2),
+      height: 1,
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/7-insights/insights.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/7-insights/insights.dart b/lib/pages/7-insights/insights.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/7-insights/insights.dart	
@@ -0,0 +1,304 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/pages/7-insights/components/charts/bar_chart.dart';
+import 'package:finney/pages/7-insights/components/charts/chart_service.dart' as chart_service;
+import 'package:finney/pages/7-insights/components/charts/pie/pie_chart.dart';
+import 'package:finney/pages/7-insights/components/time_selector.dart';
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/pages/3-dashboard/dashboard.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/core/storage/storage_manager.dart'; // Added for singleton access
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart'; // Added for snackbars
+
+enum ChartViewType { expenses, income }
+
+class Insights extends StatefulWidget {
+  const Insights({super.key});
+
+  @override
+  State<Insights> createState() => _InsightsState();
+}
+
+class _InsightsState extends State<Insights> with SingleTickerProviderStateMixin {
+  late TabController _tabController;
+  late final TransactionCloudService _transactionService; // Changed to late final
+  final chart_service.ChartService _chartService = chart_service.ChartService();
+  
+  List<TransactionModel> _transactions = [];
+  List<chart_service.PeriodExpense> _periodExpenses = [];
+  List<chart_service.PeriodExpense> _periodIncome = [];
+  List<chart_service.CategoryExpense> _categoryExpenses = [];
+  List<chart_service.CategoryExpense> _categoryIncome = [];
+  TimeRangeData _currentTimeRange = DashboardState.currentTimeRange;
+  
+  // Add view type state
+  ChartViewType _currentViewType = ChartViewType.expenses;
+  
+  bool _isLoading = true;
+  
+  @override
+  void initState() {
+    super.initState();
+    _tabController = TabController(length: 2, vsync: this);
+    
+    // Get transaction service from StorageManager
+    _transactionService = StorageManager().transactionService;
+    
+    _loadData();
+  }
+  
+  @override
+  void dispose() {
+    _tabController.dispose();
+    super.dispose();
+  }
+  
+  Future<void> _loadData() async {
+    setState(() {
+      _isLoading = true;
+    });
+    
+    try {
+      _transactionService.getTransactions().listen(
+        (transactions) {
+          if (mounted) {
+            setState(() {
+              _transactions = transactions;
+              _updateChartsForTimeRange();
+              _isLoading = false;
+            });
+          }
+        },
+        onError: (error) {
+          if (mounted) {
+            setState(() {
+              _isLoading = false;
+            });
+            AppSnackBar.showError(
+              context, 
+              message: 'Error loading transactions: ${error.toString()}',
+            );
+          }
+        }
+      );
+    } catch (e) {
+      if (mounted) {
+        setState(() {
+          _isLoading = false;
+        });
+        AppSnackBar.showError(
+          context, 
+          message: 'Error loading transactions: ${e.toString()}',
+        );
+      }
+    }
+  }
+  
+  void _onTimeRangeChanged(TimeRangeData newTimeRange) {
+    setState(() {
+      _currentTimeRange = newTimeRange;
+      _updateChartsForTimeRange();
+      
+      // Update the shared timeRange in Dashboard if needed
+      DashboardState.currentTimeRange = newTimeRange;
+    });
+  }
+  
+  void _updateChartsForTimeRange() {
+    if (_transactions.isEmpty) return;
+    
+    // Use ChartService to determine interval
+    final interval = _chartService.getIntervalForTimeRange(_currentTimeRange);
+    
+    setState(() {
+      // Update bar chart data - both expense and income
+      _periodExpenses = _chartService.getPeriodExpenses(
+        _transactions,
+        _currentTimeRange,
+        interval,
+        context,
+        transactionType: chart_service.TransactionType.expense,
+      );
+      
+      _periodIncome = _chartService.getPeriodExpenses(
+        _transactions,
+        _currentTimeRange,
+        interval,
+        context,
+        transactionType: chart_service.TransactionType.income,
+      );
+      
+      // Update pie chart data - both expense and income
+      _categoryExpenses = _chartService.getCategoryExpenses(
+        _transactions,
+        _currentTimeRange,
+        transactionType: chart_service.TransactionType.expense,
+      );
+      
+      _categoryIncome = _chartService.getCategoryExpenses(
+        _transactions,
+        _currentTimeRange,
+        transactionType: chart_service.TransactionType.income,
+      );
+    });
+  }
+  
+  // Add this method to build toggle buttons in the Insights page
+  Widget _buildToggleButtons() {
+    return Container(
+      height: 40,
+      decoration: BoxDecoration(
+        color: Colors.grey.withValues(alpha: 0.1), 
+        borderRadius: BorderRadius.circular(8),
+      ),
+      child: Row(
+        children: [
+          // Expenses button
+          Expanded(
+            child: GestureDetector(
+              onTap: () => setState(() => _currentViewType = ChartViewType.expenses),
+              child: Container(
+                decoration: BoxDecoration(
+                  color: _currentViewType == ChartViewType.expenses
+                      ? Colors.redAccent
+                      : Colors.transparent,
+                  borderRadius: BorderRadius.circular(8),
+                ),
+                alignment: Alignment.center,
+                child: Text(
+                  LocaleData.expenses.getString(context),
+                  style: TextStyle(
+                    color: _currentViewType == ChartViewType.expenses
+                        ? Colors.white
+                        : Colors.black87,
+                    fontWeight: FontWeight.bold,
+                  ),
+                ),
+              ),
+            ),
+          ),
+          
+          // Income button
+          Expanded(
+            child: GestureDetector(
+              onTap: () => setState(() => _currentViewType = ChartViewType.income),
+              child: Container(
+                decoration: BoxDecoration(
+                  color: _currentViewType == ChartViewType.income
+                      ? Colors.green
+                      : Colors.transparent,
+                  borderRadius: BorderRadius.circular(8),
+                ),
+                alignment: Alignment.center,
+                child: Text(
+                  LocaleData.income.getString(context),
+                  style: TextStyle(
+                    color: _currentViewType == ChartViewType.income
+                        ? Colors.white
+                        : Colors.black87,
+                    fontWeight: FontWeight.bold,
+                  ),
+                ),
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    // Get current data based on selected view
+    final currentPeriodData = _currentViewType == ChartViewType.expenses 
+        ? _periodExpenses 
+        : _periodIncome;
+        
+    final currentCategoryData = _currentViewType == ChartViewType.expenses
+        ? _categoryExpenses
+        : _categoryIncome;
+
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      appBar: AppBar(
+        backgroundColor: AppColors.lightBackground,
+        title: Text(
+          LocaleData.insights.getString(context),
+          style: const TextStyle(
+            color: AppColors.primary,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        bottom: TabBar(
+          controller: _tabController,
+          labelColor: AppColors.primary,
+          unselectedLabelColor: Colors.grey,
+          indicatorColor: AppColors.primary,
+          tabs: [
+            Tab(
+              icon: const Icon(Icons.bar_chart),
+              text: LocaleData.spendingAnalysis.getString(context),
+            ),
+            Tab(
+              icon: const Icon(Icons.pie_chart),
+              text: LocaleData.categoryBreakdown.getString(context),
+            ),
+          ],
+        ),
+      ),
+      body: _isLoading 
+          ? const Center(child: CircularProgressIndicator())
+          : Column(
+              children: [
+                // Time selector and toggle buttons
+                Padding(
+                  padding: const EdgeInsets.all(16.0),
+                  child: Column(
+                    children: [
+                      TimeRangeSelector(
+                        initialTimeRange: _currentTimeRange,
+                        onTimeRangeChanged: _onTimeRangeChanged,
+                      ),
+                      const SizedBox(height: 16),
+                      _buildToggleButtons(),
+                    ],
+                  ),
+                ),
+                
+                // Tab content
+                Expanded(
+                  child: TabBarView(
+                    controller: _tabController,
+                    children: [
+                      // Bar Chart Tab
+                      SingleChildScrollView(
+                        padding: const EdgeInsets.all(16.0),
+                        child: UnifiedBarChart(
+                          title: _currentViewType == ChartViewType.expenses 
+                              ? LocaleData.expenseAnalysis.getString(context)
+                              : LocaleData.incomeAnalysis.getString(context),
+                          periodExpenses: currentPeriodData,
+                          interval: _chartService.getIntervalForTimeRange(_currentTimeRange),
+                          timeRange: _currentTimeRange,
+                          viewType: _currentViewType,
+                        ),
+                      ),
+                      
+                      // Pie Chart Tab
+                      SingleChildScrollView(
+                        padding: const EdgeInsets.all(16.0),
+                        child: CategoryPieChart(
+                          categoryData: _chartService.convertCategoryExpensesToMap(currentCategoryData),
+                          viewType: _currentViewType,
+                        ),
+                      ),
+                    ],
+                  ),
+                ),
+              ],
+            ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/7-insights/chart_query.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/7-insights/chart_query.dart b/lib/pages/7-insights/chart_query.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/7-insights/chart_query.dart	
@@ -0,0 +1,194 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_gemini/flutter_gemini.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class ChartQuery extends StatefulWidget {
+  final Map<String, dynamic> chartData;
+  final String chartType;
+  final String viewType;
+
+  const ChartQuery({
+    super.key,
+    required this.chartData,
+    required this.chartType,
+    required this.viewType,
+  });
+
+  @override
+  State<ChartQuery> createState() => _ChartQueryState();
+}
+
+class _ChartQueryState extends State<ChartQuery> {
+  final TextEditingController _questionController = TextEditingController();
+  String _answer = '';
+  bool _isLoading = false;
+  final Gemini _gemini = Gemini.instance;
+  bool _showQueryField = false;
+
+  @override
+  void dispose() {
+    _questionController.dispose();
+    super.dispose();
+  }
+  String sprintf(String format, List<dynamic> args) {
+  String result = format;
+  for (int i = 0; i < args.length; i++) {
+    result = result.replaceFirst('%s', args[i].toString());
+  }
+  return result;
+  }
+
+  Future<void> _askQuestion() async {
+  if (_questionController.text.trim().isEmpty) return;
+
+  setState(() {
+    _isLoading = true;
+  });
+
+  try {
+    // Create context for the LLM about the chart data
+    final String chartContext = sprintf(
+      LocaleData.chartContext.getString(context),
+      [widget.chartType, widget.viewType, widget.chartData.toString()],
+    );
+
+    final prompt = sprintf(
+      LocaleData.queryPrompt.getString(context),
+      [chartContext, _questionController.text],
+    );
+
+    final response = await _gemini.prompt(
+      parts: [Part.text(prompt)],
+    );
+
+    setState(() {
+      _answer = response?.output ?? LocaleData.queryError.getString(context);
+      _isLoading = false;
+    });
+  } catch (e) {
+    setState(() {
+      _answer = sprintf(LocaleData.queryErrorWithMessage.getString(context), [e.toString()]);
+      _isLoading = false;
+    });
+  }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return AnimatedContainer(
+      duration: const Duration(milliseconds: 300),
+      margin: const EdgeInsets.only(top: 16),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          GestureDetector(
+            onTap: () {
+              setState(() {
+                _showQueryField = !_showQueryField;
+                if (!_showQueryField) {
+                  _answer = '';
+                  _questionController.clear();
+                }
+              });
+            },
+            child: Container(
+              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+              decoration: BoxDecoration(
+                color: _showQueryField ? AppColors.primary : Colors.grey[200],
+                borderRadius: BorderRadius.circular(20),
+              ),
+              child: Row(
+                mainAxisSize: MainAxisSize.min,
+                children: [
+                  Icon(
+                    _showQueryField ? Icons.close : Icons.help_outline,
+                    color: _showQueryField ? Colors.white : Colors.black87,
+                    size: 16,
+                  ),
+                  const SizedBox(width: 8),
+                  Text(
+                    _showQueryField 
+                      ? LocaleData.hideAssistant.getString(context)
+                      : LocaleData.askAboutChart.getString(context),
+                    style: TextStyle(
+                      color: _showQueryField ? Colors.white : Colors.black87,
+                      fontWeight: FontWeight.w500,
+                      fontSize: 14,
+                    ),
+                  ),
+                ],
+              ),
+            ),
+          ),
+          
+          if (_showQueryField) ...[
+            const SizedBox(height: 16),
+            TextField(
+              controller: _questionController,
+              decoration: InputDecoration(
+                hintText: LocaleData.askAboutChartHint.getString(context),
+                border: OutlineInputBorder(
+                  borderRadius: BorderRadius.circular(12),
+                  borderSide: BorderSide.none, 
+                ),
+                filled: true,
+                fillColor: AppColors.blurGray.withValues(alpha: 0.2), 
+                contentPadding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
+                suffixIcon: IconButton(
+                  icon: const Icon(Icons.send_rounded, color: AppColors.darkBlue),
+                  onPressed: _askQuestion,
+                ),
+              ),
+              textInputAction: TextInputAction.send,
+              onSubmitted: (_) => _askQuestion(),
+            ),
+            
+            if (_isLoading || _answer.isNotEmpty)
+              Container(
+                width: double.infinity,
+                margin: const EdgeInsets.only(top: 16),
+                padding: const EdgeInsets.all(16),
+                decoration: BoxDecoration(
+                  color: Colors.white,
+                  border: Border.all(color: Colors.grey[200]!),
+                  borderRadius: BorderRadius.circular(16),
+                ),
+                child: _isLoading
+                    ? const Center(
+                        child: SizedBox(
+                          height: 20,
+                          width: 20,
+                          child: CircularProgressIndicator(strokeWidth: 2),
+                        ),
+                      )
+                    : Column(
+                        crossAxisAlignment: CrossAxisAlignment.start,
+                        children: [
+                          Row(
+                            children: [
+                              Icon(Icons.lightbulb_outline, 
+                                color: AppColors.primary, 
+                                size: 16),
+                              const SizedBox(width: 8),
+                              Text(
+                                LocaleData.assistant.getString(context),
+                                style: TextStyle(
+                                  fontWeight: FontWeight.bold,
+                                  color: AppColors.primary,
+                                ),
+                              ),
+                            ],
+                          ),
+                          const SizedBox(height: 8),
+                          Text(_answer),
+                        ],
+                      ),
+              ),
+          ],
+        ],
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/3-dashboard/utils/dashboard_help.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/3-dashboard/utils/dashboard_help.dart b/lib/pages/3-dashboard/utils/dashboard_help.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/3-dashboard/utils/dashboard_help.dart	
@@ -0,0 +1,62 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/widgets/common/help_pages.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/shared/path/app_images.dart';
+
+class DashboardHelp {
+  static void show(BuildContext context) {
+    final pages = [
+      AppHelpPage(
+        title: LocaleData.dashboardHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.dashboardOverview,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.dashboardHelpSubtitle.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.dashboardHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.dashboardBalance,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.dashboardHelpBalance.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.dashboardHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.dashboardAddTransaction,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.dashboardHelpAddTransaction.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.dashboardHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.dashboardDeleteTransaction,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.dashboardHelpDeleteTransaction.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.dashboardHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.dashboardSpendingPatterns,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.dashboardHelpSpendingPatterns.getString(context),
+      ),
+      AppHelpPage(
+        title: LocaleData.dashboardHelpTitle.getString(context),
+        image: Image.asset(
+          AppImages.dashboardRefresh,
+          fit: BoxFit.contain,
+        ),
+        description: LocaleData.dashboardHelpRefresh.getString(context),
+      ),
+    ];
+    
+    AppHelp.show(context, pages);
+  }
+}
\ No newline at end of file
Index: lib/pages/3-dashboard/widgets/goal_card.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/3-dashboard/widgets/goal_card.dart b/lib/pages/3-dashboard/widgets/goal_card.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/3-dashboard/widgets/goal_card.dart	
@@ -0,0 +1,235 @@
+import 'package:flutter/material.dart';
+import 'package:finney/core/storage/cloud/models/saving_goal_model.dart';
+import 'package:intl/intl.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class GoalCard extends StatelessWidget {
+  final SavingGoal goal;
+  final VoidCallback onTap;
+  final Function(double) onAddSavings;
+  final VoidCallback onDelete;
+
+  const GoalCard({
+    super.key,
+    required this.goal,
+    required this.onTap,
+    required this.onAddSavings,
+    required this.onDelete,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final daysRemaining = goal.daysRemaining;
+    final isOverdue = daysRemaining < 0;
+
+    return Card(
+      margin: const EdgeInsets.only(bottom: 16),
+      child: InkWell(
+        onTap: onTap,
+        child: Padding(
+          padding: const EdgeInsets.all(16.0),
+          child: Column(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: [
+              Row(
+                mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                children: [
+                  Expanded(
+                    child: Text(
+                      goal.title,
+                      style: const TextStyle(
+                        fontSize: 18,
+                        fontWeight: FontWeight.bold,
+                      ),
+                      overflow: TextOverflow.ellipsis,
+                    ),
+                  ),
+                  Row(
+                    children: [
+                      if (goal.isCompleted)
+                        const Icon(
+                          Icons.check_circle,
+                          color: Colors.green,
+                          size: 20,
+                        ),
+                      IconButton(
+                        icon: const Icon(Icons.delete, size: 20),
+                        color: Colors.red,
+                        onPressed: () => _showDeleteConfirmation(context),
+                        padding: EdgeInsets.zero,
+                        constraints: const BoxConstraints(),
+                      ),
+                    ],
+                  ),
+                ],
+              ),
+              const SizedBox(height: 8),
+              LinearProgressIndicator(
+                value: goal.progressPercentage / 100,
+                minHeight: 10,
+                backgroundColor: Colors.grey[200],
+                valueColor: AlwaysStoppedAnimation<Color>(
+                  goal.isCompleted ? Colors.green : Colors.blue,
+                ),
+              ),
+              const SizedBox(height: 8),
+              Row(
+                mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                children: [
+                  Text(
+                    LocaleData.savedAmount.getString(context).replaceFirst(
+                      '%s',
+                      '৳${goal.savedAmount.toStringAsFixed(2)}',
+                    ),
+                    style: const TextStyle(fontWeight: FontWeight.bold),
+                  ),
+                  Text(
+                    LocaleData.targetAmount.getString(context).replaceFirst(
+                      '%s',
+                      '৳${goal.targetAmount.toStringAsFixed(2)}',
+                    ),
+                    style: const TextStyle(fontWeight: FontWeight.bold),
+                  ),
+                ],
+              ),
+              Text(
+                LocaleData.percentCompleted.getString(context).replaceFirst(
+                  '%s',
+                  goal.progressPercentage.toStringAsFixed(1),
+                ),
+                style: TextStyle(
+                  color: goal.isCompleted ? Colors.green : Colors.blue,
+                  fontWeight: FontWeight.bold,
+                ),
+              ),
+              const SizedBox(height: 8),
+              Text(
+                '${LocaleData.targetDate.getString(context).replaceFirst(
+                  '%s',
+                  DateFormat('dd/MM/yyyy').format(goal.targetDate),
+                )} '
+                '(${isOverdue
+                    ? LocaleData.daysOverdue.getString(context).replaceFirst('%d', daysRemaining.abs().toString())
+                    : LocaleData.daysLeft.getString(context).replaceFirst('%d', daysRemaining.toString())})',
+                style: TextStyle(color: isOverdue ? Colors.red : null),
+              ),
+              if (goal.description?.isNotEmpty ?? false) ...[
+                const SizedBox(height: 8),
+                Text(
+                  goal.description!,
+                  style: const TextStyle(color: Colors.grey),
+                ),
+              ],
+              const SizedBox(height: 8),
+              Row(
+                children: [
+                  Expanded(
+                    child: ElevatedButton(
+                      onPressed: () => _showAddSavingsDialog(context),
+                      style: ElevatedButton.styleFrom(
+                        backgroundColor: Colors.blue,
+                        foregroundColor: Colors.white,
+                      ),
+                      child: Text(LocaleData.addSavings.getString(context)),
+                    ),
+                  ),
+                ],
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+
+  void _showAddSavingsDialog(BuildContext context) {
+    final amountController = TextEditingController();
+    final formKey = GlobalKey<FormState>();
+
+    showDialog(
+      context: context,
+      builder:
+          (context) => AlertDialog(
+            title: Text(LocaleData.addToSavings.getString(context)),
+            content: Form(
+              key: formKey,
+              child: TextFormField(
+                controller: amountController,
+                keyboardType: TextInputType.number,
+                decoration: InputDecoration(
+                  labelText: LocaleData.amount.getString(context),
+                  prefixText: '৳',
+                  border: OutlineInputBorder(),
+                ),
+                validator: (value) {
+                  if (value == null || value.isEmpty) {
+                    return LocaleData.pleaseEnterAmount.getString(context);
+                  }
+                  final amount = double.tryParse(value);
+                  if (amount == null) {
+                    return LocaleData.pleaseEnterValidNumber.getString(context);
+                  }
+                  if (amount <= 0) {
+                    return LocaleData.amountMustBePositive.getString(context);
+                  }
+                  // Check if amount exceeds remaining target
+                  final remainingAmount = goal.targetAmount - goal.savedAmount;
+                  if (amount > remainingAmount) {
+                    return LocaleData.amountExceedsTarget.getString(context)
+                        .replaceFirst('%s', '৳${remainingAmount.toStringAsFixed(2)}');
+                  }
+                  return null;
+                },
+              ),
+            ),
+            actions: [
+              TextButton(
+                onPressed: () => Navigator.pop(context),
+                child: Text(LocaleData.cancel.getString(context)),
+              ),
+              ElevatedButton(
+                onPressed: () {
+                  if (formKey.currentState!.validate()) {
+                    final amount = double.parse(amountController.text);
+                    Navigator.pop(context);
+                    onAddSavings(amount);
+                  }
+                },
+                child: Text(LocaleData.add.getString(context)),
+              ),
+            ],
+          ),
+    );
+  }
+
+  void _showDeleteConfirmation(BuildContext context) {
+    showDialog(
+      context: context,
+      builder:
+          (context) => AlertDialog(
+            title: Text(LocaleData.deleteGoal.getString(context)),
+            content: Text(
+              LocaleData.confirmDeleteGoal.getString(context).replaceFirst('%s', goal.title),
+            ),
+            actions: [
+              TextButton(
+                onPressed: () => Navigator.pop(context),
+                child: Text(LocaleData.cancel.getString(context)),
+              ),
+              ElevatedButton(
+                style: ElevatedButton.styleFrom(
+                  backgroundColor: Colors.red,
+                  foregroundColor: Colors.white,
+                ),
+                onPressed: () {
+                  Navigator.pop(context);
+                  onDelete();
+                },
+                child: Text(LocaleData.delete.getString(context)),
+              ),
+            ],
+          ),
+    );
+  }
+}
Index: lib/pages/3-dashboard/widgets/balance_card.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/3-dashboard/widgets/balance_card.dart b/lib/pages/3-dashboard/widgets/balance_card.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/3-dashboard/widgets/balance_card.dart	
@@ -0,0 +1,129 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/pages/7-insights/components/time_selector.dart';
+
+class BalanceCard extends StatelessWidget {
+  final double balance;
+  final double income;
+  final double expenses;
+  final TimeRangeData timeRange;
+
+  const BalanceCard({
+    super.key,
+    required this.balance,
+    required this.income,
+    required this.expenses,
+    required this.timeRange,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      padding: const EdgeInsets.all(20),
+      decoration: BoxDecoration(
+        gradient: AppColors.ombreBlue,
+        borderRadius: BorderRadius.circular(20),
+        boxShadow: [
+          BoxShadow(
+            color: Colors.black.withValues(alpha: 0.1),
+            blurRadius: 10,
+            offset: const Offset(0, 5),
+          ),
+        ],
+      ),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Text(
+            '${LocaleData.balance.getString(context)} (${timeRange.getLocalizedLabel(context)})',
+            style: const TextStyle(
+              color: Colors.white,
+              fontSize: 17,
+              fontWeight: FontWeight.w500,
+            ),
+          ),
+          const SizedBox(height: 8),
+          Text(
+            '৳ ${balance.toStringAsFixed(2)}',
+            style: const TextStyle(
+              color: Colors.white,
+              fontSize: 32,
+              fontWeight: FontWeight.bold,
+            ),
+          ),
+          const SizedBox(height: 20),
+          Row(
+            children: [
+              _buildIncomeExpenseIndicator(
+                Icons.add_circle_outline,
+                LocaleData.income.getString(context),
+                '৳ ${income.toStringAsFixed(2)}',
+                Colors.greenAccent,
+              ),
+              const SizedBox(width: 40),
+              _buildIncomeExpenseIndicator(
+                Icons.remove_circle_outline,
+                LocaleData.expenses.getString(context),
+                '৳ ${expenses.toStringAsFixed(2)}',
+                Colors.redAccent,
+              ),
+            ],
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildIncomeExpenseIndicator(
+      IconData icon,
+      String label,
+      String amount,
+      Color iconColor,
+      ) {
+    return Row(
+      children: [
+        Container(
+          padding: const EdgeInsets.all(10),
+          decoration: BoxDecoration(
+            color: iconColor.withValues(alpha: 0.7),
+            borderRadius: BorderRadius.circular(10),
+          ),
+          child: Icon(
+            icon,
+            color: Colors.white,
+            size: 30,
+          ),
+        ),
+
+        const SizedBox(width: 10),
+
+        Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            Text(
+              label,
+              style: TextStyle(
+                color: Colors.white.withValues(alpha: 0.8),
+                fontSize: 14,
+                fontWeight: FontWeight.w500,
+              ),
+            ),
+
+            const SizedBox(height: 4),
+
+            Text(
+              amount,
+              style: const TextStyle(
+                color: Colors.white,
+                fontSize: 16,
+                fontWeight: FontWeight.bold,
+              ),
+            ),
+          ],
+        ),
+      ],
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/3-dashboard/widgets/reminder_card.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/3-dashboard/widgets/reminder_card.dart b/lib/pages/3-dashboard/widgets/reminder_card.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/3-dashboard/widgets/reminder_card.dart	
@@ -0,0 +1,44 @@
+import 'package:flutter/material.dart';
+import 'package:finney/pages/3-dashboard/budget_reminder_page.dart';
+
+class ReminderCard extends StatelessWidget {
+  const ReminderCard({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return GestureDetector(
+      onTap: () {
+        Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => const BudgetReminderPage()),
+        );
+      },
+      child: Container(
+        width: 100,
+        padding: const EdgeInsets.all(12),
+        decoration: BoxDecoration(
+          color: Colors.white,
+          borderRadius: BorderRadius.circular(16),
+          boxShadow: [
+            BoxShadow(
+              color: Colors.grey.withValues(alpha: 0.2),
+              blurRadius: 6,
+              offset: const Offset(0, 3),
+            ),
+          ],
+        ),
+        child: Column(
+          children: const [
+            Icon(Icons.notifications_active, size: 32, color: Colors.deepPurple),
+            SizedBox(height: 10),
+            Text(
+              'Reminder',
+              textAlign: TextAlign.center,
+              style: TextStyle(fontSize: 13, fontWeight: FontWeight.w600),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
Index: lib/pages/3-dashboard/widgets/navigation_tiles.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/3-dashboard/widgets/navigation_tiles.dart b/lib/pages/3-dashboard/widgets/navigation_tiles.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/3-dashboard/widgets/navigation_tiles.dart	
@@ -0,0 +1,260 @@
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/pages/2-chatbot/chatbot.dart';
+import 'package:finney/pages/3-dashboard/budget_reminder_page.dart';
+import 'package:finney/pages/4-saving/add_saving/saving_goal_page.dart';
+import 'package:finney/pages/7-insights/insights.dart';
+import 'package:finney/pages/5-learn/learn.dart';
+import 'package:finney/pages/8-report/report.dart';
+import 'package:finney/pages/9-setting/setting.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class NavigationTiles extends StatelessWidget {
+  const NavigationTiles({super.key});
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      crossAxisAlignment: CrossAxisAlignment.start,
+      children: [
+        // Simple "Features" heading
+        Padding(
+          padding: const EdgeInsets.only(left: 16, bottom: 16),
+          child: Text(
+            'feature'.getString(context),
+            style: TextStyle(
+              fontSize: 20,
+              fontWeight: FontWeight.bold,
+              color: AppColors.darkBlue,
+            ),
+          ),
+        ),
+
+        // 3x3 grid of feature tiles
+        _buildFeatureGrid(context),
+
+        const SizedBox(height: 24),
+
+        // Academy banner
+        Padding(
+          padding: const EdgeInsets.symmetric(horizontal: 16),
+          child: _buildAcademyBanner(context),
+        ),
+      ],
+    );
+  }
+
+  Widget _buildFeatureGrid(BuildContext context) {
+    // Define our navigation items
+    final features = [
+      _FeatureItem(
+        title: 'Insights',
+        icon: Icons.bar_chart,
+        onTap: () => Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => const Insights()),
+        ),
+      ),
+      _FeatureItem(
+        title: 'AI Assistant',
+        icon: Icons.support_agent_rounded,
+        onTap: () => Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => const Chatbot()),
+        ),
+      ),
+      _FeatureItem(
+        title: 'Prediction',
+        icon: Icons.insights_rounded,
+        onTap: () => Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => const Report()),
+        ),
+      ),
+      _FeatureItem(
+        title: 'Goals',
+        icon: Icons.flag,
+        onTap: () => Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => const SavingGoalPage()),
+        ),
+      ),
+      _FeatureItem(
+        title: 'Reminder',
+        icon: Icons.alarm,
+        onTap: () => Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => const BudgetReminderPage()),
+        ),
+      ),
+      _FeatureItem(
+        title: 'Settings',
+        icon: Icons.settings,
+        onTap: () => Navigator.push(
+          context,
+          MaterialPageRoute(builder: (_) => const Setting()),
+        ),
+      ),
+    ];
+
+    // Build a grid with 3 items per row
+    return GridView.count(
+      crossAxisCount: 3,
+      shrinkWrap: true,
+      physics: const NeverScrollableScrollPhysics(),
+      padding: const EdgeInsets.symmetric(horizontal: 16),
+      mainAxisSpacing: 16,
+      crossAxisSpacing: 12,
+      childAspectRatio: 0.9, // Adjust for better tile proportions
+      children: features.map((feature) => _buildNavigationTile(
+        context,
+        feature.title,
+        feature.icon,
+        feature.onTap,
+      )).toList(),
+    );
+  }
+
+  Widget _buildAcademyBanner(BuildContext context) {
+    return InkWell(
+      onTap: () => Navigator.push(
+        context,
+        MaterialPageRoute(builder: (_) => const Learn()),
+      ),
+      child: Container(
+        width: double.infinity,
+        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 20),
+        decoration: BoxDecoration(
+          gradient: LinearGradient(
+            begin: Alignment.topLeft,
+            end: Alignment.bottomRight,
+            colors: [
+              AppColors.primary.withValues(alpha: 0.9),
+              AppColors.darkBlue,
+            ],
+          ),
+          borderRadius: BorderRadius.circular(16),
+          boxShadow: [
+            BoxShadow(
+              color: AppColors.primary.withValues(alpha: 0.3),
+              blurRadius: 10,
+              offset: const Offset(0, 4),
+            ),
+          ],
+        ),
+        child: Row(
+          children: [
+            Expanded(
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: [
+                  Text(
+                    'financeAcademy'.getString(context),
+                    style: const TextStyle(
+                      color: Colors.white,
+                      fontWeight: FontWeight.bold,
+                      fontSize: 18,
+                    ),
+                  ),
+                  const SizedBox(height: 4),
+                  Text(
+                    'learnFinanceDescription'.getString(context),
+                    style: const TextStyle(
+                      color: Colors.white,
+                      fontSize: 13,
+                    ),
+                  ),
+                ],
+              ),
+            ),
+            const SizedBox(width: 8),
+            Container(
+              padding: const EdgeInsets.all(8),
+              decoration: BoxDecoration(
+                color: Colors.white,
+                borderRadius: BorderRadius.circular(12),
+              ),
+              child: Icon(
+                Icons.school,
+                color: AppColors.primary,
+                size: 24,
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  String _getLocalizedTitle(BuildContext context, String title) {
+    switch (title) {
+      case 'Insights':
+        return LocaleData.insights.getString(context);
+      case 'AI Assistant':
+        return LocaleData.aiAssistant.getString(context);
+      case 'Prediction':
+        return 'prediction'.getString(context);
+      case 'Goals':
+        return LocaleData.goals.getString(context);
+      case 'Reminder':
+        return 'reminder'.getString(context);
+      case 'Settings':
+        return LocaleData.settings.getString(context);
+      default:
+        return title;
+    }
+  }
+
+  Widget _buildNavigationTile(
+    BuildContext context,
+    String title,
+    IconData icon,
+    VoidCallback onTap,
+  ) {
+    return InkWell(
+      onTap: onTap,
+      borderRadius: BorderRadius.circular(16),
+      child: Column(
+        mainAxisSize: MainAxisSize.min,
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          Container(
+            width: 56,
+            height: 56,
+            decoration: BoxDecoration(
+              color: AppColors.primary.withValues(alpha: 0.1),
+              borderRadius: BorderRadius.circular(14),
+            ),
+            child: Icon(icon, color: AppColors.primary, size: 26),
+          ),
+          const SizedBox(height: 8),
+          Text(
+            _getLocalizedTitle(context, title),
+            style: TextStyle(
+              fontSize: 11,
+              color: AppColors.darkBlue,
+              fontWeight: FontWeight.w500,
+            ),
+            textAlign: TextAlign.center,
+            maxLines: 2,
+            overflow: TextOverflow.ellipsis,
+          ),
+        ],
+      ),
+    );
+  }
+}
+
+// Helper class to organize feature data
+class _FeatureItem {
+  final String title;
+  final IconData icon;
+  final VoidCallback onTap;
+
+  _FeatureItem({
+    required this.title,
+    required this.icon,
+    required this.onTap,
+  });
+}
\ No newline at end of file
Index: lib/pages/3-dashboard/widgets/delete_transaction_dialog.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/3-dashboard/widgets/delete_transaction_dialog.dart b/lib/pages/3-dashboard/widgets/delete_transaction_dialog.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/3-dashboard/widgets/delete_transaction_dialog.dart	
@@ -0,0 +1,123 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class DeleteTransactionDialog extends StatelessWidget {
+  final String title;
+  final String message;
+  
+  DeleteTransactionDialog({
+  super.key,
+  String? title,
+  String? message,
+  required BuildContext context,
+  }) : title = title ?? LocaleData.deleteTransaction.getString(context),
+      message = message ?? LocaleData.confirmDeleteSingleTransaction.getString(context);
+
+  static Future<bool> show(
+    BuildContext context, {
+    String? title,
+    String? message,
+  }) async {
+    return await showDialog<bool>(
+      context: context,
+      builder: (context) => DeleteTransactionDialog(
+        context: context,
+        title: title,
+        message: message,
+      ),
+    ) ?? false;
+  }
+  
+  @override
+  Widget build(BuildContext context) {
+    return AlertDialog(
+      backgroundColor: Colors.white,
+      shape: RoundedRectangleBorder(
+        borderRadius: BorderRadius.circular(16),
+      ),
+      title: Row(
+        children: [
+          Container(
+            padding: const EdgeInsets.all(8),
+            decoration: BoxDecoration(
+              color: Colors.red.withValues(alpha: 0.1),
+              borderRadius: BorderRadius.circular(8),
+            ),
+            child: const Icon(
+              Icons.delete_outline,
+              color: Colors.redAccent,
+              size: 24,
+            ),
+          ),
+          const SizedBox(width: 12),
+          Expanded(
+            child: Text(
+              title,
+              style: const TextStyle(
+                fontSize: 18,
+                fontWeight: FontWeight.bold,
+              ),
+            ),
+          ),
+        ],
+      ),
+      content: Text(
+        message,
+        style: const TextStyle(
+          color: AppColors.blurGray,
+          fontSize: 14,
+        ),
+      ),
+      actionsPadding: const EdgeInsets.fromLTRB(24, 0, 24, 24),
+      actions: [
+        Row(
+          children: [
+            Expanded(
+              child: TextButton(
+                onPressed: () => Navigator.pop(context, false),
+                style: TextButton.styleFrom(
+                  padding: const EdgeInsets.symmetric(vertical: 12),
+                  shape: RoundedRectangleBorder(
+                    borderRadius: BorderRadius.circular(8),
+                    side: BorderSide(
+                      color: AppColors.primary.withValues(alpha: 0.5),
+                    ),
+                  ),
+                ),
+                child: Text(
+                  LocaleData.cancel.getString(context),
+                  style: TextStyle(
+                    color: AppColors.primary,
+                    fontWeight: FontWeight.w600,
+                  ),
+                ),
+              ),
+            ),
+            const SizedBox(width: 12),
+            Expanded(
+              child: ElevatedButton(
+                onPressed: () => Navigator.pop(context, true),
+                style: ElevatedButton.styleFrom(
+                  backgroundColor: Colors.redAccent,
+                  padding: const EdgeInsets.symmetric(vertical: 12),
+                  shape: RoundedRectangleBorder(
+                    borderRadius: BorderRadius.circular(8),
+                  ),
+                ),
+                child: Text(
+                  LocaleData.delete.getString(context),
+                  style: TextStyle(
+                    color: Colors.white,
+                    fontWeight: FontWeight.w600,
+                  ),
+                ),
+              ),
+            ),
+          ],
+        ),
+      ],
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/3-dashboard/dashboard.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/3-dashboard/dashboard.dart b/lib/pages/3-dashboard/dashboard.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/3-dashboard/dashboard.dart	
@@ -0,0 +1,305 @@
+import 'package:finney/shared/widgets/common/chatbot_bar.dart';
+import 'package:finney/pages/7-insights/components/charts/chart_service.dart' as chart_service;
+import 'package:finney/pages/7-insights/components/time_selector.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/pages/2-chatbot/chatbot.dart';
+import 'package:finney/pages/2-chatbot/utils/robot_animation.dart';
+import 'package:finney/pages/3-dashboard/widgets/navigation_tiles.dart';
+import 'package:finney/pages/6-transaction/add_transaction/expense_or_income.dart';
+import 'package:finney/pages/3-dashboard/utils/dashboard_help.dart';
+import 'package:finney/pages/6-transaction/view_transaction/recent_transactions.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/pages/3-dashboard/widgets/balance_card.dart';
+import 'package:finney/core/storage/storage_manager.dart'; // Added for singleton access
+import 'package:finney/core/storage/cloud/models/transaction_model.dart' hide CategoryExpense;
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/widgets/common/snack_bar.dart'; // Added for snackbars
+
+class Dashboard extends StatefulWidget {
+  const Dashboard({super.key});
+
+  @override
+  DashboardState createState() => DashboardState();
+}
+
+class DashboardState extends State<Dashboard> {
+  late final TransactionCloudService _transactionService; 
+  final chart_service.ChartService _chartService = chart_service.ChartService();
+
+  static TimeRangeData currentTimeRange = TimeRangeData.month();
+
+  double _currentBalance = 0.0;
+  double _monthlyIncome = 0.0;
+  double _monthlyExpenseTotal = 0.0;
+
+  List<TransactionModel> _transactions = [];
+
+  bool _isLoading = true;
+  bool _isRefreshing = false;
+
+  @override
+  void initState() {
+    super.initState();
+    // Get the transaction service from StorageManager
+    _transactionService = StorageManager().transactionService;
+    _loadDashboardData();
+  }
+
+  void _onTimeRangeChanged(TimeRangeData newTimeRange) {
+    setState(() {
+      currentTimeRange = newTimeRange;
+      _updateChartsForTimeRange();
+    });
+  }
+
+  void _updateChartsForTimeRange() {
+    if (_transactions.isEmpty) return;
+
+    _updateBalanceData();
+  }
+
+  void _updateBalanceData() {
+    final filteredTransactions = _chartService.filterTransactionsByTimeRange(
+      _transactions,
+      currentTimeRange,
+    );
+
+    double income = 0.0;
+    double expenses = 0.0;
+
+    for (var transaction in filteredTransactions) {
+      if (transaction.amount > 0) {
+        income += transaction.amount;
+      } else {
+        expenses += transaction.amount.abs();
+      }
+    }
+
+    setState(() {
+      _monthlyIncome = income;
+      _monthlyExpenseTotal = expenses;
+      _currentBalance = income - expenses;
+    });
+  }
+
+  Future<void> _loadDashboardData() async {
+    if (_isRefreshing) return;
+
+    try {
+      setState(() {
+        _isLoading = _transactions.isEmpty;
+        _isRefreshing = true;
+      });
+
+      _transactionService.getTransactions().listen((transactions) {
+        if (mounted) {
+          setState(() {
+            _transactions = transactions;
+            _updateChartsForTimeRange();
+            _isLoading = false;
+            _isRefreshing = false;
+          });
+        }
+      },
+      onError: (error) {
+        if (mounted) {
+          setState(() {
+            _isLoading = false;
+            _isRefreshing = false;
+          });
+          // Use AppSnackBar for error messages
+          AppSnackBar.showError(
+            context,
+            message: LocaleData.failedToLoadDashboardData.getString(context),
+          );
+        }
+      });
+    } catch (e) {
+      debugPrint('Error loading dashboard data: $e');
+      if (mounted) {
+        setState(() {
+          _isLoading = false;
+          _isRefreshing = false;
+        });
+
+        // Use AppSnackBar for error messages
+        AppSnackBar.showError(
+          context,
+          message: LocaleData.failedToLoadDashboardData.getString(context),
+        );
+      }
+    }
+  }
+
+  void _handleTransactionAdded(TransactionModel transaction) {
+    setState(() {
+      _transactions.add(transaction);
+      _updateChartsForTimeRange();
+    });
+
+    // Use the core transaction service to add the transaction
+    // No need to check if id is null as the service will generate one
+    _transactionService.addTransaction(transaction).then((_) {
+      if (mounted) {
+        AppSnackBar.showSuccess(
+          context,
+          message: LocaleData.transactionSaved.getString(context),
+        );
+      }
+    }).catchError((error) {
+      debugPrint('Error adding transaction: $error');
+      if (mounted) {
+        AppSnackBar.showError(
+          context,
+          message: LocaleData.failedToSaveTransaction.getString(context),
+        );
+      }
+    });
+  }
+
+  void _handleDeleteTransaction(TransactionModel transaction) {
+    // Remove from local state first for immediate UI update
+    setState(() {
+      _transactions.remove(transaction);
+      _updateChartsForTimeRange();
+    });
+
+    // Then delete from storage
+    if (transaction.id != null) {
+      _transactionService.deleteTransaction(transaction.id!).then((_) {
+        if (mounted) {
+          AppSnackBar.showSuccess(
+            context,
+            message: 'transactionDeleted'.getString(context),
+          );
+        }
+      }).catchError((error) {
+        debugPrint('Error deleting transaction: $error');
+        if (mounted) {
+          // Add back to local state if deletion fails
+          setState(() {
+            _transactions.add(transaction);
+            _updateChartsForTimeRange();
+          });
+          
+          AppSnackBar.showError(
+            context,
+            message: 'failedToDeleteTransaction'.getString(context),
+          );
+        }
+      });
+    }
+  }
+
+  void _navigateToChatbot(String question) {
+    Navigator.push(
+      context,
+      MaterialPageRoute(
+        builder: (context) => Chatbot(initialQuestion: question),
+      ),
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: AppColors.lightBackground,
+      appBar: AppBar(
+        backgroundColor: AppColors.lightBackground,
+        title: Text(
+          LocaleData.chatbotTitle.getString(context), 
+          style: const TextStyle( // Added const
+            color: AppColors.primary,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        automaticallyImplyLeading: true,
+        actions: [
+          IconButton(
+            icon: const Icon(Icons.help_outline),
+            onPressed: () => DashboardHelp.show(context),
+          ),
+        ],
+      ),
+      body: _isLoading
+        ? const Center(child: CircularProgressIndicator())
+        : Stack(
+            children: [
+              Column(
+                children: [
+                  Expanded(
+                    child: RefreshIndicator(
+                      onRefresh: _loadDashboardData,
+                      child: SingleChildScrollView(
+                        physics: const AlwaysScrollableScrollPhysics(),
+                        padding: const EdgeInsets.all(16.0),
+                        child: Column(
+                          crossAxisAlignment: CrossAxisAlignment.start,
+                          children: [
+                            BalanceCard(
+                              balance: _currentBalance,
+                              income: _monthlyIncome,
+                              expenses: _monthlyExpenseTotal,
+                              timeRange: currentTimeRange,
+                            ),
+                            TimeRangeSelector(
+                              initialTimeRange: currentTimeRange,
+                              onTimeRangeChanged: _onTimeRangeChanged,
+                            ),
+                            const RobotAnimationHeader(), // Added const
+                            const NavigationTiles(),
+                            _buildRecentTransactions(),
+                            // Add extra padding at the bottom to ensure content isn't hidden behind the chatbot bar
+                            const SizedBox(height: 100),
+                          ],
+                        ),
+                      ),
+                    ),
+                  ),
+                  // Chatbot bar at the bottom
+                  AppNavbar(onSearchSubmitted: _navigateToChatbot),
+                ],
+              ),
+
+              Positioned(
+                right: 16,
+                bottom: 90, // Position above the chatbot bar
+                child: FloatingActionButton(
+                  backgroundColor: AppColors.darkBlue,
+                  onPressed: () => _showAddTransactionModal(context),
+                  child: const Icon(Icons.add, color: Colors.white),
+                ),
+              ),
+            ],
+          ),
+    );
+  }
+
+  Widget _buildRecentTransactions() {
+    final filteredTransactions = _chartService.filterTransactionsByTimeRange(
+      _transactions,
+      currentTimeRange,
+    );
+
+    return RecentTransactions(
+      transactions: filteredTransactions,
+      onDeleteTransaction: _handleDeleteTransaction,
+      timeRange: currentTimeRange,
+      onTimeRangeChanged: _onTimeRangeChanged,
+    );
+  }
+
+  void _showAddTransactionModal(BuildContext context) {
+    showModalBottomSheet(
+      context: context,
+      shape: const RoundedRectangleBorder(
+        borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
+      ),
+      builder: (context) => AddTransactionModal(
+        onTransactionAdded: _handleTransactionAdded,
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/0-onboarding/onboarding.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/0-onboarding/onboarding.dart b/lib/pages/0-onboarding/onboarding.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/0-onboarding/onboarding.dart	
@@ -0,0 +1,312 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+import 'package:lottie/lottie.dart';
+
+class Onboarding extends StatefulWidget {
+  final VoidCallback onComplete;
+  
+  const Onboarding({
+    super.key,
+    required this.onComplete,
+  });
+
+  @override
+  State<Onboarding> createState() => _OnboardingState();
+}
+
+class _OnboardingState extends State<Onboarding> {
+  final PageController _pageController = PageController();
+  int _currentPage = 0;
+  
+  final List<OnboardingPage> _pages = [
+    OnboardingPage(
+      title: 'Welcome to Finney!',
+      description: 'Your personal financial assistant that helps you manage your money smartly.',
+      lottieAsset: 'lib/images/welcome_animation.json',
+      icon: Icons.account_balance_wallet,
+      color: AppColors.primary,
+    ),
+    OnboardingPage(
+      title: 'Track Your Expenses',
+      description: 'Easily record and categorize your expenses to see where your money goes.',
+      lottieAsset: 'lib/images/expense_tracking.json',
+      icon: Icons.insert_chart,
+      color: Colors.blue,
+    ),
+    OnboardingPage(
+      title: 'Set Your Budget',
+      description: 'Create budgets for different categories to keep your spending in check.',
+      lottieAsset: 'lib/images/budget_planning.json',
+      icon: Icons.savings,
+      color: Colors.green,
+    ),
+    OnboardingPage(
+      title: 'Learn Financial Skills',
+      description: 'Access educational content to improve your financial knowledge and skills.',
+      lottieAsset: 'lib/images/learning.json',
+      icon: Icons.school,
+      color: Colors.orange,
+    ),
+    OnboardingPage(
+      title: 'Chat with FinBot',
+      description: 'Ask financial questions to our AI assistant and get personalized advice.',
+      lottieAsset: 'lib/images/chat_bot.json',
+      icon: Icons.chat,
+      color: Colors.purple,
+    ),
+  ];
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      body: SafeArea(
+        child: Column(
+          children: [
+            // Skip button
+            Align(
+              alignment: Alignment.topRight,
+              child: TextButton.icon(
+                onPressed: _completeOnboarding,
+                icon: const Icon(Icons.skip_next),
+                label: Text(
+                  'Skip',
+                  style: TextStyle(
+                    color: AppColors.primary,
+                    fontWeight: FontWeight.bold,
+                  ),
+                ),
+              ),
+            ),
+            
+            // Page indicator
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 24),
+              child: Row(
+                children: List.generate(
+                  _pages.length,
+                  (index) => Expanded(
+                    child: Container(
+                      margin: const EdgeInsets.symmetric(horizontal: 2),
+                      height: 4,
+                      decoration: BoxDecoration(
+                        color: _currentPage == index
+                            ? _pages[_currentPage].color
+                            : Colors.grey.shade300,
+                        borderRadius: BorderRadius.circular(10),
+                      ),
+                    ),
+                  ),
+                ),
+              ),
+            ),
+            
+            // Page content
+            Expanded(
+              child: PageView.builder(
+                controller: _pageController,
+                itemCount: _pages.length,
+                onPageChanged: (index) {
+                  setState(() {
+                    _currentPage = index;
+                  });
+                },
+                itemBuilder: (context, index) {
+                  return _buildPageContent(_pages[index]);
+                },
+              ),
+            ),
+            
+            // Navigation buttons
+            Padding(
+              padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 20),
+              child: Row(
+                mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                children: [
+                  // Back button with icon
+                  if (_currentPage > 0)
+                    IconButton(
+                      onPressed: () {
+                        _pageController.previousPage(
+                          duration: const Duration(milliseconds: 300),
+                          curve: Curves.easeInOut,
+                        );
+                      },
+                      icon: const Icon(Icons.arrow_back_ios_rounded),
+                      color: _pages[_currentPage].color,
+                      tooltip: 'Previous',
+                    )
+                  else
+                    const SizedBox(width: 48), // Placeholder for spacing
+                  
+                  // Next/Finish button
+                  ElevatedButton(
+                    style: ElevatedButton.styleFrom(
+                      backgroundColor: _pages[_currentPage].color,
+                      foregroundColor: Colors.white,
+                      padding: const EdgeInsets.symmetric(
+                        horizontal: 24,
+                        vertical: 12,
+                      ),
+                      shape: RoundedRectangleBorder(
+                        borderRadius: BorderRadius.circular(24),
+                      ),
+                    ),
+                    onPressed: () {
+                      if (_currentPage < _pages.length - 1) {
+                        _pageController.nextPage(
+                          duration: const Duration(milliseconds: 300),
+                          curve: Curves.easeInOut,
+                        );
+                      } else {
+                        _completeOnboarding();
+                      }
+                    },
+                    child: Row(
+                      mainAxisSize: MainAxisSize.min,
+                      children: [
+                        // Different icon and text based on page
+                        _currentPage < _pages.length - 1
+                            ? const Icon(Icons.arrow_forward_ios_rounded, size: 16)
+                            : const Icon(Icons.check_circle_outline, size: 16),
+                        const SizedBox(width: 8),
+                        Text(
+                          _currentPage < _pages.length - 1
+                              ? 'Next'
+                              : 'Get Started',
+                          style: const TextStyle(
+                            fontSize: 16,
+                            fontWeight: FontWeight.bold,
+                          ),
+                        ),
+                      ],
+                    ),
+                  ),
+                ],
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+
+  Widget _buildPageContent(OnboardingPage page) {
+    return Padding(
+      padding: const EdgeInsets.all(24),
+      child: Column(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: [
+          // Animation or icon fallback
+          Expanded(
+            flex: 3,
+            child: _buildAnimationOrIcon(page),
+          ),
+          const SizedBox(height: 32),
+          
+          // Title
+          Text(
+            page.title,
+            style: const TextStyle(
+              fontSize: 24,
+              fontWeight: FontWeight.bold,
+            ),
+            textAlign: TextAlign.center,
+          ),
+          const SizedBox(height: 16),
+          
+          // Description
+          Expanded(
+            flex: 1,
+            child: Text(
+              page.description,
+              style: const TextStyle(
+                fontSize: 16,
+                color: Colors.grey,
+              ),
+              textAlign: TextAlign.center,
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+  
+  Widget _buildAnimationOrIcon(OnboardingPage page) {
+    // First try to load Lottie animation if available
+    if (page.lottieAsset.isNotEmpty) {
+      return FutureBuilder<bool>(
+        // Check if asset exists
+        future: _checkLottieAssetExists(page.lottieAsset),
+        builder: (context, snapshot) {
+          if (snapshot.hasData && snapshot.data == true) {
+            // Asset exists, show animation
+            return Lottie.asset(
+              page.lottieAsset,
+              fit: BoxFit.contain,
+            );
+          } else {
+            // Fallback to icon
+            return _buildFallbackIcon(page);
+          }
+        },
+      );
+    } else {
+      // No animation specified, use icon
+      return _buildFallbackIcon(page);
+    }
+  }
+  
+  Widget _buildFallbackIcon(OnboardingPage page) {
+    return Center(
+      child: Container(
+        width: 120,
+        height: 120,
+        decoration: BoxDecoration(
+          shape: BoxShape.circle,
+          color: page.color.withValues(alpha: 0.2),
+        ),
+        child: Icon(
+          page.icon,
+          size: 60,
+          color: page.color,
+        ),
+      ),
+    );
+  }
+  
+  // Helper to check if a Lottie asset exists
+  Future<bool> _checkLottieAssetExists(String assetPath) async {
+    try {
+      // This is a simple check - in production you might want a more robust solution
+      return true;
+    } catch (e) {
+      return false;
+    }
+  }
+
+  Future<void> _completeOnboarding() async {
+    // Mark onboarding as completed
+    final prefs = await SharedPreferences.getInstance();
+    await prefs.setBool('onboarding_completed', true);
+    
+    // Call the callback provided by parent
+    widget.onComplete();
+  }
+}
+
+class OnboardingPage {
+  final String title;
+  final String description;
+  final String lottieAsset;
+  final IconData icon;
+  final Color color;
+
+  OnboardingPage({
+    required this.title,
+    required this.description,
+    required this.lottieAsset,
+    required this.icon,
+    required this.color,
+  });
+}
\ No newline at end of file
Index: lib/pages/6-transaction/widgets/transaction_item.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/widgets/transaction_item.dart b/lib/pages/6-transaction/widgets/transaction_item.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/widgets/transaction_item.dart	
@@ -0,0 +1,158 @@
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/pages/6-transaction/add_transaction/add_expense_screen.dart';
+import 'package:finney/pages/6-transaction/add_transaction/add_income_screen.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/shared/category.dart';
+import 'package:flutter/material.dart';
+
+class TransactionItem extends StatelessWidget {
+  final TransactionModel transaction;
+  final Function(TransactionModel)? onDelete;
+  final Function(TransactionModel)? onUpdate;
+  final bool isDeleteMode;
+  final bool isSelected;
+  final Function(TransactionModel)? onSelected;
+
+  const TransactionItem({
+    super.key,
+    required this.transaction,
+    this.onDelete,
+    this.onUpdate,
+    this.isDeleteMode = false,
+    this.isSelected = false,
+    this.onSelected,
+  });
+
+@override
+Widget build(BuildContext context) {
+  final categoryColor = CategoryUtils.getColorForCategory(transaction.category);
+  final deleteBackground = Colors.redAccent.withValues(alpha: 0.1); 
+
+  return InkWell(
+    onTap: isDeleteMode
+        ? () => onSelected?.call(transaction)
+        : () => _showEditScreen(context),
+    child: Container(
+      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
+      decoration: BoxDecoration(
+        color: isDeleteMode && isSelected ? deleteBackground : null,
+      ),
+      child: Row(
+        children: [
+          if (isDeleteMode)
+            Padding(
+              padding: const EdgeInsets.only(right: 12),
+              child: IconButton(
+                onPressed: () => onSelected?.call(transaction),
+                icon: Icon(
+                  isSelected ? Icons.remove_circle : Icons.radio_button_unchecked,
+                  color: isSelected ? Colors.redAccent : AppColors.gray,
+                ),
+              ),
+            ),
+          Container(
+            padding: const EdgeInsets.all(10),
+            decoration: BoxDecoration(
+              color: categoryColor.withValues(alpha: 0.1),
+              borderRadius: BorderRadius.circular(12),
+            ),
+            child: Icon(
+              transaction.icon,
+              color: categoryColor,
+              size: 24,
+            ),
+          ),
+          const SizedBox(width: 16),
+          Expanded(
+            child: Column(
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Text(
+                  transaction.name,
+                  style: const TextStyle(
+                    fontWeight: FontWeight.bold,
+                    fontSize: 16,
+                  ),
+                ),
+                const SizedBox(height: 4),
+                Text(
+                  CategoryUtils.getLocalizedCategoryName(transaction.category, context),
+                  style: TextStyle(
+                    color: Colors.grey.shade600,
+                    fontSize: 12,
+                  ),
+                ),
+              ],
+            ),
+          ),
+          Column(
+            crossAxisAlignment: CrossAxisAlignment.end,
+            children: [
+              Row(
+                children: [
+                  Text(
+                    transaction.amount > 0
+                        ? '+${transaction.amount.toStringAsFixed(2)}'
+                        : transaction.amount.toStringAsFixed(2),
+                    style: TextStyle(
+                      fontWeight: FontWeight.bold,
+                      fontSize: 16,
+                      color: transaction.amount > 0 ? Colors.green : Colors.redAccent,
+                    ),
+                  ),
+                ],
+              ),
+            ],
+          ),
+        ],
+      ),
+    ),
+  );
+}
+
+  void _showEditScreen(BuildContext context) {
+    final transactionModel = TransactionModel(
+      id: transaction.id,
+      name: transaction.name,
+      category: transaction.category,
+      amount: transaction.amount,
+      date: transaction.date,
+      description: transaction.description,
+    );
+
+    Navigator.push(
+      context,
+      MaterialPageRoute(
+        builder: (context) => transaction.amount > 0
+            ? AddIncomeScreen(
+          existingTransaction: transactionModel,
+          onTransactionAdded: (updatedTransaction) {
+            onUpdate?.call(
+              transaction.copyWith(
+                name: updatedTransaction.name,
+                category: updatedTransaction.category,
+                amount: updatedTransaction.amount,
+                date: updatedTransaction.date,
+                description: updatedTransaction.description,
+              ),
+            );
+          },
+        )
+            : AddExpenseScreen(
+          existingTransaction: transactionModel,
+          onTransactionAdded: (updatedTransaction) {
+            onUpdate?.call(
+              transaction.copyWith(
+                name: updatedTransaction.name,
+                category: updatedTransaction.category,
+                amount: updatedTransaction.amount,
+                date: updatedTransaction.date,
+                description: updatedTransaction.description,
+              ),
+            );
+          },
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/6-transaction/widgets/transaction_list.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/widgets/transaction_list.dart b/lib/pages/6-transaction/widgets/transaction_list.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/widgets/transaction_list.dart	
@@ -0,0 +1,119 @@
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/pages/6-transaction/widgets/transaction_item.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class TransactionList extends StatelessWidget {
+  final List<TransactionModel> transactions;
+  final Function(TransactionModel)? onDeleteTransaction;
+  final bool showAll;
+  final bool isDeleteMode;
+  final Set<TransactionModel> selectedTransactions;
+  final Function(TransactionModel)? onTransactionSelected;
+
+  const TransactionList({
+    super.key,
+    required this.transactions,
+    this.onDeleteTransaction,
+    this.showAll = false,
+    this.isDeleteMode = false,
+    this.selectedTransactions = const {},
+    this.onTransactionSelected,
+  });
+
+  Map<String, List<TransactionModel>> _groupTransactionsByDate() {
+    final groupedTransactions = <String, List<TransactionModel>>{};
+
+    final transactionList = showAll
+        ? transactions
+        : transactions.take(5).toList();
+
+    for (var transaction in transactionList) {
+      final date = DateFormat('yyyy-MM-dd').format(transaction.date);
+      if (!groupedTransactions.containsKey(date)) {
+        groupedTransactions[date] = [];
+      }
+      groupedTransactions[date]!.add(transaction);
+    }
+
+    final sortedDates = groupedTransactions.keys.toList()
+      ..sort((a, b) => b.compareTo(a));
+
+    return Map.fromEntries(
+        sortedDates.map((date) => MapEntry(date, groupedTransactions[date]!))
+    );
+  }
+
+  String _formatDate(String date, BuildContext context) {
+    final today = DateTime.now();
+    final yesterday = today.subtract(const Duration(days: 1));
+
+    final transactionDate = DateTime.parse(date);
+
+    if (DateFormat('yyyy-MM-dd').format(today) == date) {
+      return LocaleData.today.getString(context);
+    } else if (DateFormat('yyyy-MM-dd').format(yesterday) == date) {
+      return LocaleData.yesterday.getString(context);
+    }
+    return DateFormat('EEEE, MMMM d').format(transactionDate);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final groupedTransactions = _groupTransactionsByDate();
+
+    if (transactions.isEmpty) {
+      return Center(
+        child: Padding(
+          padding: EdgeInsets.symmetric(vertical: 20.0),
+          child: Text(
+            LocaleData.noTransactionsYet.getString(context),
+            style: TextStyle(color: Colors.grey),
+          ),
+        ),
+      );
+    }
+
+    return Column(
+      children: groupedTransactions.entries.map((entry) {
+        return Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            Padding(
+              padding: const EdgeInsets.symmetric(vertical: 8.0),
+              child: Text(
+                _formatDate(entry.key, context),
+                style: TextStyle(
+                  fontSize: 14,
+                  fontWeight: FontWeight.w600,
+                  color: AppColors.darkBlue,
+                ),
+              ),
+            ),
+            Container(
+              decoration: BoxDecoration(
+                color: AppColors.softGray,
+                borderRadius: BorderRadius.circular(12),
+              ),
+              child: Column(
+                children: entry.value.map((transaction) {
+                  return TransactionItem(
+                    transaction: transaction,
+                    onDelete: onDeleteTransaction,
+                    isDeleteMode: isDeleteMode,
+                    isSelected: selectedTransactions.contains(transaction),
+                    onSelected: onTransactionSelected,
+                  );
+                }).toList(),
+              ),
+            ),
+            const SizedBox(height: 16),
+          ],
+        );
+      }).toList(),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/6-transaction/add_transaction/base_adding.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/add_transaction/base_adding.dart b/lib/pages/6-transaction/add_transaction/base_adding.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/add_transaction/base_adding.dart	
@@ -0,0 +1,418 @@
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/shared/category.dart';
+import 'package:finney/pages/9-setting/currency_formatter.dart';
+import 'package:flutter/material.dart';
+import 'package:intl/intl.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/core/storage/storage_manager.dart'; // Added for singleton access
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+abstract class BaseTransactionScreen extends StatefulWidget {
+  final Function? onTransactionAdded;
+  final TransactionModel? existingTransaction;
+
+  const BaseTransactionScreen({
+    super.key,
+    this.onTransactionAdded,
+    this.existingTransaction,
+  });
+}
+
+abstract class BaseTransactionScreenState<T extends BaseTransactionScreen>
+    extends State<T> {
+  final _amountController = TextEditingController();
+  final _descriptionController = TextEditingController();
+  String _selectedCategory = '';
+  DateTime _selectedDate = DateTime.now();
+  bool _isSaving = false;
+  late final TransactionCloudService _transactionService; // Changed to late final
+
+  TextEditingController get amountController => _amountController;
+
+  String get screenTitle;
+  Color get amountColor;
+  List<CategoryData> get categories;
+  double getTransactionAmount();
+
+  @override
+  void initState() {
+    super.initState();
+    // Get transaction service from StorageManager
+    _transactionService = StorageManager().transactionService;
+    
+    if (widget.existingTransaction != null) {
+      // if the transaction exists
+      _selectedCategory = widget.existingTransaction!.category;
+      _selectedDate = widget.existingTransaction!.date;
+      _amountController.text = CurrencyFormatter.formatWithoutSymbol(widget.existingTransaction!.amount.abs());
+      _descriptionController.text = widget.existingTransaction!.description ?? '';
+    } else {
+      // if it is a new transaction
+      if (categories.isNotEmpty) {
+        _selectedCategory = categories[0].name;
+      }
+      _amountController.text = '0';
+    }
+  }
+
+  @override
+  void dispose() {
+    _amountController.dispose();
+    _descriptionController.dispose();
+    super.dispose();
+  }
+
+  Future<void> _saveTransaction() async {
+    // Validate amount
+    if (_amountController.text.isEmpty || _amountController.text == '0') {
+      _showErrorSnackBar(LocaleData.pleaseEnterValidAmount.getString(context));
+      return;
+    }
+
+    try {
+      double amount = CurrencyFormatter.parse(_amountController.text);
+      if (amount <= 0) {
+        _showErrorSnackBar(LocaleData.pleaseEnterPositiveAmount.getString(context));
+        return;
+      }
+    } catch (e) {
+      _showErrorSnackBar(LocaleData.pleaseEnterValidNumber.getString(context));
+      return;
+    }
+
+    if (_selectedCategory.isEmpty) {
+      _showErrorSnackBar(LocaleData.pleaseSelectCategory.getString(context));
+      return;
+    }
+
+    setState(() {
+      _isSaving = true;
+    });
+
+    try {
+      double amountValue = getTransactionAmount();
+
+      final transaction = TransactionModel(
+        id: widget.existingTransaction?.id,
+        name: _selectedCategory,
+        category: _selectedCategory,
+        amount: amountValue,
+        date: _selectedDate,
+        description: _descriptionController.text.trim(),
+      );
+
+      // Optimistic UI update - call callback first
+      if (widget.onTransactionAdded != null) {
+        widget.onTransactionAdded!(transaction);
+      }
+
+      // Save to storage (handles both local and cloud)
+      if (widget.existingTransaction != null) {
+        await _transactionService.updateTransaction(transaction);
+      } else {
+        await _transactionService.addTransaction(transaction);
+      }
+
+      // Show success message and pop screen
+      if (mounted) {
+        ScaffoldMessenger.of(context).showSnackBar(
+          SnackBar(
+            content: Text(widget.existingTransaction != null
+                ? LocaleData.transactionUpdated.getString(context)
+                : LocaleData.transactionSaved.getString(context)),
+            backgroundColor: Colors.green,
+          ),
+        );
+        Navigator.pop(context);
+      }
+    } catch (e) {
+      debugPrint('Error processing transaction: $e');
+      if (mounted) {
+        setState(() {
+          _isSaving = false;
+        });
+        _showErrorSnackBar(LocaleData.failedToSaveTransaction.getString(context));
+      }
+    }
+  }
+
+  void _showErrorSnackBar(String message) {
+    ScaffoldMessenger.of(context).showSnackBar(
+      SnackBar(
+        content: Text(message),
+        backgroundColor: Colors.redAccent,
+        duration: const Duration(seconds: 2),
+      ),
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      backgroundColor: Colors.white,
+      appBar: AppBar(
+        backgroundColor: Colors.white,
+        elevation: 0,
+        leading: IconButton(
+          icon: const Icon(Icons.arrow_back, color: Colors.black),
+          onPressed: () => Navigator.of(context).pop(),
+        ),
+        title: Text(
+          screenTitle,
+          style: const TextStyle(
+            color: Colors.black,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        centerTitle: true,
+      ),
+      body: Column(
+        crossAxisAlignment: CrossAxisAlignment.stretch,
+        children: [
+          // Amount section
+          Padding(
+            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),
+            child: TextField(
+              controller: _amountController,
+              keyboardType: const TextInputType.numberWithOptions(decimal: true),
+              style: TextStyle(
+                fontSize: 40,
+                fontWeight: FontWeight.bold,
+                color: amountColor,
+              ),
+              decoration: InputDecoration(
+                border: InputBorder.none,
+                contentPadding: EdgeInsets.zero,
+                hintText: LocaleData.amountHint.getString(context),
+                prefixText: '৳ ',
+                prefixStyle: TextStyle(
+                  color: amountColor,
+                  fontWeight: FontWeight.bold,
+                  fontSize: 40,
+                ),
+                hintStyle: const TextStyle(
+                  color: Color(0xFF9E9E9E),
+                  fontWeight: FontWeight.bold,
+                  fontSize: 40,
+                ),
+              ),
+              onChanged: (value) {
+                // Simple number input without formatting
+                if (value.isEmpty) {
+                  _amountController.text = '';
+                  return;
+                }
+                
+                // Only allow numbers and one decimal point
+                String cleanValue = value.replaceAll(RegExp(r'[^\d.]'), '');
+                if (cleanValue.split('.').length > 2) {
+                  cleanValue = cleanValue.substring(0, cleanValue.lastIndexOf('.'));
+                }
+                
+                if (cleanValue != value) {
+                  _amountController.text = cleanValue;
+                  _amountController.selection = TextSelection.fromPosition(
+                    TextPosition(offset: cleanValue.length),
+                  );
+                }
+              },
+            ),
+          ),
+
+          Expanded(
+            child: SingleChildScrollView(
+              padding: const EdgeInsets.all(20),
+              child: Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: [
+                  // Category section
+                  Text(
+                    LocaleData.category.getString(context),
+                    style: const TextStyle(
+                      fontWeight: FontWeight.bold,
+                      fontSize: 16,
+                    ),
+                  ),
+                  const SizedBox(height: 10),
+
+                  // Categories grid
+                  GridView.builder(
+                    shrinkWrap: true,
+                    physics: const NeverScrollableScrollPhysics(),
+                    gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
+                      crossAxisCount: 3,
+                      childAspectRatio: 1,
+                      crossAxisSpacing: 10,
+                      mainAxisSpacing: 15,
+                    ),
+                    itemCount: categories.length,
+                    itemBuilder: (context, index) {
+                      final category = categories[index];
+                      final isSelected = _selectedCategory == category.name;
+
+                      return _buildCategoryItem(
+                        category.name,
+                        category.icon,
+                        category.color,
+                        isSelected,
+                      );
+                    },
+                  ),
+
+                  const SizedBox(height: 20),
+
+                  // Date selector
+                  Text(
+                    LocaleData.date.getString(context),
+                    style: const TextStyle(
+                      fontWeight: FontWeight.bold,
+                      fontSize: 16,
+                    ),
+                  ),
+                  const SizedBox(height: 10),
+
+                  InkWell(
+                    onTap: () => _selectDate(context),
+                    child: Container(
+                      padding: const EdgeInsets.all(15),
+                      decoration: BoxDecoration(
+                        color: const Color(0xFFF5F5F5),
+                        borderRadius: BorderRadius.circular(8),
+                      ),
+                      child: Row(
+                        mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                        children: [
+                          Text(
+                            DateFormat('EEEE').format(_selectedDate),
+                            style: const TextStyle(
+                              color: Color(0xFF424242),
+                              fontWeight: FontWeight.w500,
+                            ),
+                          ),
+                          Text(
+                            DateFormat('dd/MM/yyyy').format(_selectedDate),
+                            style: const TextStyle(
+                              color: Color(0xFF424242),
+                              fontWeight: FontWeight.w500,
+                            ),
+                          ),
+                        ],
+                      ),
+                    ),
+                  ),
+
+                  const SizedBox(height: 20),
+
+                  // Description field
+                  Text(
+                    LocaleData.description.getString(context),
+                    style: const TextStyle(
+                      fontWeight: FontWeight.bold,
+                      fontSize: 16,
+                    ),
+                  ),
+                  const SizedBox(height: 10),
+
+                  TextField(
+                    controller: _descriptionController,
+                    decoration: InputDecoration(
+                      hintText: LocaleData.descriptionHint.getString(context),
+                      hintStyle: const TextStyle(
+                        color: Color(0xFFBDBDBD),
+                        fontSize: 14,
+                      ),
+                      filled: true,
+                      fillColor: const Color(0xFFF5F5F5),
+                      border: OutlineInputBorder(
+                        borderRadius: BorderRadius.circular(8),
+                        borderSide: BorderSide.none,
+                      ),
+                      contentPadding: const EdgeInsets.all(15),
+                    ),
+                  ),
+                ],
+              ),
+            ),
+          ),
+        ],
+      ),
+      floatingActionButton: _isSaving
+          ? const Padding(
+        padding: EdgeInsets.all(16.0),
+        child: CircularProgressIndicator(),
+      )
+          : Padding(
+        padding: const EdgeInsets.all(16.0),
+        child: FloatingActionButton(
+          onPressed: _saveTransaction,
+          backgroundColor: amountColor,
+          elevation: 4,
+          child: const Icon(Icons.check, color: Colors.white),
+        ),
+      ),
+      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,
+    );
+  }
+
+  Future<void> _selectDate(BuildContext context) async {
+    final DateTime? picked = await showDatePicker(
+      context: context,
+      initialDate: _selectedDate,
+      firstDate: DateTime(2020),
+      lastDate: DateTime.now().add(const Duration(days: 365)),
+    );
+
+    if (picked != null && picked != _selectedDate) {
+      setState(() {
+        _selectedDate = picked;
+      });
+    }
+  }
+
+  Widget _buildCategoryItem(String name, IconData icon, Color color, bool isSelected) {
+    return GestureDetector(
+      onTap: () {
+        setState(() {
+          _selectedCategory = name;
+        });
+      },
+      child: Column(
+        children: [
+          Container(
+            padding: const EdgeInsets.all(15),
+            decoration: BoxDecoration(
+              color: const Color(0xFFF5F5F5),
+              shape: BoxShape.circle,
+              border: isSelected ? Border.all(color: color, width: 2) : null,
+            ),
+            child: Icon(
+              CategoryUtils.getIconForCategory(name),
+              color: CategoryUtils.getColorForCategory(name),
+              size: 30,
+            ),
+          ),
+          const SizedBox(height: 8),
+          Text(
+            CategoryUtils.getLocalizedCategoryName(name, context),
+            style: TextStyle(
+              fontSize: 12,
+              fontWeight: isSelected ? FontWeight.bold : FontWeight.normal,
+            ),
+            textAlign: TextAlign.center,
+          ),
+        ],
+      ),
+    );
+  }
+}
+
+class CategoryData {
+  final String name;
+  final IconData icon;
+  final Color color;
+
+  CategoryData(this.name) :
+        icon = CategoryUtils.getIconForCategory(name),
+        color = CategoryUtils.getColorForCategory(name);
+}
\ No newline at end of file
Index: lib/pages/6-transaction/add_transaction/add_income_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/add_transaction/add_income_screen.dart b/lib/pages/6-transaction/add_transaction/add_income_screen.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/add_transaction/add_income_screen.dart	
@@ -0,0 +1,37 @@
+import 'package:finney/pages/6-transaction/add_transaction/base_adding.dart';
+import 'package:finney/shared/category.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class AddIncomeScreen extends BaseTransactionScreen {
+  const AddIncomeScreen({
+    super.key,
+    super.onTransactionAdded,
+    super.existingTransaction,
+  });
+
+  @override
+  State<AddIncomeScreen> createState() => _AddIncomeScreenState();
+}
+
+class _AddIncomeScreenState extends BaseTransactionScreenState<AddIncomeScreen> {
+  @override
+  String get screenTitle => widget.existingTransaction != null 
+      ? LocaleData.editExpense.getString(context)
+      : LocaleData.addExpense.getString(context);
+
+  @override
+  Color get amountColor => Colors.green;
+
+@override
+List<CategoryData> get categories => CategoryUtils
+    .getCategoriesForType(false)
+    .map((name) => CategoryData(name))
+    .toList();
+
+  @override
+  double getTransactionAmount() {
+    return double.parse(amountController.text.replaceAll(',', '.'));
+  }
+}
\ No newline at end of file
Index: lib/pages/6-transaction/add_transaction/expense_or_income.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/add_transaction/expense_or_income.dart b/lib/pages/6-transaction/add_transaction/expense_or_income.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/add_transaction/expense_or_income.dart	
@@ -0,0 +1,95 @@
+import 'package:finney/pages/4-saving/add_saving/add_edit_goal_page.dart';
+import 'package:finney/pages/3-dashboard/widgets/option_button.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/pages/6-transaction/add_transaction/add_income_screen.dart';
+import 'package:finney/pages/6-transaction/add_transaction/add_expense_screen.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class AddTransactionModal extends StatelessWidget {
+  final Function(TransactionModel) onTransactionAdded;
+
+  const AddTransactionModal({super.key, required this.onTransactionAdded});
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      padding: const EdgeInsets.all(20),
+      decoration: BoxDecoration(
+        color: Colors.white,
+        borderRadius: BorderRadius.circular(20),
+      ),
+      child: Column(
+        mainAxisSize: MainAxisSize.min,
+        children: [
+          Text(
+            LocaleData.addNew.getString(context),
+            style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
+          ),
+          const SizedBox(height: 30),
+          Row(
+            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+            children: [
+              OptionButton(
+                label: LocaleData.income.getString(context),
+                icon: Icons.add_circle_outline,
+                color: Colors.green,
+                onTap: () => _navigateToIncomeScreen(context),
+              ),
+              OptionButton(
+                label: LocaleData.expense.getString(context),
+                icon: Icons.remove_circle_outline,
+                color: Colors.red,
+                onTap: () => _navigateToExpenseScreen(context),
+              ),
+              OptionButton(
+                label: LocaleData.savings.getString(context),
+                icon: Icons.savings_outlined,
+                color: Colors.blue,
+                onTap: () => _navigateToAddEditGoalPage(context),
+              ),
+            ],
+          ),
+          const SizedBox(height: 30),
+        ],
+      ),
+    );
+  }
+
+  void _navigateToExpenseScreen(BuildContext context) {
+    Navigator.pop(context);
+    Navigator.push(
+      context,
+      MaterialPageRoute(
+        builder:
+            (context) =>
+                AddExpenseScreen(onTransactionAdded: onTransactionAdded),
+      ),
+    );
+  }
+
+  void _navigateToIncomeScreen(BuildContext context) {
+    Navigator.pop(context);
+    Navigator.push(
+      context,
+      MaterialPageRoute(
+        builder:
+            (context) =>
+                AddIncomeScreen(onTransactionAdded: onTransactionAdded),
+      ),
+    );
+  }
+
+  void _navigateToAddEditGoalPage(BuildContext context) {
+    Navigator.pop(context);
+    Navigator.push(
+      context,
+      MaterialPageRoute(
+        builder:
+            (context) => AddEditGoalPage(
+            ),
+      ),
+    );
+  }
+}
Index: lib/pages/6-transaction/add_transaction/add_expense_screen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/add_transaction/add_expense_screen.dart b/lib/pages/6-transaction/add_transaction/add_expense_screen.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/add_transaction/add_expense_screen.dart	
@@ -0,0 +1,38 @@
+import 'package:finney/pages/6-transaction/add_transaction/base_adding.dart';
+import 'package:finney/shared/category.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class AddExpenseScreen extends BaseTransactionScreen {
+  const AddExpenseScreen({
+    super.key,
+    super.onTransactionAdded,
+    super.existingTransaction,
+  });
+
+  @override
+  State<AddExpenseScreen> createState() => _AddExpenseScreenState();
+}
+
+class _AddExpenseScreenState extends BaseTransactionScreenState<AddExpenseScreen> {
+  @override
+  String get screenTitle => widget.existingTransaction != null 
+      ? LocaleData.editExpense.getString(context)
+      : LocaleData.addExpense.getString(context);
+
+  @override
+  Color get amountColor => Colors.redAccent;
+
+@override
+List<CategoryData> get categories => CategoryUtils
+    .getCategoriesForType(true)
+    .map((name) => CategoryData(name))
+    .toList();
+
+
+  @override
+  double getTransactionAmount() {
+    return -double.parse(amountController.text.replaceAll(',', '.'));
+  }
+}
\ No newline at end of file
Index: lib/pages/6-transaction/view_transaction/all_transactions.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/view_transaction/all_transactions.dart b/lib/pages/6-transaction/view_transaction/all_transactions.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/view_transaction/all_transactions.dart	
@@ -0,0 +1,232 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/pages/7-insights/components/time_selector.dart';
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/core/storage/cloud/service/transaction_cloud_service.dart';
+import 'package:finney/core/storage/storage_manager.dart'; // Added for getting the singleton
+import 'package:finney/pages/6-transaction/widgets/transaction_list.dart';
+import 'package:finney/pages/3-dashboard/widgets/delete_transaction_dialog.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class AllTransactionsScreen extends StatefulWidget {
+  final List<TransactionModel> transactions;
+  final Function(TransactionModel)? onDeleteTransaction;
+  // Add these parameters
+  final TimeRangeData timeRange;
+  final Function(TimeRangeData) onTimeRangeChanged;
+
+  const AllTransactionsScreen({
+    super.key,
+    required this.transactions,
+    this.onDeleteTransaction,
+    required this.timeRange,
+    required this.onTimeRangeChanged,
+  });
+
+  @override
+  State<AllTransactionsScreen> createState() => _AllTransactionsScreenState();
+}
+
+class _AllTransactionsScreenState extends State<AllTransactionsScreen> {
+  late final TransactionCloudService _transactionService;
+  bool _isDeleteMode = false;
+  final Set<String> _selectedTransactionIds = {};
+  late TimeRangeData _currentTimeRange;
+
+  @override
+  void initState() {
+    super.initState();
+    _currentTimeRange = widget.timeRange;
+    // Get the transaction service from the StorageManager
+    _transactionService = StorageManager().transactionService;
+  }
+
+  @override
+  void didUpdateWidget(AllTransactionsScreen oldWidget) {
+    super.didUpdateWidget(oldWidget);
+    if (widget.timeRange != oldWidget.timeRange) {
+      _currentTimeRange = widget.timeRange;
+    }
+  }
+
+  void _toggleDeleteMode() {
+    setState(() {
+      _isDeleteMode = !_isDeleteMode;
+      if (!_isDeleteMode) {
+        _selectedTransactionIds.clear();
+      }
+    });
+  }
+
+  void _toggleTransactionSelection(TransactionModel transaction) {
+    if (transaction.id == null) return;
+    
+    setState(() {
+      if (_selectedTransactionIds.contains(transaction.id!)) {
+        _selectedTransactionIds.remove(transaction.id!);
+      } else {
+        _selectedTransactionIds.add(transaction.id!);
+      }
+    });
+  }
+  
+  List<TransactionModel> _getSelectedTransactions(List<TransactionModel> allTransactions) {
+    return allTransactions
+        .where((transaction) => _selectedTransactionIds.contains(transaction.id))
+        .toList();
+  }
+
+  Future<void> _showDeleteConfirmationDialog(List<TransactionModel> transactions) async {
+    final selectedTransactions = _getSelectedTransactions(transactions);
+    if (selectedTransactions.isEmpty) return;
+
+    final confirmed = await DeleteTransactionDialog.show(
+      context,
+      message: LocaleData.confirmDeleteAction
+        .getString(context)
+        .replaceFirst('%d', selectedTransactions.length.toString()),
+      title: LocaleData.deleteTransactions.getString(context),
+    );
+
+    if (confirmed) {
+      for (var transaction in selectedTransactions) {
+        // Delete via service first
+        if (transaction.id != null) {
+          await _transactionService.deleteTransaction(transaction.id!);
+        }
+        // Then notify parent via callback if needed
+        widget.onDeleteTransaction?.call(transaction);
+      }
+      _selectedTransactionIds.clear();
+      _toggleDeleteMode();
+    }
+  }
+
+  List<TransactionModel> _filterTransactionsByTimeRange(List<TransactionModel> transactions) {
+    final startDate = _currentTimeRange.startDate;
+    final endDate = _currentTimeRange.endDate.add(const Duration(days: 1));
+    
+    return transactions.where((transaction) {
+      final date = transaction.date;
+      return date.isAfter(startDate) && date.isBefore(endDate);
+    }).toList();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Scaffold(
+      appBar: AppBar(
+        title: Text(
+          _isDeleteMode
+            ? LocaleData.selectItemsToDelete.getString(context)
+            : LocaleData.transactions.getString(context),
+          style: const TextStyle(
+            color: AppColors.primary,
+            fontWeight: FontWeight.bold,
+          ),
+        ),
+        backgroundColor: Colors.white,
+        elevation: 0,
+        leading: IconButton(
+          icon: Icon(
+            _isDeleteMode ? Icons.close : Icons.arrow_back,
+            color: Colors.black,
+          ),
+          onPressed: _isDeleteMode ? _toggleDeleteMode : () => Navigator.pop(context),
+        ),
+        actions: [
+          if (!_isDeleteMode)
+            IconButton(
+              icon: const Icon(Icons.delete_outline, color: Colors.black),
+              onPressed: _toggleDeleteMode,
+            )
+          else
+            StreamBuilder<List<TransactionModel>>(
+              stream: _transactionService.getTransactions(), // Use core service
+              builder: (context, snapshot) {
+                if (!snapshot.hasData) {
+                  return const IconButton(
+                    icon: Icon(Icons.delete, color: Colors.grey),
+                    onPressed: null,
+                  );
+                }
+                
+                final transactions = _filterTransactionsByTimeRange(snapshot.data!);
+                final selectedTransactions = _getSelectedTransactions(transactions);
+                
+                return IconButton(
+                  icon: const Icon(Icons.delete, color: Colors.red),
+                  onPressed: selectedTransactions.isEmpty 
+                    ? null 
+                    : () => _showDeleteConfirmationDialog(transactions),
+                );
+              },
+            ),
+        ],
+      ),
+      backgroundColor: Colors.white,
+      body: Column(
+        children: [
+          // Time selector at the top
+          Padding(
+            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+            child: TimeRangeSelector(
+              initialTimeRange: _currentTimeRange,
+              onTimeRangeChanged: (newTimeRange) {
+                setState(() {
+                  _currentTimeRange = newTimeRange;
+                });
+                widget.onTimeRangeChanged(newTimeRange);
+              },
+            ),
+          ),
+          
+          // Transaction list below
+          Expanded(
+            child: StreamBuilder<List<TransactionModel>>(
+              stream: _transactionService.getTransactions(), // Use core service
+              builder: (context, snapshot) {
+                if (snapshot.hasError) {
+                  return Center(
+                    child: Text(LocaleData.errorLoadingTransactions.getString(context)),
+                  );
+                }
+      
+                if (!snapshot.hasData) {
+                  return const Center(child: CircularProgressIndicator());
+                }
+      
+                final allTransactions = snapshot.data!;
+                final filteredTransactions = _filterTransactionsByTimeRange(allTransactions);
+      
+                return SingleChildScrollView(
+                  child: Padding(
+                    padding: const EdgeInsets.all(16),
+                    child: TransactionList(
+                      transactions: filteredTransactions,
+                      onDeleteTransaction: (transaction) {
+                        // Delete via service first
+                        if (transaction.id != null) {
+                          _transactionService.deleteTransaction(transaction.id!);
+                        }
+                        // Then notify parent
+                        widget.onDeleteTransaction?.call(transaction);
+                      },
+                      showAll: true,
+                      isDeleteMode: _isDeleteMode,
+                      selectedTransactions: Set<TransactionModel>.from(
+                        _getSelectedTransactions(filteredTransactions)
+                      ),
+                      onTransactionSelected: _toggleTransactionSelection,
+                    ),
+                  ),
+                );
+              },
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/pages/6-transaction/view_transaction/recent_transactions.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/pages/6-transaction/view_transaction/recent_transactions.dart b/lib/pages/6-transaction/view_transaction/recent_transactions.dart
new file mode 100644
--- /dev/null	
+++ b/lib/pages/6-transaction/view_transaction/recent_transactions.dart	
@@ -0,0 +1,189 @@
+import 'package:finney/core/storage/cloud/models/transaction_model.dart';
+import 'package:finney/pages/6-transaction/view_transaction/all_transactions.dart';
+import 'package:finney/pages/6-transaction/widgets/transaction_list.dart';
+import 'package:finney/pages/7-insights/components/time_selector.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:finney/shared/localization/locales.dart';
+
+class RecentTransactions extends StatefulWidget {
+  final List<TransactionModel> transactions;
+  final Function(TransactionModel)? onDeleteTransaction;
+  final TimeRangeData timeRange;
+  final Function(TimeRangeData) onTimeRangeChanged;
+
+  const RecentTransactions({
+    super.key,
+    required this.transactions,
+    this.onDeleteTransaction,
+    required this.timeRange,
+    required this.onTimeRangeChanged,
+  });
+
+  @override
+  State<RecentTransactions> createState() => _RecentTransactionsState();
+}
+
+class _RecentTransactionsState extends State<RecentTransactions> {
+  bool _isDeleteMode = false;
+  final Set<TransactionModel> _selectedTransactions = {};
+
+  void _toggleDeleteMode() {
+    setState(() {
+      _isDeleteMode = !_isDeleteMode;
+      if (!_isDeleteMode) {
+        _selectedTransactions.clear();
+      }
+    });
+  }
+
+  void _toggleTransactionSelection(TransactionModel transaction) {
+    setState(() {
+      if (_selectedTransactions.contains(transaction)) {
+        _selectedTransactions.remove(transaction);
+      } else {
+        _selectedTransactions.add(transaction);
+      }
+    });
+  }
+
+  Future<void> _showDeleteConfirmationDialog() async {
+    if (_selectedTransactions.isEmpty) return;
+
+    return showDialog(
+      context: context,
+      builder: (context) => AlertDialog(
+        title: Text(LocaleData.deleteTransactions.getString(context)),
+        content: Text(
+          LocaleData.confirmDeleteTransactions
+            .getString(context)
+            .replaceFirst('%d', _selectedTransactions.length.toString()),
+        ),
+        actions: [
+          TextButton(
+            onPressed: () => Navigator.pop(context),
+            child: Text(LocaleData.cancel.getString(context)),
+          ),
+          TextButton(
+            onPressed: () {
+              for (var transaction in _selectedTransactions) {
+                widget.onDeleteTransaction?.call(transaction);
+              }
+              _selectedTransactions.clear();
+              _toggleDeleteMode();
+              Navigator.pop(context);
+            },
+            child: Text(
+              LocaleData.delete.getString(context),
+              style: TextStyle(color: Colors.red)),
+          ),
+        ],
+      ),
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final recentTransactions = widget.transactions.take(5).toList();
+
+    return Container(
+      padding: const EdgeInsets.all(16),
+      decoration: BoxDecoration(
+        color: Colors.white,
+        borderRadius: BorderRadius.circular(16),
+      ),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Row(
+            mainAxisAlignment: MainAxisAlignment.spaceBetween,
+            children: [
+              Text(
+                _isDeleteMode 
+                  ? LocaleData.selectItemsToDelete.getString(context)
+                  : LocaleData.transactions.getString(context),
+                style: const TextStyle(
+                  fontSize: 20,
+                  fontWeight: FontWeight.bold,
+                  color: AppColors.darkBlue,
+                ),
+              ),
+              Row(
+                children: [
+                  if (!_isDeleteMode)
+                    IconButton(
+                      icon: const Icon(Icons.delete_outline),
+                      onPressed: recentTransactions.isEmpty ? null : _toggleDeleteMode,
+                    )
+                  else ...[
+                    IconButton(
+                      icon: const Icon(Icons.close),
+                      onPressed: _toggleDeleteMode,
+                    ),
+                    IconButton(
+                      icon: const Icon(Icons.delete, color: Colors.red),
+                      onPressed: _selectedTransactions.isEmpty ? null : _showDeleteConfirmationDialog,
+                    ),
+                  ],
+                  if (!_isDeleteMode)
+                    TextButton(
+                      onPressed: () {
+                        Navigator.push(
+                          context,
+                          MaterialPageRoute(
+                            builder: (context) => AllTransactionsScreen(
+                              transactions: widget.transactions,
+                              onDeleteTransaction: widget.onDeleteTransaction,
+                              timeRange: widget.timeRange,
+                              onTimeRangeChanged: widget.onTimeRangeChanged,
+                            ),
+                          ),
+                        );
+                      },
+                      style: TextButton.styleFrom(
+                        padding: const EdgeInsets.symmetric(vertical: 12),
+                        shape: RoundedRectangleBorder(
+                          borderRadius: BorderRadius.circular(8),
+                          side: BorderSide(
+                            color: AppColors.primary,
+                          ),
+                        ),
+                      ),
+                      child: Text(
+                        LocaleData.seeAll.getString(context),
+                        style: TextStyle(
+                          color: AppColors.primary,
+                          fontWeight: FontWeight.w600,
+                        ),
+                      ),
+                    ),
+                ],
+              ),
+            ],
+          ),
+          const SizedBox(height: 16),
+          if (recentTransactions.isEmpty)
+            Center(
+              child: Padding(
+                padding: EdgeInsets.all(20),
+                child: Text(
+                  LocaleData.noTransactionsInThisPeriod.getString(context),
+                  style: TextStyle(color: Colors.grey),
+                ),
+              ),
+            )
+          else
+            TransactionList(
+              transactions: recentTransactions,
+              onDeleteTransaction: widget.onDeleteTransaction,
+              showAll: false,
+              isDeleteMode: _isDeleteMode,
+              selectedTransactions: _selectedTransactions,
+              onTransactionSelected: _toggleTransactionSelection,
+            ),
+        ],
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/shared/path/app_images.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/path/app_images.dart b/lib/shared/path/app_images.dart
new file mode 100644
--- /dev/null	
+++ b/lib/shared/path/app_images.dart	
@@ -0,0 +1,24 @@
+class AppImages {
+  
+  static const String basePath = 'lib/shared/images/';
+  
+  static const String googleIcon = '${basePath}google_icon.png';
+  static const String appLogo = '${basePath}app_logo.png';
+  
+  // Help images
+  static const String helpPath = '${basePath}help/';
+  
+  // Chatbot help images
+  static const String chatbotText = '${helpPath}chatbot_text.png';
+  static const String chatbotImage = '${helpPath}chatbot_image.png';
+  static const String chatbotVoice = '${helpPath}chatbot_voice.png';
+  static const String chatbotInteraction = '${helpPath}chatbot_interaction.png';
+  
+  // Dashboard help images
+  static const String dashboardOverview = '${helpPath}dashboard_overview.png';
+  static const String dashboardBalance = '${helpPath}dashboard_balance.png';
+  static const String dashboardAddTransaction = '${helpPath}dashboard_add_transaction.png';
+  static const String dashboardDeleteTransaction = '${helpPath}dashboard_delete_transaction.png';
+  static const String dashboardSpendingPatterns = '${helpPath}dashboard_spending_patterns.png';
+  static const String dashboardRefresh = '${helpPath}dashboard_refresh.png';
+}
\ No newline at end of file
Index: lib/shared/widgets/common/snack_bar.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/widgets/common/snack_bar.dart b/lib/shared/widgets/common/snack_bar.dart
new file mode 100644
--- /dev/null	
+++ b/lib/shared/widgets/common/snack_bar.dart	
@@ -0,0 +1,73 @@
+import 'package:flutter/material.dart';
+
+class AppSnackBar {
+  // Show a snackbar with customizable message and color
+  static void show(
+    BuildContext context, {
+    required String message,
+    Color backgroundColor = Colors.redAccent,
+    Duration duration = const Duration(seconds: 2),
+    SnackBarBehavior behavior = SnackBarBehavior.floating,
+  }) {
+    ScaffoldMessenger.of(context).showSnackBar(
+      SnackBar(
+        content: Text(
+          message,
+          style: const TextStyle(
+            fontSize: 16,
+            fontWeight: FontWeight.w500,
+          ),
+        ),
+        backgroundColor: backgroundColor,
+        duration: duration,
+        behavior: behavior,
+        shape: RoundedRectangleBorder(
+          borderRadius: BorderRadius.circular(8),
+        ),
+        margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
+      ),
+    );
+  }
+
+  // Convenience method for error messages
+  static void showError(
+    BuildContext context, {
+    required String message,
+    Duration duration = const Duration(seconds: 2),
+  }) {
+    show(
+      context,
+      message: message,
+      backgroundColor: Colors.redAccent,
+      duration: duration,
+    );
+  }
+
+  // Convenience method for success messages
+  static void showSuccess(
+    BuildContext context, {
+    required String message,
+    Duration duration = const Duration(seconds: 2),
+  }) {
+    show(
+      context,
+      message: message,
+      backgroundColor: Colors.green,
+      duration: duration,
+    );
+  }
+
+  // Convenience method for info messages
+  static void showInfo(
+    BuildContext context, {
+    required String message,
+    Duration duration = const Duration(seconds: 2),
+  }) {
+    show(
+      context,
+      message: message,
+      backgroundColor: Colors.blue,
+      duration: duration,
+    );
+  }
+}
\ No newline at end of file
Index: lib/shared/widgets/common/help_pages.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/widgets/common/help_pages.dart b/lib/shared/widgets/common/help_pages.dart
new file mode 100644
--- /dev/null	
+++ b/lib/shared/widgets/common/help_pages.dart	
@@ -0,0 +1,231 @@
+import 'package:flutter/material.dart';
+import 'package:finney/shared/theme/app_color.dart';
+
+class AppHelp extends StatefulWidget {
+  final List<AppHelpPage> pages;
+  final VoidCallback? onFinish;
+  final String finishButtonText;
+
+  const AppHelp({
+    super.key,
+    required this.pages,
+    this.onFinish,
+    this.finishButtonText = "Got it!",
+  });
+
+  static void show(BuildContext context, List<AppHelpPage> pages) {
+    showDialog(
+      context: context,
+      builder: (context) => Dialog(
+        shape: RoundedRectangleBorder(
+          borderRadius: BorderRadius.circular(20),
+        ),
+        elevation: 0,
+        backgroundColor: Colors.transparent,
+        child: AppHelp(
+          pages: pages,
+          onFinish: () => Navigator.of(context).pop(),
+        ),
+      ),
+    );
+  }
+
+  @override
+  State<AppHelp> createState() => _AppHelpState();
+}
+
+class _AppHelpState extends State<AppHelp> {
+  final PageController _pageController = PageController();
+  int _currentPage = 0;
+
+  @override
+  void dispose() {
+    _pageController.dispose();
+    super.dispose();
+  }
+
+  void _nextPage() {
+    if (_currentPage < widget.pages.length - 1) {
+      _pageController.nextPage(
+        duration: const Duration(milliseconds: 300),
+        curve: Curves.easeInOut,
+      );
+    } else {
+      if (widget.onFinish != null) {
+        widget.onFinish!();
+      }
+    }
+  }
+
+  void _previousPage() {
+    if (_currentPage > 0) {
+      _pageController.previousPage(
+        duration: const Duration(milliseconds: 300),
+        curve: Curves.easeInOut,
+      );
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      width: MediaQuery.of(context).size.width * 0.85,
+      height: MediaQuery.of(context).size.height * 0.7,
+      decoration: BoxDecoration(
+        color: Colors.white,
+        borderRadius: BorderRadius.circular(20),
+        boxShadow: [
+          BoxShadow(
+            color: Colors.black.withValues(alpha: 0.1),
+            blurRadius: 10,
+            offset: const Offset(0, 5),
+          ),
+        ],
+      ),
+      child: ClipRRect(
+        borderRadius: BorderRadius.circular(20),
+        child: Column(
+          children: [
+            // Close button at the top right
+            Align(
+              alignment: Alignment.topRight,
+              child: IconButton(
+                icon: const Icon(Icons.close, color: Colors.grey),
+                onPressed: widget.onFinish,
+              ),
+            ),
+            
+            // Page content
+            Expanded(
+              child: PageView.builder(
+                controller: _pageController,
+                itemCount: widget.pages.length,
+                onPageChanged: (index) {
+                  setState(() {
+                    _currentPage = index;
+                  });
+                },
+                itemBuilder: (context, index) {
+                  final page = widget.pages[index];
+                  return Padding(
+                    padding: const EdgeInsets.all(20.0),
+                    child: Column(
+                      mainAxisAlignment: MainAxisAlignment.center,
+                      children: [
+                        // Title
+                        Text(
+                          page.title,
+                          style: TextStyle(
+                            fontSize: 22,
+                            fontWeight: FontWeight.bold,
+                            color: AppColors.primary,
+                          ),
+                          textAlign: TextAlign.center,
+                        ),
+                        const SizedBox(height: 20),
+                        
+                        // Image
+                        Expanded(
+                          child: page.image,
+                        ),
+                        const SizedBox(height: 20),
+                        
+                        // Description
+                        Text(
+                          page.description,
+                          style: const TextStyle(
+                            fontSize: 16,
+                            color: Colors.black87,
+                          ),
+                          textAlign: TextAlign.center,
+                        ),
+                      ],
+                    ),
+                  );
+                },
+              ),
+            ),
+            
+            // Navigation controls
+            Container(
+              padding: const EdgeInsets.all(20),
+              child: Row(
+                mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                children: [
+                  // Back button
+                  IconButton(
+                    icon: Icon(
+                      Icons.arrow_back_ios,
+                      color: _currentPage > 0 ? AppColors.primary : Colors.grey.withValues(alpha: 0.5),
+                    ),
+                    onPressed: _currentPage > 0 ? _previousPage : null,
+                  ),
+                  
+                  // Page indicators
+                  Row(
+                    children: List.generate(
+                      widget.pages.length,
+                      (index) => Container(
+                        margin: const EdgeInsets.symmetric(horizontal: 4),
+                        width: 8,
+                        height: 8,
+                        decoration: BoxDecoration(
+                          shape: BoxShape.circle,
+                          color: _currentPage == index
+                              ? AppColors.primary
+                              : Colors.grey.withValues(alpha: 0.5),
+                        ),
+                      ),
+                    ),
+                  ),
+                  
+                  // Next/Finish button
+                  _currentPage < widget.pages.length - 1
+                      ? IconButton(
+                          icon: const Icon(
+                            Icons.arrow_forward_ios,
+                            color: AppColors.primary,
+                          ),
+                          onPressed: _nextPage,
+                        )
+                      : TextButton(
+                          onPressed: widget.onFinish,
+                          style: TextButton.styleFrom(
+                            backgroundColor: AppColors.primary,
+                            padding: const EdgeInsets.symmetric(
+                              horizontal: 20,
+                              vertical: 8,
+                            ),
+                            shape: RoundedRectangleBorder(
+                              borderRadius: BorderRadius.circular(20),
+                            ),
+                          ),
+                          child: Text(
+                            widget.finishButtonText,
+                            style: const TextStyle(
+                              color: Colors.white,
+                              fontWeight: FontWeight.bold,
+                            ),
+                          ),
+                        ),
+                ],
+              ),
+            ),
+          ],
+        ),
+      ),
+    );
+  }
+}
+
+class AppHelpPage {
+  final String title;
+  final Widget image;
+  final String description;
+
+  AppHelpPage({
+    required this.title,
+    required this.image,
+    required this.description,
+  });
+}
\ No newline at end of file
Index: lib/shared/widgets/common/chatbot_bar.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/widgets/common/chatbot_bar.dart b/lib/shared/widgets/common/chatbot_bar.dart
new file mode 100644
--- /dev/null	
+++ b/lib/shared/widgets/common/chatbot_bar.dart	
@@ -0,0 +1,55 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter/material.dart';
+
+class AppNavbar extends StatelessWidget {
+  final Function(String)? onSearchSubmitted;
+  final TextEditingController _searchController = TextEditingController();
+
+  AppNavbar({
+    super.key,
+    this.onSearchSubmitted,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      decoration: const BoxDecoration(
+        color: Colors.white,
+      ),
+      child: SafeArea(
+        child: Padding(
+          padding: const EdgeInsets.fromLTRB(16, 12, 16, 12),
+          child: TextField(
+            controller: _searchController,
+            decoration: InputDecoration(
+              hintText: 'Ask me financial question...',
+              border: OutlineInputBorder(
+                borderRadius: BorderRadius.circular(12),
+                borderSide: BorderSide.none, 
+              ),
+              filled: true,
+              fillColor: AppColors.blurGray.withValues(alpha: 0.2), 
+              contentPadding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
+              suffixIcon: IconButton(
+                icon: const Icon(Icons.send_rounded, color: AppColors.darkBlue),
+                onPressed: () {
+                  if (_searchController.text.isNotEmpty && onSearchSubmitted != null) {
+                    onSearchSubmitted!(_searchController.text);
+                    _searchController.clear();
+                  }
+                },
+              ),
+            ),
+            textInputAction: TextInputAction.send,
+            onSubmitted: (value) {
+              if (value.isNotEmpty && onSearchSubmitted != null) {
+                onSearchSubmitted!(value);
+                _searchController.clear();
+              }
+            },
+          ),
+        ),
+      ),
+    );
+  }
+}
\ No newline at end of file
Index: lib/shared/animations/robot_idle.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/animations/robot_idle.json b/lib/shared/animations/robot_idle.json
new file mode 100644
--- /dev/null	
+++ b/lib/shared/animations/robot_idle.json	
@@ -0,0 +1,1 @@
+{"nm":"ì±ë´ ìºë¦­í°","ddd":0,"h":512,"w":512,"meta":{"g":"@lottiefiles/toolkit-js 0.33.2"},"layers":[{"ty":5,"nm":"ì¬ë¼ì´ë ì»¨í¸ë¡¤ label","sr":1,"st":0,"op":120,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[50,50],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0,23,0],"ix":2,"x":"var $bm_rt;\nvar x = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0001');\nvar a = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0002');\nvar b = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0005');\nif (x == false || b == false) {\n    $bm_rt = value;\n} else {\n    $bm_rt = [\n        value[0] - (a + 15),\n        value[1]\n    ];\n}"},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\n$bm_rt = $bm_mul(thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864 Origin')('ADBE Transform Group')('ADBE Rotate Z'), -1);"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"t":{"m":{"a":{"a":0,"k":[0,0],"ix":2},"g":1},"p":{},"a":[],"d":{"k":[{"s":{"f":"AppleGothic","s":50,"t":"ì¬ë¼ì´ë ì»¨í¸ë¡¤","fc":[1,1,1],"lh":60,"tr":0,"j":2,"ca":0},"t":0}]}},"ind":1,"parent":3},{"ty":1,"nm":"ì¬ë¼ì´ë ì»¨í¸ë¡¤","sr":1,"st":0,"op":120,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":true,"ao":0,"ks":{"a":{"a":0,"k":[37,75],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6,"x":"var $bm_rt;\nvar a = thisLayer('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0004');\n$bm_rt = [\n    a,\n    a\n];"},"sk":{"a":0,"k":0},"p":{"s":true,"x":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.25],"t":0},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.25],"t":15},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[98.75],"t":19},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-1.25],"t":23},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.25],"t":51},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[98.75],"t":55},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-1.25],"t":59},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.25],"t":82},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[98.75],"t":86},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-1.25],"t":90},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0.25],"t":108},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[98.75],"t":112},{"s":[-1.25],"t":116}],"ix":3,"x":"var $bm_rt;\nvar theLimit = thisLayer('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0002').value;\nvar a = thisLayer('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0005').value;\nif (a == true) {\n    $bm_rt = clamp(value, $bm_neg(theLimit), theLimit);\n} else {\n    $bm_rt = clamp(value, 0, theLimit);\n}"},"y":{"a":0,"k":0,"ix":4},"z":{"a":0,"k":0}},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"Pseudo/fL3c11baf7UVr","nm":"Slider Options","ix":1,"en":1,"ef":[{"ty":7,"mn":"Pseudo/fL3c11baf7UVr-0001","nm":"Orientation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"mn":"Pseudo/fL3c11baf7UVr-0002","nm":"Slider Limit","ix":2,"v":{"a":0,"k":100,"ix":2}},{"ty":7,"mn":"Pseudo/fL3c11baf7UVr-0003","nm":"Slider Scale","ix":3,"v":{"a":0,"k":100,"ix":3}},{"ty":7,"mn":"Pseudo/fL3c11baf7UVr-0004","nm":"Arrow Size","ix":4,"v":{"a":0,"k":100,"ix":4}},{"ty":7,"mn":"Pseudo/fL3c11baf7UVr-0005","nm":"Negative Slider Values?","ix":5,"v":{"a":0,"k":1,"ix":5}}]}],"masksProperties":[{"nm":"Mask 1","inv":false,"mode":"a","x":{"a":0,"k":0,"ix":4},"o":{"a":0,"k":100,"ix":3},"pt":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[62.5,50.5],[9.5,50.5],[37,76]]},"ix":1}},{"nm":"Mask 2","inv":false,"mode":"i","x":{"a":0,"k":0,"ix":4},"o":{"a":0,"k":100,"ix":3},"pt":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[0,34],[0,75],[75,75],[75,34]]},"ix":1}}],"sc":"#ffffff","sh":75,"sw":75,"ind":2,"parent":3},{"ty":4,"nm":"ì¬ë¼ì´ë ì»¨í¸ë¡¤ Origin","sr":1,"st":0,"op":120,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[33.75,33.75,100],"ix":6,"x":"var $bm_rt;\nvar a = $bm_mul(thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0003'), 2);\n$bm_rt = [\n    a,\n    a\n];"},"sk":{"a":0,"k":0},"p":{"a":0,"k":[64,61,0],"ix":2},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar a = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0001');\nif (a == true) {\n    $bm_rt = -90;\n} else {\n    $bm_rt = 0;\n}"},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"HitDetection","ix":1,"cix":2,"np":3,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"Rectangle Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"s":{"a":0,"k":[200,12],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":0,"ix":4},"w":{"a":0,"k":1,"ix":5},"c":{"a":0,"k":[0,0.3843,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0.3843,1],"ix":4},"r":1,"o":{"a":0,"k":0,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[46.25,25.625],"ix":2,"x":"var $bm_rt;\n$bm_rt = [\n    0,\n    -5\n];"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"CenterLine","ix":2,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[0,5.5],[0,-7.25]]},"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"c":{"a":0,"k":[0,0.3843,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0.3843,1],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"OuterLine","ix":3,"cix":2,"np":3,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"Rectangle Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"s":{"a":0,"k":[3,12],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0.3843,1],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[100,-4.5],"ix":2,"x":"var $bm_rt;\nvar temp;\ntemp = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0002');\n$bm_rt = [\n    temp,\n    -4.5\n];"},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"BaseLine","ix":4,"cix":2,"np":3,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"Rectangle Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"s":{"a":0,"k":[100,4],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0,0.3843,1],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[-50,0],"ix":1,"x":"var $bm_rt;\n$bm_rt = [\n    -50,\n    0\n];"},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\nvar temp;\ntemp = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0002');\n$bm_rt = [\n    temp,\n    100\n];"},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"rp","bm":0,"hd":false,"mn":"ADBE Vector Filter - Repeater","nm":"Repeater 1","ix":5,"m":1,"c":{"a":0,"k":1,"ix":1,"x":"var $bm_rt;\nvar a = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0005');\nif (a == true) {\n    $bm_rt = 2;\n} else {\n    $bm_rt = 1;\n}"},"o":{"a":0,"k":0,"ix":2},"tr":{"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[-100,100],"ix":3,"x":"var $bm_rt;\n$bm_rt = [\n    -100,\n    100\n];"},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0},"so":{"a":0,"k":100,"ix":5},"eo":{"a":0,"k":100,"ix":6}}}],"ind":3},{"ty":3,"nm":"SlideController","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[256,256,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":0,"ix":11}},"ef":[{"ty":5,"mn":"ADBE Slider Control","nm":"ì¬ë¼ì´ë ì»¨í¸ë¡¤","ix":1,"en":1,"ef":[{"ty":0,"mn":"ADBE Slider Control-0001","nm":"ì¬ë¼ì´ë","ix":1,"v":{"a":0,"k":100,"ix":1,"x":"var $bm_rt;\nvar myLimit = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Effect Parade')('Pseudo/fL3c11baf7UVr')('Pseudo/fL3c11baf7UVr-0002');\nvar myMaster = thisComp.layer('\\uc2ac\\ub77c\\uc774\\ub354 \\ucee8\\ud2b8\\ub864')('ADBE Transform Group')('ADBE Position_0');\n$bm_rt = linear(myMaster, $bm_neg(myLimit), myLimit, -100, 100);"}}]}],"ind":4},{"ty":1,"nm":"JoyStkCtrl01","sr":1,"st":0,"op":120,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[37.5,37.5,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[3.922,-3.922,0],"t":0,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[3.922,-3.922,0],"t":11,"ti":[-23.529,21.569,0],"to":[23.529,-21.569,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[145.098,-133.333,0],"t":17,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[145.098,-133.333,0],"t":37,"ti":[-3.922,-29.412,0],"to":[3.922,29.412,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[168.627,43.137,0],"t":44,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0},"i":{"x":0.667,"y":1},"s":[168.627,43.137,0],"t":56,"ti":[0.309,28.145,0],"to":[-51.307,-4.575,0]},{"o":{"x":0.167,"y":0},"i":{"x":0.667,"y":1},"s":[-139.216,15.686,0],"t":61,"ti":[0,0,0],"to":[-0.163,-14.869,0]},{"o":{"x":0.167,"y":0},"i":{"x":0.667,"y":1},"s":[-140.196,15.686,0],"t":76,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-147.059,-152.941,0],"t":81,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0},"i":{"x":0.667,"y":1},"s":[-147.059,-152.941,0],"t":98,"ti":[0,0,0],"to":[0,0,0]},{"s":[5.882,-1.961,0],"t":104}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[{"ty":5,"mn":"ADBE Slider Control","nm":"joystickLimit","ix":1,"en":1,"ef":[{"ty":0,"mn":"ADBE Slider Control-0001","nm":"ì¬ë¼ì´ë","ix":1,"v":{"a":0,"k":200,"ix":1}}]}],"sc":"#ffffff","sh":75,"sw":75,"ind":5,"parent":6},{"ty":4,"nm":"JoyStkCtrl01 Origin","sr":1,"st":0,"op":120,"ip":0,"hd":true,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[25.5,25.5,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[451,64,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":2,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"Rectangle Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":28,"ix":4},"s":{"a":0,"k":[251.383,200],"ix":2,"x":"var $bm_rt;\nvar temp;\ntemp = $bm_mul(thisComp.layer('JoyStkCtrl01')('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001'), 2);\n$bm_rt = [\n    temp,\n    temp\n];"}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":7,"ix":5},"d":[{"nm":"ëì","n":"d","v":{"a":0,"k":14,"ix":1}},{"nm":"ì¤íì","n":"o","v":{"a":0,"k":0,"ix":7}}],"c":{"a":0,"k":[0.2588,0.3412,0.4353],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":6},{"ty":3,"nm":"ì ì²´ ì½í¸ë¡¤","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,256,0],"t":0,"ti":[0,0,0],"to":[0,-2,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,244,0],"t":15,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,256,0],"t":30,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,244,0],"t":45,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,256,0],"t":60,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,244,0],"t":75,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,256,0],"t":90,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[256,244,0],"t":105,"ti":[0,-2,0],"to":[0,0,0]},{"s":[256,256,0],"t":120}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":0,"ix":11}},"ef":[],"ind":7},{"ty":4,"nm":"ì¤ë¥¸ìª½ ëì ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[7.814,21.809,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6,"x":"var $bm_rt;\nfunction slider(inputValue) {\n    var contrl = thisComp.layer('SlideController');\n    var contrlCurVal1 = contrl('ADBE Effect Parade')(1)('ADBE Slider Control-0001');\n    var k1 = [\n            100,\n            100,\n            100\n        ];\n    var k2 = [\n            100,\n            0,\n            100\n        ];\n    k1 = unArray(k1);\n    k2 = unArray(k2);\n    if (contrlCurVal1 > 0) {\n        var resultAdd1 = linear(contrlCurVal1, 0, 100, k1, k2);\n    } else if (contrlCurVal1 < 0) {\n        var resultAdd1 = $bm_sum(k1, $bm_sum($bm_neg(linear($bm_neg(contrlCurVal1), 0, 100, k1, k2)), k1));\n    } else {\n        var resultAdd1 = k1;\n    }\n    var myResult = $bm_sum(resultAdd1, $bm_sub(inputValue, k1));\n    return myResult;\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\n$bm_rt = slider(value);"},"sk":{"a":0,"k":0},"p":{"a":0,"k":[-63.086,-46.868,0],"ix":2,"x":"var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('JoyStkCtrl01');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            192.913604736328,\n            209.132400512695,\n            0\n        ];\n    var key2 = [\n            208.413604736328,\n            209.132400512695,\n            0\n        ];\n    var key3 = [\n            175.913604736328,\n            209.132400512695,\n            0\n        ];\n    var key4 = [\n            192.913604736328,\n            188.632400512695,\n            0\n        ];\n    var key5 = [\n            192.913604736328,\n            233.632400512695,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.16,0],[0,0],[0,4.16],[0,0],[-4.161,0],[0,-4.161],[0,0]],"o":[[0,0],[-4.161,0],[0,0],[0,-4.161],[4.16,0],[0,0],[0,4.16]],"v":[[0.001,21.559],[0.001,21.559],[-7.564,13.995],[-7.564,-13.994],[0.001,-21.559],[7.564,-13.994],[7.564,13.995]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[7.814,21.809],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":8,"parent":7},{"ty":4,"nm":"ì¼ìª½ ëì ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[7.814,21.809,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6,"x":"var $bm_rt;\nfunction slider(inputValue) {\n    var contrl = thisComp.layer('SlideController');\n    var contrlCurVal1 = contrl('ADBE Effect Parade')(1)('ADBE Slider Control-0001');\n    var k1 = [\n            100,\n            100,\n            100\n        ];\n    var k2 = [\n            100,\n            0,\n            100\n        ];\n    k1 = unArray(k1);\n    k2 = unArray(k2);\n    if (contrlCurVal1 > 0) {\n        var resultAdd1 = linear(contrlCurVal1, 0, 100, k1, k2);\n    } else if (contrlCurVal1 < 0) {\n        var resultAdd1 = $bm_sum(k1, $bm_sum($bm_neg(linear($bm_neg(contrlCurVal1), 0, 100, k1, k2)), k1));\n    } else {\n        var resultAdd1 = k1;\n    }\n    var myResult = $bm_sum(resultAdd1, $bm_sub(inputValue, k1));\n    return myResult;\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\n$bm_rt = slider(value);"},"sk":{"a":0,"k":0},"p":{"a":0,"k":[63.241,-46.868,0],"ix":2,"x":"var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('JoyStkCtrl01');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            319.241195678711,\n            209.132400512695,\n            0\n        ];\n    var key2 = [\n            334.7412109375,\n            209.132400512695,\n            0\n        ];\n    var key3 = [\n            302.2412109375,\n            209.132400512695,\n            0\n        ];\n    var key4 = [\n            319.2412109375,\n            188.632400512695,\n            0\n        ];\n    var key5 = [\n            319.2412109375,\n            233.632400512695,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.16,0],[0,0],[0,4.16],[0,0],[-4.16,0],[0,-4.161],[0,0]],"o":[[0,0],[-4.16,0],[0,0],[0,-4.161],[4.16,0],[0,0],[0,4.16]],"v":[[0,21.559],[0,21.559],[-7.564,13.995],[-7.564,-13.994],[0,-21.559],[7.564,-13.994],[7.564,13.995]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[7.814,21.809],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":9,"parent":7},{"ty":4,"nm":"ë ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[104.775,35.425,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0.078,-46.868,0],"ix":2,"x":"var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('JoyStkCtrl01');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            256.077697753906,\n            209.132308959961,\n            0\n        ];\n    var key2 = [\n            271.577697753906,\n            209.132308959961,\n            0\n        ];\n    var key3 = [\n            239.077697753906,\n            209.132308959961,\n            0\n        ];\n    var key4 = [\n            256.077697753906,\n            188.632308959961,\n            0\n        ];\n    var key5 = [\n            256.077697753906,\n            233.632308959961,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,-14.556],[0,0],[14.557,0],[0,0],[17.066,21.559]],"o":[[0,0],[14.557,0],[0,0],[0,14.556],[0,0],[0,0],[-17.066,-21.56]],"v":[[-70.473,-35.175],[44.006,-35.175],[70.473,-8.709],[70.473,8.709],[44.006,35.175],[-15.298,35.175],[-36.221,-3.782]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.1333,0.1333,0.1333],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[138.827,35.425],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[14.557,0],[0,0],[0,14.556],[0,0],[-14.556,0],[0,0],[0,-14.556],[0,0]],"o":[[0,0],[-14.556,0],[0,0],[0,-14.556],[0,0],[14.557,0],[0,0],[0,14.556]],"v":[[78.058,35.175],[-78.059,35.175],[-104.525,8.709],[-104.525,-8.709],[-78.059,-35.175],[78.058,-35.175],[104.525,-8.709],[104.525,8.709]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.1333,0.1333,0.1333],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[104.775,35.425],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":10,"parent":7},{"ty":4,"nm":"ë¨¸ë¦¬ ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[133.432,84.897,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0.077,-69.353,0],"ix":2,"x":"var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('JoyStkCtrl01');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            256.077301025391,\n            186.647399902344,\n            0\n        ];\n    var key2 = [\n            260.577301025391,\n            186.647399902344,\n            0\n        ];\n    var key3 = [\n            249.077301025391,\n            186.647399902344,\n            0\n        ];\n    var key4 = [\n            256.077301025391,\n            178.647399902344,\n            0\n        ];\n    var key5 = [\n            256.077301025391,\n            197.647399902344,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,-60.109],[73.554,0],[0,60.109],[-73.555,0]],"o":[[0,60.109],[-73.555,0],[0,-60.109],[73.554,0]],"v":[[133.182,24.189],[0,84.647],[-133.182,24.189],[0,-84.647]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.8549,0.8784,0.902],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[133.432,84.897],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":11,"parent":7},{"ty":4,"nm":"ì¤ë¥¸ìª½ ê· ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[20.768,31.265,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[-133.26,-46.696,0],"ix":2,"x":"var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('JoyStkCtrl01');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            122.740203857422,\n            209.304306030273,\n            0\n        ];\n    var key2 = [\n            123.740203857422,\n            209.304306030273,\n            0\n        ];\n    var key3 = [\n            122.240203857422,\n            209.304306030273,\n            0\n        ];\n    var key4 = [\n            122.740203857422,\n            207.804306030273,\n            0\n        ];\n    var key5 = [\n            122.740203857422,\n            211.304306030273,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[11.285,0],[0,0],[0,11.285],[0,0],[-11.284,0],[0,-11.284],[0,0]],"o":[[0,0],[-11.284,0],[0,0],[0,-11.284],[11.285,0],[0,0],[0,11.285]],"v":[[0,31.014],[0,31.014],[-20.518,10.497],[-20.518,-10.497],[0,-31.014],[20.518,-10.497],[20.518,10.497]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[20.767,31.264],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":12,"parent":7},{"ty":4,"nm":"ì¼ìª½ ê· ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[20.768,31.265,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[133.26,-46.696,0],"ix":2,"x":"var $bm_rt;\nfunction joystick(inputResult) {\n    var slideR, slideL, slideU, slideD;\n    var easeOverride_right = null;\n    var easeOverride_left = null;\n    var easeOverride_up = null;\n    var easeOverride_down = null;\n    var contrl = thisComp.layer('JoyStkCtrl01');\n    var myLimit = contrl('ADBE Effect Parade')('joystickLimit')('ADBE Slider Control-0001');\n    var contrlCurVal = contrl('ADBE Transform Group')('ADBE Position');\n    var resultVal;\n    var key1 = [\n            389.260299682617,\n            209.304306030273,\n            0\n        ];\n    var key2 = [\n            387.760314941406,\n            209.304306030273,\n            0\n        ];\n    var key3 = [\n            387.260314941406,\n            209.304306030273,\n            0\n        ];\n    var key4 = [\n            389.260314941406,\n            207.804306030273,\n            0\n        ];\n    var key5 = [\n            389.260314941406,\n            211.304306030273,\n            0\n        ];\n    key1 = unArray(key1);\n    key2 = unArray(key2);\n    key3 = unArray(key3);\n    key4 = unArray(key4);\n    key5 = unArray(key5);\n    try {\n        if (!thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB').active) {\n            throw 'inactive';\n        }\n        slideR = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0001');\n        slideL = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0002');\n        slideU = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0003');\n        slideD = thisLayer('ADBE Effect Parade')('Pseudo/1k48264d77gIB')('Pseudo/1k48264d77gIB-0004');\n    } catch (err) {\n        slideR = 0;\n        slideL = 0;\n        slideU = 0;\n        slideD = 0;\n    }\n    if (easeOverride_right !== null && !isNaN(easeOverride_right)) {\n        slideR = moClamp(easeOverride_right, -100, 100);\n    }\n    if (easeOverride_left !== null && !isNaN(easeOverride_left)) {\n        slideL = moClamp(easeOverride_left, -100, 100);\n    }\n    if (easeOverride_up !== null && !isNaN(easeOverride_up)) {\n        slideU = moClamp(easeOverride_up, -100, 100);\n    }\n    if (easeOverride_down !== null && !isNaN(easeOverride_down)) {\n        slideD = moClamp(easeOverride_down, -100, 100);\n    }\n    var easeResultX, easeResultY;\n    if (contrlCurVal[0] >= 0) {\n        resultVal = linear(contrlCurVal[0], 0, myLimit, key1, key2);\n        if (slideR !== 0) {\n            easeResultX = easeSwitch(contrlCurVal[0], 0, myLimit, key1, key2, slideR);\n            resultVal = linear(Math.abs(slideR), 0, 100, resultVal, easeResultX);\n        }\n    } else {\n        resultVal = linear($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3);\n        if (slideL !== 0) {\n            easeResultX = easeSwitch($bm_neg(contrlCurVal[0]), 0, myLimit, key1, key3, slideL);\n            resultVal = linear(Math.abs(slideL), 0, 100, resultVal, easeResultX);\n        }\n    }\n    var resultAdd = 0;\n    if (contrlCurVal[1] <= 0) {\n        resultAdd = $bm_sub(linear($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4), key1);\n        if (slideU !== 0) {\n            easeResultY = $bm_sub(easeSwitch($bm_neg(contrlCurVal[1]), 0, myLimit, key1, key4, slideU), key1);\n            resultAdd = linear(Math.abs(slideU), 0, 100, resultAdd, easeResultY);\n        }\n    } else {\n        resultAdd = $bm_sub(linear(contrlCurVal[1], 0, myLimit, key1, key5), key1);\n        if (slideD !== 0) {\n            easeResultY = $bm_sub(easeSwitch(contrlCurVal[1], 0, myLimit, key1, key5, slideD), key1);\n            resultAdd = linear(Math.abs(slideD), 0, 100, resultAdd, easeResultY);\n        }\n    }\n    return $bm_sum($bm_sum(resultVal, resultAdd), $bm_sub(inputResult, key1));\n}\nfunction cosEase(val, min1, max1, input1, input2) {\n    var myCos = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            myCos.push(getMeCos(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        myCos = getMeCos(val, min1, max1, input1, input2);\n    }\n    return myCos;\n    function getMeCos(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var myCos2 = $bm_sum($bm_sum($bm_mul($bm_neg(c), Math.cos($bm_mul(mapVal, $bm_div(Math.PI, 2)))), c), input1);\n        return myCos2;\n    }\n}\nfunction sinEase(val, min1, max1, input1, input2) {\n    var mySin = [];\n    if ($bm_isInstanceOfArray(input1)) {\n        for (var x = 0; x < input1.length; x++) {\n            mySin.push(getMeSin(val, min1, max1, input1[x], input2[x]));\n        }\n    } else {\n        mySin = getMeSin(val, min1, max1, input1, input2);\n    }\n    return mySin;\n    function getMeSin(val, min1, max1, input1, input2) {\n        var mapVal = moClamp($bm_div(val, $bm_sub(max1, min1)), 0, 1);\n        var c = $bm_sub(input2, input1);\n        var mySin2 = $bm_sum($bm_mul(c, Math.sin($bm_mul(mapVal, $bm_div(Math.PI, 2)))), input1);\n        return mySin2;\n    }\n}\nfunction easeSwitch(val, min1, max1, input1, input2, morph) {\n    if (morph < 0) {\n        return cosEase(val, min1, max1, input1, input2);\n    } else {\n        return sinEase(val, min1, max1, input1, input2);\n    }\n}\nfunction unArray(inKey) {\n    if (inKey instanceof Array && inKey.length === 1) {\n        return inKey[0];\n    } else {\n        return inKey;\n    }\n}\nfunction moClamp(a, b, c) {\n    if (!(a instanceof Array)) {\n        return Math.max(b, Math.min(c, a));\n    } else {\n        var aryHold = [];\n        for (var x = 0; x < a.length; x++) {\n            aryHold.push(Math.max(b, Math.min(c, a[x])));\n        }\n        return aryHold;\n    }\n}\n$bm_rt = joystick(value);"},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[11.285,0],[0,0],[0,11.285],[0,0],[-11.284,0],[0,-11.284],[0,0]],"o":[[0,0],[-11.284,0],[0,0],[0,-11.284],[11.285,0],[0,0],[0,11.285]],"v":[[0,31.014],[0,31.014],[-20.518,10.497],[-20.518,-10.497],[0,-31.014],[20.518,-10.497],[20.518,10.497]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[20.767,31.264],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":13,"parent":7},{"ty":4,"nm":"ëª¸íµ ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[75.233,66.18,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[0.089,88.07,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.399,0.061],[0.256,-0.28],[0.587,-0.475],[0,0],[0,0],[-0.028,-0.215],[-0.012,-0.053],[-0.014,-0.054],[-0.041,-0.182],[0,0],[-0.041,-0.263],[0,0],[-0.021,-0.256],[0,0],[-0.002,-0.033],[0,-0.279],[6.804,0],[0,0],[0,0],[0.007,0.42],[0,0],[0,0],[0,0],[-0.422,0.005],[0,0],[0,0],[-0.451,0.033],[0,0],[-0.41,0.064],[0,0],[-0.371,0.09],[0,0],[-0.36,0.118],[0,0],[-0.744,0.383],[-0.359,0.221],[0,0],[-0.325,0.237],[0,0],[-0.796,1.221],[0,0],[-0.093,0.151],[0,0],[0,3.055],[9.044,0],[0,0],[0,0],[0.011,-1.093],[0,0],[0,0],[0,-0.006],[0,0],[0,-0.006],[-1.104,-0.004],[0,0],[0,0],[-1.716,-0.852],[-0.009,-0.004],[-0.104,0],[-0.131,0.103],[-0.035,0.031],[-0.509,0.707],[0.025,0.134],[0.095,0.058],[-0.001,0.001],[0.049,0.029],[0.218,0.111],[0.132,0.064],[0.148,0.065],[0.243,0.095],[0.034,0.013],[0.317,0.1],[0.002,0.001],[1.666,0],[0,0],[0,0],[0.005,0.415],[0,0],[0,0],[0,0],[-0.423,0.001],[0,0],[0,0],[-0.286,-0.022],[0,0],[0,-6.417],[0.637,-1.517],[0.226,-0.403],[0,0],[1.061,-0.979],[0.041,-0.036],[0,0],[0.467,-0.282],[2.239,0],[0,0],[0.005,0],[0.004,0],[0.022,-1.097],[0,-0.006],[0,0],[0,-0.006],[0,0],[0,-0.008],[0,-0.007],[-1.113,0],[0,0],[0,9.044],[0.679,1.822]],"o":[[-0.217,-0.009],[-0.498,0.546],[0,0],[0,0],[-0.173,0.145],[0.008,0.056],[0.015,0.054],[0.05,0.185],[0,0],[0.057,0.261],[0,0],[0.032,0.232],[0,0],[0.003,0.032],[0.023,0.315],[0,6.804],[0,0],[0,0],[-0.42,-0.006],[0,0],[0,0],[0,0],[0.005,-0.422],[0,0],[0,0],[0.382,0],[0,0],[0.371,-0.031],[0,0],[0.382,-0.064],[0,0],[0.402,-0.101],[0,0],[0.789,-0.263],[0.366,-0.188],[0,0],[0.354,-0.221],[0,0],[1.163,-0.939],[0,0],[0.09,-0.132],[0,0],[1.627,-2.608],[0,-9.044],[0,0],[0,0],[-1.089,0.027],[0,0],[0,0],[0,0.007],[0,0],[0,0.006],[0.021,1.098],[0,0],[0,0],[1.903,0],[0.009,0.004],[0.09,0.037],[0.18,0],[0.036,-0.031],[0.799,-0.712],[0.082,-0.114],[-0.025,-0.13],[0.001,-0.001],[-0.049,-0.029],[-0.213,-0.122],[-0.131,-0.068],[-0.146,-0.069],[-0.239,-0.106],[-0.034,-0.012],[-0.311,-0.119],[-0.001,0],[-1.575,-0.493],[0,0],[0,0],[-0.413,-0.016],[0,0],[0,0],[0,0],[0.009,-0.421],[0,0],[0,0],[0.298,0],[0,0],[6.402,0.476],[0,1.646],[-0.182,0.43],[0,0],[-0.8,1.256],[-0.04,0.037],[0,0],[-0.45,0.366],[-1.921,1.162],[0,0],[-0.005,0],[-0.004,0],[-1.1,0.008],[0,0.006],[0,0],[0,0.006],[0,0],[0,0.008],[0,0.007],[0.012,1.109],[0,0],[9.044,0],[0,-1.948],[-0.085,-0.239]],"v":[[16.499,3.109],[15.828,3.374],[14.208,4.911],[13.912,5.15],[13.818,5.225],[13.606,5.752],[13.639,5.913],[13.68,6.074],[13.823,6.628],[13.831,6.659],[13.978,7.448],[13.996,7.551],[14.078,8.286],[14.085,8.349],[14.094,8.447],[14.127,9.329],[1.787,21.671],[-13.334,21.671],[-13.355,21.671],[-14.12,20.907],[-14.12,20.883],[-14.12,7.859],[-14.12,7.84],[-13.352,7.073],[-13.337,7.073],[1.787,7.073],[3.024,7.023],[3.17,7.013],[4.33,6.872],[4.506,6.844],[5.639,6.613],[5.776,6.577],[6.923,6.247],[6.956,6.236],[9.267,5.262],[10.355,4.648],[10.386,4.63],[11.413,3.939],[12.356,3.197],[15.301,-0.05],[15.33,-0.084],[15.605,-0.519],[15.701,-0.673],[18.188,-9.329],[1.787,-25.732],[-16.115,-25.732],[-16.209,-25.732],[-18.184,-23.735],[-18.184,-23.696],[-18.184,-5.074],[-18.188,-5.056],[-18.188,-5.016],[-18.184,-4.998],[-16.171,-3.011],[-16.16,-3.011],[1.787,-3.011],[7.239,-1.726],[7.264,-1.713],[7.558,-1.655],[8.027,-1.828],[8.134,-1.92],[10.166,-4.147],[10.253,-4.526],[10.071,-4.814],[10.074,-4.818],[9.926,-4.899],[9.279,-5.25],[8.886,-5.445],[8.447,-5.647],[7.723,-5.949],[7.622,-5.987],[6.68,-6.315],[6.675,-6.317],[1.787,-7.073],[-13.317,-7.073],[-13.376,-7.073],[-14.124,-7.837],[-14.124,-7.851],[-14.124,-20.876],[-14.124,-20.909],[-13.35,-21.67],[-13.348,-21.67],[1.787,-21.67],[2.666,-21.626],[2.709,-21.623],[14.127,-9.329],[13.167,-4.562],[12.553,-3.306],[12.532,-3.275],[9.735,0.081],[9.612,0.19],[9.529,0.262],[8.149,1.236],[1.787,3.01],[-16.149,3.01],[-16.162,3.008],[-16.174,3.01],[-18.181,4.999],[-18.184,5.015],[-18.184,5.054],[-18.181,5.072],[-18.181,23.686],[-18.184,23.706],[-18.181,23.726],[-16.158,25.732],[1.787,25.732],[18.188,9.329],[17.164,3.658]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.8549,0.8784,0.902],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[77.852,76.379],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,-8.136],[29.882,0],[0,8.135],[-29.882,0]],"o":[[0,8.135],[-29.882,0],[0,-8.136],[29.882,0]],"v":[[54.107,0],[0,14.73],[-54.107,0],[0,-14.73]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.7686,0.7686,0.7686],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[75.233,16.501],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,51.185],[-41.412,0],[0,-51.185],[41.413,0]],"o":[[0,-51.185],[41.413,0],[0,51.185],[-41.412,0]],"v":[[-74.983,-14.245],[0,-65.93],[74.983,-14.245],[0,65.93]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.8549,0.8784,0.902],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[75.233,66.18],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":14,"parent":7},{"ty":4,"nm":"ì¤ë¥¸í ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[41.046,4.195,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-82.32,42.076,0],"t":0,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-82.32,42.076,0],"t":11,"ti":[0,-3.5,0],"to":[0,3.5,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-82.32,63.076,0],"t":17,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-82.32,63.076,0],"t":37,"ti":[0,3.5,0],"to":[0,-3.5,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-82.32,42.076,0],"t":44,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-82.32,42.076,0],"t":56,"ti":[-12.333,0,0],"to":[10.542,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-19.07,42.076,0],"t":61,"ti":[-1.792,0,0],"to":[12.333,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-8.32,42.076,0],"t":76,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.771,"y":0.004},"i":{"x":0.667,"y":1},"s":[-8.32,42.076,0],"t":81,"ti":[12.333,0,0],"to":[-14.5,0,0]},{"o":{"x":0.855,"y":0.012},"i":{"x":0.667,"y":1},"s":[-95.32,42.076,0],"t":92,"ti":[-2.167,0,0],"to":[-12.333,0,0]},{"s":[-82.32,42.076,0],"t":99}],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":0},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":11},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":17},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":56},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":61},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":76},{"o":{"x":0.671,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":81},{"o":{"x":0.649,"y":0},"i":{"x":0.787,"y":1.007},"s":[27],"t":92},{"s":[0],"t":99}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.329,-27.086],[-11.892,-1.9],[-4.329,27.087],[11.892,1.901]],"o":[[-4.329,27.087],[11.892,1.901],[4.328,-27.085],[-11.891,-1.9]],"v":[[-18.466,-3.442],[-4.772,49.044],[9.831,1.08],[10.904,-49.045]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[23.045,51.195],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":15,"parent":7},{"ty":4,"nm":"ì¼í ì¤ê³½ì ","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[7.046,4.195,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[83.877,40.076,0],"t":0,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[83.877,40.076,0],"t":11,"ti":[0,-3.5,0],"to":[0,3.5,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[83.877,61.076,0],"t":17,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[83.877,61.076,0],"t":37,"ti":[0,3.5,0],"to":[0,-3.5,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[83.877,40.076,0],"t":44,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[83.877,40.076,0],"t":56,"ti":[14,0,0],"to":[-14.333,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-2.123,40.076,0],"t":61,"ti":[1.449,-0.333,0],"to":[-14,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-0.123,40.076,0],"t":76,"ti":[-18.333,0,0],"to":[-1.449,0.333,0]},{"o":{"x":0.75,"y":0},"i":{"x":0.667,"y":1},"s":[-10.82,42.076,0],"t":81,"ti":[-15.783,0.333,0],"to":[18.333,0,0]},{"o":{"x":0.821,"y":0},"i":{"x":0.667,"y":1},"s":[109.877,40.076,0],"t":92,"ti":[4.333,0,0],"to":[15.783,-0.333,0]},{"s":[83.877,40.076,0],"t":99}],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":0},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":11},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":17},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":56},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":61},{"o":{"x":0.167,"y":0},"i":{"x":0.833,"y":1},"s":[0],"t":76},{"o":{"x":0.758,"y":0.012},"i":{"x":0.833,"y":1},"s":[0],"t":81},{"o":{"x":0.631,"y":0},"i":{"x":0.839,"y":1},"s":[-27],"t":92},{"s":[0],"t":99}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ê·¸ë£¹ 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¨ì¤ 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-4.328,-27.086],[11.892,-1.9],[4.329,27.087],[-11.893,1.901]],"o":[[4.329,27.087],[-11.892,1.901],[-4.329,-27.085],[11.891,-1.9]],"v":[[18.467,-3.442],[4.773,49.044],[-9.83,1.08],[-10.903,-49.045]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[23.046,51.195],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":16,"parent":7},{"ty":4,"nm":"ê·¸ë¦¼ì","sr":1,"st":0,"op":120,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[193.5,238,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"íì 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"íì í¨ì¤ 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[117.344,25.195],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"ì  1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"ì¹  1","c":{"a":0,"k":[0,0,0],"ix":4},"r":1,"o":{"a":0,"k":25,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[61.672,197.598],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":17}],"v":"5.7.1","fr":30,"op":120,"ip":0,"fonts":{"list":[{"ascent":78.399658203125,"fClass":"","fFamily":"AppleGothic","fStyle":"Regular","fName":"AppleGothic","fPath":"","fWeight":"","origin":0}]},"chars":[{"ch":"ì¬","fFamily":"AppleGothic","size":50,"style":"Regular","w":100,"data":{"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ì¬","ix":1,"cix":2,"np":6,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì¬","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[1.5,-0.067],[1.933,-0.067],[3.633,-0.034],[5.466,0],[0,0],[0,0],[0,0],[0,0],[-9.734,-0.2],[0,0],[0,0],[0,0],[2.1,-0.033],[2.333,-0.066],[0,0],[5.133,0.034],[3.933,0.2],[0,0],[-2,0.034],[-2.067,0],[-2.867,0],[-3.667,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.1,0.033],[-2.134,0.066],[0,0],[-5.467,-0.067],[-4.534,-0.134]],"o":[[-1.134,0.133],[-1.5,0.066],[-1.934,0.066],[-3.634,0.033],[0,0],[0,0],[0,0],[0,0],[1.6,0],[0,0],[0,0],[0,0],[-2,0.134],[-2.1,0.034],[0,0],[-5.534,0],[-5.134,-0.033],[0,0],[2,-0.066],[2,-0.033],[2.133,-0.066],[2.866,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[2.133,-0.067],[2.1,-0.034],[0,0],[5.133,0],[5.466,0.066],[0,0]],"v":[[80.1,0.9],[76.15,1.2],[71,1.4],[62.65,1.55],[49,1.6],[27.8,1.6],[27.8,-8.2],[48.6,-8.4],[58.2,-8.7],[75.2,-8.4],[79.1,-8.4],[78.9,-17.8],[79.1,-27.5],[72.95,-27.25],[66.3,-27.1],[48.9,-27.1],[32.9,-27.15],[19.3,-27.5],[19.3,-21.8],[25.3,-21.95],[31.4,-22],[38.9,-22.1],[48.7,-22.1],[71.4,-21.9],[71.4,-13.8],[47.5,-13.6],[19.8,-13.8],[20,-2.6],[19.8,7],[26.15,6.85],[32.5,6.7],[49.2,6.7],[65.1,6.8],[80.1,7.1]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì¬","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[2.666,-0.1],[3.066,-0.133],[3.9,-0.033],[4.866,0],[0,0],[5.366,0.1],[5.333,0.134],[2.266,0.134],[0,0],[-6.667,0],[-4.334,0],[-5.4,0],[0,0],[-5.6,-0.066],[-4,-0.133]],"o":[[-2.334,0.134],[-2.667,0.1],[-3,0.067],[-3.9,0.034],[0,0],[-6.267,0],[-5.367,-0.1],[-5.267,-0.066],[0,0],[5.666,-0.2],[3.4,-0.066],[4.333,0],[0,0],[6.666,0],[5.6,0.067],[0,0]],"v":[[93.8,-41.3],[86.3,-40.95],[77.7,-40.6],[67.35,-40.45],[54.2,-40.4],[51,-40.4],[33.55,-40.55],[17.5,-40.9],[6.2,-41.2],[6.2,-35.1],[24.7,-35.4],[36.3,-35.5],[50.9,-35.5],[61,-35.5],[79.4,-35.4],[93.8,-35.1]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì¬","ix":3,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.8,0.2],[0.633,0.067],[0.533,0.067],[2.7,0.867],[2.4,1.267],[1.466,1.167],[1.133,1.234],[0.7,1.2],[0.2,1],[0,0],[-0.534,1.067],[2.266,0.734],[0.866,0],[0.6,-1.466],[3.933,-3.066],[4.466,-1.533],[4,-0.666],[0.466,-0.1],[0,-0.333],[-0.867,-0.8],[-0.334,-0.366],[-0.467,-0.6],[-0.467,-0.8],[-1.1,0.234],[-0.867,0.2],[-3.934,2.267],[-3,4.4],[-0.267,0.467],[-0.267,0.534],[-0.667,-0.933],[-0.6,-0.733],[-4.667,-2.266],[-2.167,-0.766],[-2,-0.466],[-1.867,-0.066],[0,0]],"o":[[-0.8,0],[-0.634,-0.066],[-3.134,-0.466],[-2.7,-0.866],[-1.8,-0.933],[-1.467,-1.166],[-1.134,-1.233],[-0.7,-1.2],[0,0],[0,-0.4],[0,-0.466],[-2.2,-0.666],[-0.4,2.134],[-1.734,4.067],[-3.934,2.934],[-4,0.934],[-0.467,0.067],[-0.467,0.1],[0,0.334],[0.266,0.2],[0.333,0.367],[0.266,0.267],[1.333,-0.266],[1.1,-0.233],[5.2,-1.4],[5.6,-3.266],[0.266,-0.333],[0.266,-0.466],[0.733,1.134],[0.666,0.934],[3.6,4.134],[2.333,1.134],[2.166,0.767],[1.4,0.334],[0,0],[0,-0.266]],"v":[[87.8,-56.3],[85.65,-56.4],[83.9,-56.6],[75.15,-58.6],[67.5,-61.8],[62.6,-64.95],[58.7,-68.55],[55.95,-72.2],[54.6,-75.5],[54.4,-75.9],[55.2,-78.1],[51.8,-79.9],[47.2,-80.9],[45.7,-75.5],[37.2,-64.8],[24.6,-58.1],[12.6,-55.7],[11.2,-55.45],[10.5,-54.8],[11.8,-53.1],[12.7,-52.25],[13.9,-50.8],[15,-49.2],[18.65,-49.95],[21.6,-50.6],[35.3,-56.1],[48.2,-67.6],[49,-68.8],[49.8,-70.3],[51.9,-67.2],[53.8,-64.7],[66.2,-55.1],[72.95,-52.25],[79.2,-50.4],[84.1,-49.8],[89,-55.6]]},"ix":2}}]}]}},{"ch":"ë¼","fFamily":"AppleGothic","size":50,"style":"Regular","w":100,"data":{"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ë¼","ix":1,"cix":2,"np":5,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ë¼","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0,0],[-0.267,0.634],[0,0.2],[1.866,0.2],[1.733,0],[0,-1.933],[0,-2.433],[-0.067,-3.2],[0,-4.466],[0,-5.866],[0.066,-6.033],[0,-3.666],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,-0.533],[0.266,-0.633],[0,-0.733],[-1.8,-0.2],[0.066,1.4],[0,1.667],[0,2.434],[0.066,3.2],[0,4.467],[-0.067,6.867],[-0.067,6.034],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[94,-43.2],[80.2,-43.1],[80.2,-76.4],[80.6,-78.15],[81,-79.4],[78.2,-80.8],[72.9,-81.1],[73,-76.1],[73,-69.95],[73.1,-61.5],[73.2,-50],[73.2,-34.5],[73,-15.15],[72.9,-0.6],[72.9,8.1],[80.3,7.7],[80.2,-36.5],[94,-36.5]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ë¼","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[1.933,-0.266],[3.366,-0.4],[4,-0.333],[1.533,-0.033],[2.2,-0.133],[1.166,-0.066],[0.133,0],[0,0],[0,0],[-1.1,0.034],[-1.5,0.034],[-2.067,0],[-2.8,0],[-2.234,0],[-1.134,-0.066],[-0.634,0],[-0.134,0],[0,0],[-0.2,7],[0,0.6],[-0.067,0.734],[0,0],[9.266,0.2],[0.866,0],[1,0.067],[0,0],[0,0],[-2.2,-0.066],[-1.534,-0.133],[0,0],[2.733,0],[3.533,0],[1.866,0],[1.933,0.067],[1.466,0.067],[1.133,0.067],[0,0],[0,0],[-1.5,0],[-1.2,0.067],[-3.067,0.167],[-2.4,0.267],[-3.334,0.4],[-3.2,0.4],[-1.234,0.167],[-1.4,0.267]],"o":[[-2.934,0.534],[-2.734,0.4],[-3.367,0.4],[-0.934,0],[-1.534,0.034],[-2.134,0.134],[-1.167,0.067],[0,0],[0,0],[0.866,0],[1.1,-0.033],[1.5,-0.033],[2.066,0],[3.6,0],[2.233,0],[1.066,0.067],[0.633,0],[0,0],[0,-1.933],[0,-0.466],[0,-0.6],[0,0],[-3.2,0],[-0.6,0],[-0.867,0],[0,0],[0,0],[3.4,0],[2.2,0.067],[0,0],[-2.2,0.134],[-2.734,0],[-1.734,0],[-1.867,0],[-1.934,-0.066],[-1.467,-0.066],[0,0],[0,0],[1.933,-0.066],[1.5,0],[3.8,-0.133],[3.066,-0.166],[3.6,-0.333],[3.333,-0.4],[1.066,-0.133],[1.233,-0.166],[0,0]],"v":[[64.3,-22.3],[57,-21.1],[47.85,-19.9],[36.8,-18.8],[33.1,-18.75],[27.5,-18.5],[22.55,-18.2],[20.6,-18.1],[17,-18.2],[17,-41.1],[19.95,-41.15],[23.85,-41.25],[29.2,-41.3],[36.5,-41.3],[45.25,-41.3],[50.3,-41.2],[52.85,-41.1],[54,-41.1],[53.8,-56],[54.1,-69.4],[54.1,-71],[54.2,-73],[33.6,-72.8],[14.9,-73.1],[12.7,-73.1],[9.9,-73.2],[9.9,-66.6],[32.7,-67.1],[41.1,-67],[46.7,-66.7],[46.7,-47.3],[39.3,-47.1],[29.9,-47.1],[24.5,-47.1],[18.8,-47.2],[13.7,-47.4],[9.8,-47.6],[10,-27.1],[9.6,-11.7],[14.75,-11.8],[18.8,-11.9],[29.1,-12.35],[37.3,-13],[47.7,-14.1],[57.5,-15.3],[60.95,-15.75],[64.9,-16.4]]},"ix":2}}]}]}},{"ch":"ì´","fFamily":"AppleGothic","size":50,"style":"Regular","w":100,"data":{"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ì´","ix":1,"cix":2,"np":6,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì´","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.133,-4.266],[5.4,0],[3.133,4.467],[0,7.534],[-2.8,4.167],[-4.934,0],[-3,-3.8],[0,-8.066]],"o":[[-2.734,5.134],[-5.2,0],[-3.067,-4.466],[0,-7.866],[2.8,-4.166],[4.733,0],[3.4,4.334],[0,7.067]],"v":[[47.2,-22.6],[35,-14.9],[22.5,-21.6],[17.9,-39.6],[22.1,-57.65],[33.7,-63.9],[45.3,-58.2],[50.4,-39.6]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì´","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.066,0.234],[1.533,0],[0,0],[-0.034,-2.9],[-0.067,-2.666],[0,-13.466],[0,0],[0,0],[0,0],[-0.2,0.834],[0,0.2]],"o":[[-1.067,-0.233],[0,0],[0.133,3.2],[0.033,2.9],[0.2,5.4],[0,0],[0,0],[0,0],[0,-0.733],[0.2,-0.833],[0,-0.733]],"v":[[83.5,-80.85],[79.6,-81.2],[76.8,-81.1],[77.05,-71.95],[77.2,-63.6],[77.5,-35.3],[77.2,9.2],[84.9,8.4],[84.5,-75.5],[84.8,-77.85],[85.1,-79.4]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì´","ix":3,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[3.933,5.2],[7.733,0],[4.2,-5.866],[0,-8.533],[-3.534,-5.533],[-8,0],[-4,6.467],[-0.767,3.534],[0,4.4]],"o":[[-4.134,-5.733],[-7.467,0],[-3.867,5.4],[0,8.6],[4.066,6.467],[8.533,0],[1.666,-2.533],[0.766,-3.533],[0,-9]],"v":[[51.7,-61.1],[33.9,-69.7],[16.4,-60.9],[10.6,-40],[15.9,-18.8],[34,-9.1],[52.8,-18.8],[56.45,-27.9],[57.6,-39.8]]},"ix":2}}]}]}},{"ch":"ë","fFamily":"AppleGothic","size":50,"style":"Regular","w":100,"data":{"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ë","ix":1,"cix":2,"np":5,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ë","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.333,0.234],[2.133,0],[0,0],[-0.134,-1.233],[0,-1.666],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0.2,-10.2],[0,-0.934],[0.066,-1.134],[0,0],[0.066,6.466],[0,3.6],[0.066,4.067],[0,0],[0,0],[-0.167,0.734],[0,0.334]],"o":[[-1.334,-0.233],[0,0],[0.133,1.134],[0.133,1.234],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,3.667],[0,0.733],[0,0.933],[0,0],[-0.067,0],[-0.067,-3.266],[0,-3.6],[0,0],[0,0],[0,-0.266],[0.166,-0.733],[0,-0.8]],"v":[[83,-80.75],[77.8,-81.1],[76.8,-81.1],[77.2,-77.55],[77.4,-73.2],[77.5,-46.9],[65.9,-46.8],[51.5,-47.1],[51.5,-40],[66,-40.2],[77.4,-40],[77.4,-18.3],[77.1,2.5],[77.1,5],[77,8.1],[84.7,7.6],[84.5,-2.1],[84.4,-12.4],[84.3,-23.9],[84.3,-44.8],[84.5,-76.1],[84.75,-77.6],[85,-79.2]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ë","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0.866,-0.066],[3.233,-0.433],[4.133,-0.466],[2.833,-0.066],[2.2,-0.066],[0.1,4],[0,3.6],[-0.034,2.4],[-0.067,3.934],[-0.034,1.3],[-0.067,1.734],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-1.8,0.1],[-1.334,0.134],[-4.667,0.6],[-2.167,0.267],[-2,0.334],[-0.967,0.167],[-1.067,0.134]],"o":[[-1.134,0.334],[-2.334,0.534],[-3.234,0.434],[-4.334,0.534],[-2.834,0.067],[-0.134,-3.4],[-0.1,-4],[0,-0.933],[0.033,-2.4],[0,-0.933],[0.033,-1.3],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[2.266,-0.133],[1.8,-0.1],[7.6,-0.6],[2.333,-0.333],[2.166,-0.266],[1.066,-0.133],[0.966,-0.166],[0,0]],"v":[[59.8,-23.4],[56.8,-22.8],[48.45,-21.35],[37.4,-20],[26.65,-19.1],[19.1,-18.9],[18.75,-30],[18.6,-41.4],[18.65,-46.4],[18.8,-55.9],[18.85,-59.25],[19,-63.8],[54.6,-63.8],[54.6,-70.3],[35.7,-69.9],[11.7,-69.8],[11.9,-40.6],[11.7,-11.6],[17.8,-11.95],[22.5,-12.3],[40.9,-14.1],[47.65,-15],[53.9,-15.9],[56.95,-16.35],[60,-16.8]]},"ix":2}}]}]}},{"ch":" ","fFamily":"AppleGothic","size":50,"style":"Regular","w":32},{"ch":"ì»¨","fFamily":"AppleGothic","size":50,"style":"Regular","w":100,"data":{"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ì»¨","ix":1,"cix":2,"np":6,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì»¨","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[1.3,-0.034],[1.6,-0.067],[2.933,0],[4.333,0],[0,0],[0,0],[-0.234,0.834],[0,0.4],[1.066,0.234],[1.533,0],[0,0],[0,0],[0,0],[-6,0.133],[-2.567,0],[-2.334,0],[-5.467,-0.134],[-4.4,-0.134]],"o":[[-1,0.133],[-1.3,0.033],[-1.534,0.066],[-2.934,0],[0,0],[0,0],[0,-0.266],[0.233,-0.833],[0,-0.733],[-1.067,-0.233],[0,0],[0,0],[0,0],[5,-0.067],[3,-0.067],[2.566,0],[5.733,0],[5.466,0.133],[0,0]],"v":[[86.2,1.5],[82.75,1.75],[78.4,1.9],[71.7,2],[60.8,2],[30,2],[30,-13.1],[30.35,-14.75],[30.7,-16.6],[29.1,-18.05],[25.2,-18.4],[22.3,-18.3],[22.6,-6.6],[22.4,8.3],[38.9,8],[47.25,7.9],[54.6,7.9],[71.4,8.1],[86.2,8.5]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì»¨","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.166,0.234],[1.6,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-0.3,1.034],[0,0.4]],"o":[[-1.167,-0.233],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,-0.533],[0.3,-1.033],[0,-0.733]],"v":[[83.45,-80.75],[79.3,-81.1],[76.8,-81.1],[76.9,-52.8],[67.8,-52.6],[57.4,-52.8],[57.4,-46.7],[68.3,-46.9],[77,-46.8],[76.9,-30.9],[76.4,-12.3],[84.4,-12.3],[84.3,-74.8],[84.75,-77.15],[85.2,-79.3]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ì»¨","ix":3,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[0,0],[0.766,-0.066],[0.4,-0.066],[0,0],[-0.7,0.067],[-0.967,0.034],[-1.4,0],[-2,0],[0,0],[0.8,-2.4],[0,-0.533],[1.666,-0.133],[2.3,-0.1],[2.333,0],[0,0],[0,0],[-0.734,-2.066],[-0.867,0],[-0.967,0.367],[-0.6,0.067],[0,0],[0,0],[0.5,-0.8],[0.466,-0.533],[3.533,-2.6],[5.066,-2.133],[2.6,-0.866],[0.466,-0.1],[0,-0.2],[0,-0.066],[-0.667,-0.333],[0,0],[-0.4,-0.266],[-0.534,-0.4],[-2.8,1.4],[-1.834,1.1],[-1.734,1.267],[-3.867,4.667],[-1.3,2.367],[-1,2.667],[-0.6,4],[-0.067,0.834],[-0.067,0.8]],"o":[[0,0],[-0.534,0],[-0.767,0.067],[0,0],[0.6,-0.066],[0.7,-0.066],[0.966,-0.033],[1.4,0],[0,0],[0,1.134],[-0.8,2.4],[-2.2,0.267],[-2.267,0.134],[-2.3,0.1],[0,0],[0,0],[0,0.934],[0.733,1.867],[0.2,0],[0.966,-0.366],[0,0],[0,0],[-0.667,0.934],[-0.5,0.8],[-2.8,3.667],[-4.2,3.2],[-1.6,0.734],[-0.134,0.067],[-0.467,0.1],[0.133,0],[0.266,0.334],[0,0],[0.333,0.2],[0.4,0.267],[0.333,0],[2,-1.066],[1.833,-1.1],[4.8,-3.533],[1.666,-2],[1.3,-2.366],[1.333,-3.933],[0.066,-0.866],[0.066,-0.833],[0,0]],"v":[[31.6,-73.8],[17.4,-73.9],[15.45,-73.8],[13.7,-73.6],[13.7,-67.7],[15.65,-67.9],[18.15,-68.05],[21.7,-68.1],[26.8,-68.1],[51.1,-67.8],[49.9,-62.5],[48.7,-58.1],[42.9,-57.5],[36.05,-57.15],[29.1,-57],[15.4,-56.7],[11,-56.8],[12.1,-52.3],[14.5,-49.5],[16.25,-50.05],[18.6,-50.7],[31.4,-51.3],[46,-52.2],[44.25,-49.6],[42.8,-47.6],[33.3,-38.2],[19.4,-30.2],[13.1,-27.8],[12.2,-27.55],[11.5,-27.1],[11.7,-27],[13.1,-26],[16.4,-23.6],[17.5,-22.9],[18.9,-21.9],[23.6,-24],[29.35,-27.25],[34.7,-30.8],[47.7,-43.1],[52.15,-49.65],[55.6,-57.2],[58.5,-69.1],[58.7,-71.65],[58.9,-74.1]]},"ix":2}}]}]}},{"ch":"í¸","fFamily":"AppleGothic","size":50,"style":"Regular","w":100,"data":{"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"í¸","ix":1,"cix":2,"np":5,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¸","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[3,-0.1],[3.4,-0.133],[4.566,-0.033],[5.866,0],[0,0],[0,0],[0,0],[-2.334,0.067],[-1.867,0],[-5,0.067],[-4.934,0],[0,0],[-15.2,-0.2],[-1.267,0],[-1.534,-0.066]],"o":[[-2.534,0.134],[-3,0.1],[-3.4,0.067],[-4.567,0.034],[0,0],[0,0],[0,0],[2.866,-0.133],[2.333,-0.066],[5.2,-0.133],[5,-0.066],[0,0],[5.933,0],[1.066,0],[1.266,0],[0,0]],"v":[[94.6,-9.2],[86.3,-8.85],[76.7,-8.5],[64.75,-8.35],[49.1,-8.3],[46.4,-8.3],[5.7,-8.7],[5.7,-1.7],[13.5,-2],[19.8,-2.1],[35.1,-2.4],[50,-2.5],[55.2,-2.5],[86.9,-2.2],[90.4,-2.2],[94.6,-2.1]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"í¸","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[4.733,-0.1],[4.966,-0.1],[4.733,-0.066],[3.4,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[5.2,-0.133],[4.8,0],[0,0],[0,0],[0,0],[-5.3,0.067],[-4.934,0],[0,0]],"o":[[-3.467,0],[-4.734,0.1],[-4.967,0.1],[-4.734,0.067],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-4.4,0.134],[-5.2,0.134],[0,0],[0,0],[0,0],[4.466,-0.133],[5.3,-0.066],[0,0],[0,0]],"v":[[80.6,-30.7],[68.3,-30.55],[53.75,-30.25],[39.2,-30],[27,-29.9],[27,-43.7],[54.9,-44],[77.5,-43.8],[77.5,-50.2],[50,-50],[27,-50.1],[27,-64],[53,-64.2],[79.7,-64],[79.7,-70.3],[65.3,-69.9],[50.3,-69.7],[19.5,-69.9],[20,-46.5],[19.7,-23.8],[34.35,-24.1],[49.7,-24.2],[80.6,-24.2]]},"ix":2}}]}]}},{"ch":"ë¡¤","fFamily":"AppleGothic","size":50,"style":"Regular","w":100,"data":{"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"ë¡¤","ix":1,"cix":2,"np":5,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ë¡¤","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[5.466,-0.134],[5.533,0],[0,0],[0,0],[-1.267,0.034],[-1.334,0],[-2.434,0],[-3.6,0],[0,0],[0.033,0.367],[0.066,0.467],[0,0],[0,0],[5.666,-0.066],[5.8,0],[4.766,0.1],[2.533,0.134],[0,0],[-4.867,0.067],[-4.4,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-5.434,0.066],[-5,0],[0,0]],"o":[[-5.134,0.2],[-5.467,0.133],[0,0],[0,0],[1.133,-0.066],[1.266,-0.033],[1.466,-0.066],[2.433,0],[0,0],[-0.067,-0.333],[-0.034,-0.366],[0,0],[0,0],[-4.667,0.134],[-5.667,0.067],[-6.267,0],[-4.767,-0.1],[0,0],[4.066,-0.133],[4.866,-0.066],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[4.533,-0.134],[5.433,-0.067],[0,0],[0,0]],"v":[[84.5,0.8],[68.6,1.3],[52.1,1.5],[28.3,1.4],[28.3,-7.7],[31.9,-7.85],[35.8,-7.9],[41.65,-8],[50.7,-8],[81.1,-8],[80.95,-9.05],[80.8,-10.3],[80.8,-16.1],[81.1,-26.1],[65.6,-25.8],[48.4,-25.7],[31.85,-25.85],[20.9,-26.2],[20.9,-20.3],[34.3,-20.6],[48.2,-20.7],[73.9,-20.6],[73.9,-13],[49.3,-12.7],[21.3,-12.9],[21.5,-3.1],[21.2,6.8],[36.15,6.5],[51.8,6.4],[84.5,6.7]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"ë¡¤","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,0],[1.566,-0.066],[1.133,-0.066],[2.866,-0.1],[2.266,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[4.933,-0.066],[6.266,0],[5.066,0.134],[4,0.134],[0,0],[0,0],[0,0],[0,0],[1.533,0],[2.2,0.067],[1.7,0],[1.266,0.067],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-2.234,0.034],[-1.8,0.067],[-4.934,0.067],[-4.867,0],[-3.667,-0.033],[-3.134,-0.033],[-2.667,-0.066],[-2.334,0],[-1.2,0],[-0.067,0]],"o":[[-1.934,0.134],[-1.567,0.067],[-3.6,0.134],[-2.867,0.1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[-4.667,0.2],[-4.934,0.067],[-5.4,0],[-5.067,-0.133],[0,0],[0,0],[0,0],[0,0],[-0.934,0],[-1.534,0],[-2.2,-0.066],[-1.7,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[2.666,-0.133],[2.233,-0.033],[5,-0.133],[4.933,-0.066],[4.4,0],[3.666,0.034],[3.133,0.034],[2.666,0.067],[2.4,0.067],[1.2,0],[0,0]],"v":[[94.4,-37.7],[89.15,-37.4],[85.1,-37.2],[75.4,-36.85],[67.7,-36.7],[53.3,-36.7],[53.3,-46.9],[67,-46.9],[81.3,-46.6],[81.3,-52.3],[50.2,-51.7],[26.8,-51.7],[26.8,-60.4],[55,-60.7],[79.9,-60.6],[79.7,-69.2],[79.9,-78.6],[65.5,-78.2],[48.7,-78.1],[33,-78.3],[19.4,-78.7],[19.4,-72.9],[72.7,-73.4],[72.7,-65.5],[39.4,-65],[35.7,-65],[30.1,-65.1],[24.25,-65.2],[19.8,-65.3],[20.1,-55.7],[19.8,-46.6],[46.6,-46.9],[46.6,-36.7],[33.4,-36.7],[5.6,-37.2],[5.6,-31.1],[12.95,-31.35],[19,-31.5],[33.9,-31.8],[48.6,-31.9],[60.7,-31.85],[70.9,-31.75],[79.6,-31.6],[87.1,-31.5],[92.5,-31.4],[94.4,-31.4]]},"ix":2}}]}]}}],"assets":[]}
\ No newline at end of file
Index: lib/shared/animations/robot_typing.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/animations/robot_typing.json b/lib/shared/animations/robot_typing.json
new file mode 100644
--- /dev/null	
+++ b/lib/shared/animations/robot_typing.json	
@@ -0,0 +1,1 @@
+{"nm":"Comp 1","ddd":0,"h":1080,"w":1080,"meta":{"g":"@lottiefiles/toolkit-js 0.33.2"},"layers":[{"ty":0,"nm":"Pre-comp 1","sr":0.9,"st":0,"op":81,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[540,540,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[568,540,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"w":1080,"h":1080,"refId":"comp_0","ind":1}],"v":"5.7.0","fr":30,"op":81,"ip":0,"assets":[{"nm":"","id":"comp_0","layers":[{"ty":4,"nm":"1 Outlines","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[395.302,305.887,0],"ix":1},"s":{"a":0,"k":[215,215,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[916.4,505.156,0],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0],"t":0},{"s":[360],"t":90}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":4,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.702,-1.431],[0.445,-1.516],[0.064,-0.167],[3.248,1.25],[-1.251,3.248],[-0.077,0.157],[-1.473,0.586],[-1.489,-0.574]],"o":[[0.699,1.422],[-0.047,0.163],[-1.25,3.248],[-3.249,-1.251],[0.064,-0.167],[0.684,-1.418],[1.479,-0.59],[1.488,0.573]],"v":[[5.703,-2.785],[6.096,1.771],[5.928,2.268],[-2.23,5.891],[-5.853,-2.268],[-5.642,-2.756],[-2.297,-5.865],[2.306,-5.891]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 2","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.152,0.445],[0.547,-0.243],[0.215,-0.559],[0,0],[0,0],[0.585,-0.074],[0,0],[0,0],[1.129,-0.501],[0.216,-0.559],[-0.242,-0.546],[0,0],[0,0],[0.364,-0.465],[0,0],[0,0],[0.572,-0.895],[0.054,-0.138],[-0.242,-0.547],[-0.557,-0.215],[0,0],[0,0],[-0.072,-0.586],[0,0],[0,0],[-0.501,-1.129],[-0.559,-0.215],[-0.546,0.243],[0,0],[0,0],[-0.465,-0.363],[0,0],[0,0],[-1.152,-0.444],[-0.547,0.243],[-0.215,0.558],[0,0],[0,0],[-0.585,0.072],[0,0],[0,0],[-1.129,0.501],[-0.216,0.558],[0.242,0.547],[0,0],[0,0],[-0.364,0.466],[0,0],[0,0],[-0.444,1.153],[-0.025,0.145],[0,0],[0.171,0.387],[0.557,0.214],[0,0],[0,0],[0.072,0.585],[0,0],[0,0],[-0.214,0.559],[0.243,0.546],[0.558,0.215],[0.547,-0.243],[0,0],[0,0],[0.466,0.364],[0,0],[0,0]],"o":[[-0.558,-0.214],[-0.547,0.243],[0,0],[0,0],[-0.589,-0.043],[0,0],[0,0],[-0.501,-1.129],[-0.547,0.243],[-0.215,0.557],[0,0],[0,0],[-0.446,0.386],[0,0],[0,0],[-0.99,-0.381],[-0.08,0.126],[-0.215,0.559],[0.243,0.547],[0,0],[0,0],[-0.042,0.589],[0,0],[0,0],[-1.128,0.502],[0.243,0.546],[0.558,0.215],[0,0],[0,0],[0.386,0.446],[0,0],[0,0],[-0.444,1.153],[0.558,0.215],[0.547,-0.243],[0,0],[0,0],[0.589,0.043],[0,0],[0,0],[0.501,1.129],[0.547,-0.243],[0.214,-0.559],[0,0],[0,0],[0.446,-0.386],[0,0],[0,0],[1.153,0.444],[0.052,-0.135],[0,0],[0.059,-0.415],[-0.243,-0.547],[0,0],[0,0],[0.042,-0.589],[0,0],[0,0],[0.545,-0.242],[0.215,-0.56],[-0.243,-0.547],[-0.558,-0.214],[0,0],[0,0],[-0.386,-0.446],[0,0],[0,0],[0.444,-1.153]],"v":[[4.5,-11.593],[2.786,-11.549],[1.604,-10.306],[1.145,-9.11],[0.693,-9.142],[-1.077,-9.097],[-1.526,-9.042],[-2.047,-10.215],[-5.004,-11.353],[-6.185,-10.11],[-6.142,-8.397],[-5.621,-7.224],[-5.964,-6.928],[-7.185,-5.645],[-7.462,-5.288],[-8.66,-5.749],[-11.353,-4.863],[-11.555,-4.464],[-11.512,-2.75],[-10.27,-1.568],[-9.072,-1.107],[-9.105,-0.656],[-9.06,1.114],[-9.004,1.564],[-10.177,2.084],[-11.315,5.041],[-10.073,6.222],[-8.359,6.179],[-7.186,5.658],[-6.891,6.001],[-5.608,7.221],[-5.25,7.499],[-5.711,8.696],[-4.426,11.592],[-2.711,11.548],[-1.53,10.306],[-1.069,9.11],[-0.617,9.142],[1.151,9.097],[1.602,9.041],[2.122,10.214],[5.078,11.353],[6.26,10.11],[6.217,8.396],[5.695,7.223],[6.039,6.927],[7.259,5.644],[7.538,5.287],[8.734,5.748],[11.629,4.462],[11.746,4.041],[11.758,3.972],[11.586,2.748],[10.345,1.568],[9.146,1.107],[9.181,0.655],[9.135,-1.115],[9.079,-1.564],[10.253,-2.086],[11.431,-3.328],[11.389,-5.042],[10.147,-6.223],[8.434,-6.18],[7.262,-5.659],[6.965,-6.002],[5.681,-7.222],[5.326,-7.501],[5.785,-8.697]]},"ix":2}},{"ty":"mm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Merge","nm":"Merge Paths 1","mm":1},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2235,0.2235,0.3059],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[395.265,305.887],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.775,-1.607],[0,0],[0.035,-0.091],[-1.781,-0.685],[-0.686,1.781],[-0.026,0.087],[1.668,0.643]],"o":[[0,0],[-0.041,0.084],[-0.686,1.781],[1.782,0.687],[0.035,-0.091],[0.503,-1.717],[-1.669,-0.641]],"v":[[-3.068,-1.533],[-3.07,-1.529],[-3.185,-1.265],[-1.198,3.208],[3.276,1.222],[3.367,0.953],[1.289,-3.253]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2235,0.2235,0.3059],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[395.257,305.909],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":1},{"ty":4,"nm":"2 Outlines","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[244.911,154.978,0],"ix":1},"s":{"a":0,"k":[215,215,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[179.06,165.702,0],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0],"t":0},{"s":[-360],"t":90}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 1","ix":1,"cix":2,"np":4,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[1.658,-1.791],[2.412,-0.198],[0.273,0],[0,5.332],[-5.333,0],[-0.265,-0.023],[-1.649,-1.782],[0,-2.443]],"o":[[-1.648,1.782],[-0.259,0.023],[-5.333,0],[0,-5.332],[0.274,0],[2.403,0.198],[1.658,1.792],[0,2.443]],"v":[[7.099,6.566],[0.803,9.636],[0,9.67],[-9.671,0.001],[0,-9.67],[0.813,-9.636],[7.099,-6.567],[9.67,0.001]]},"ix":2}},{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 2","ix":2,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,1.892],[0.648,0.648],[0.916,0],[0,0],[0,0],[0.426,0.797],[0,0],[0,0],[1.337,1.337],[0.917,0],[0.647,-0.647],[0,0],[0,0],[0.865,0.263],[0,0],[0,0],[1.592,0.323],[0.228,0],[0.648,-0.649],[0,-0.915],[0,0],[0,0],[0.797,-0.426],[0,0],[0,0],[1.338,-1.337],[0,-0.917],[-0.648,-0.648],[0,0],[0,0],[0.263,-0.866],[0,0],[0,0],[0,-1.892],[-0.649,-0.649],[-0.916,0],[0,0],[0,0],[-0.425,-0.797],[0,0],[0,0],[-1.337,-1.338],[-0.917,0],[-0.648,0.648],[0,0],[0,0],[-0.866,-0.264],[0,0],[0,0],[-1.892,0],[-0.22,0.043],[0,0],[-0.458,0.458],[0,0.916],[0,0],[0,0],[-0.797,0.426],[0,0],[0,0],[-0.918,0],[-0.647,0.647],[0,0.917],[0.648,0.648],[0,0],[0,0],[-0.263,0.866],[0,0],[0,0]],"o":[[0,-0.916],[-0.649,-0.649],[0,0],[0,0],[-0.263,-0.866],[0,0],[0,0],[1.338,-1.338],[-0.647,-0.648],[-0.917,0],[0,0],[0,0],[-0.796,-0.426],[0,0],[0,0],[0,-1.625],[-0.225,-0.046],[-0.917,0],[-0.649,0.648],[0,0],[0,0],[-0.866,0.263],[0,0],[0,0],[-1.338,-1.337],[-0.648,0.648],[0,0.917],[0,0],[0,0],[-0.425,0.797],[0,0],[0,0],[-1.892,0],[0,0.916],[0.648,0.648],[0,0],[0,0],[0.263,0.866],[0,0],[0,0],[-1.338,1.337],[0.648,0.648],[0.917,0],[0,0],[0,0],[0.797,0.426],[0,0],[0,0],[0,1.892],[0.222,0],[0,0],[0.626,-0.144],[0.648,-0.649],[0,0],[0,0],[0.865,-0.264],[0,0],[0,0],[0.645,0.646],[0.918,0],[0.648,-0.648],[0,-0.916],[0,0],[0,0],[0.426,-0.797],[0,0],[0,0],[1.892,0]],"v":[[19.029,0.001],[18.023,-2.425],[15.597,-3.432],[13.632,-3.432],[13.43,-4.094],[12.392,-6.601],[12.065,-7.213],[13.454,-8.602],[13.455,-13.455],[11.029,-14.459],[8.603,-13.455],[7.212,-12.064],[6.6,-12.391],[4.095,-13.43],[3.431,-13.632],[3.431,-15.597],[0.683,-18.959],[0,-19.028],[-2.426,-18.023],[-3.432,-15.597],[-3.432,-13.632],[-4.095,-13.43],[-6.601,-12.391],[-7.213,-12.064],[-8.603,-13.455],[-13.456,-13.455],[-14.461,-11.028],[-13.456,-8.602],[-12.066,-7.213],[-12.393,-6.601],[-13.431,-4.094],[-13.633,-3.432],[-15.597,-3.432],[-19.029,0.001],[-18.023,2.426],[-15.597,3.432],[-13.633,3.432],[-13.431,4.094],[-12.393,6.601],[-12.066,7.213],[-13.455,8.604],[-13.456,13.455],[-11.029,14.46],[-8.603,13.455],[-7.213,12.066],[-6.601,12.393],[-4.095,13.432],[-3.432,13.632],[-3.432,15.597],[0,19.028],[0.666,18.963],[0.771,18.941],[2.426,18.023],[3.431,15.597],[3.431,13.632],[4.095,13.432],[6.6,12.393],[7.212,12.066],[8.603,13.456],[11.029,14.459],[13.455,13.455],[14.459,11.028],[13.455,8.602],[12.065,7.213],[12.392,6.601],[13.43,4.094],[13.632,3.432],[15.597,3.432]]},"ix":2}},{"ty":"mm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Merge","nm":"Merge Paths 1","mm":1},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2235,0.2235,0.3059],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[244.911,154.978],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Group 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[2.724,0.224],[0,0],[0.15,0],[0,-2.924],[-2.924,0],[-0.137,0.013],[0,2.739]],"o":[[0,0],[-0.142,-0.013],[-2.924,0],[0,2.924],[0.15,0],[2.733,-0.224],[0,-2.739]],"v":[[0.445,-5.284],[0.44,-5.284],[0,-5.303],[-5.303,0],[0,5.303],[0.433,5.284],[5.303,0]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.2235,0.2235,0.3059],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[244.911,154.978],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2},{"ty":4,"nm":"ÃÂÃÂÃÂÃÂÃÂÃÂºÃÂÃÂ° 2","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-221.715,95.051,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[180.285,91.051,0],"t":0,"ti":[-0.167,0.333,0],"to":[-0.5,2.333,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[177.285,105.051,0],"t":28,"ti":[-0.667,4,0],"to":[0.167,-0.333,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[181.285,89.051,0],"t":49,"ti":[0.167,-0.333,0],"to":[0.667,-4,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[181.285,81.051,0],"t":67,"ti":[0.167,-1.667,0],"to":[-0.167,0.333,0]},{"s":[180.285,91.051,0],"t":89}],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[190],"t":7},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1.019},"s":[191],"t":28},{"o":{"x":0.333,"y":0.034},"i":{"x":0.667,"y":1},"s":[198.741],"t":45},{"s":[190],"t":79}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":1,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.87,-6.025],[-8,-27],[-10.721,6.14],[-0.455,5.253],[-4,11],[8.822,3.516]],"o":[[-59,73],[4.497,15.177],[8.352,-4.783],[9,-104],[1.863,-5.123],[-10.121,-4.034]],"v":[[-242.5,83.5],[-273,271],[-238.265,285.283],[-229,261],[-201,97],[-210.355,75.636]]},"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":3}},{"ty":"gf","bm":0,"hd":false,"mn":"ADBE Vector Graphic - G-Fill","nm":"Gradient Fill 1","e":{"a":0,"k":[-283.121,160.699],"ix":6},"g":{"p":3,"k":{"a":0,"k":[0,0.00392156862745098,0.3568627450980392,0.8392156862745098,0.655,0.00392156862745098,0.3568627450980392,0.8392156862745098,1,0.00392156862745098,0.3568627450980392,0.8392156862745098],"ix":9}},"t":1,"a":{"a":0,"k":0},"h":{"a":0,"k":0},"s":{"a":0,"k":[-235.688,173.874],"ix":5},"r":1,"o":{"a":0,"k":100,"ix":10}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":3,"parent":9},{"ty":4,"nm":"ÃÂÃÂÃÂÃÂÃÂÃÂºÃÂÃÂ° 1","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-223.715,93.051,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-223.715,93.051,0],"t":3,"ti":[0,0,0],"to":[0,4.333,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-223.715,119.051,0],"t":31,"ti":[0,4.333,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-223.715,93.051,0],"t":52,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-223.715,76.051,0],"t":70,"ti":[0,0,0],"to":[0,0,0]},{"s":[-223.715,93.051,0],"t":89}],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.667,"y":1},"s":[0],"t":3},{"o":{"x":0.296,"y":0},"i":{"x":0.665,"y":0.832},"s":[-11],"t":40},{"o":{"x":0.428,"y":-0.7},"i":{"x":0.811,"y":1.256},"s":[3.659],"t":67},{"s":[0],"t":89}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":1,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[4.87,-6.025],[-8,-27],[-10.721,6.14],[-0.455,5.253],[-4,11],[8.822,3.516]],"o":[[-59,73],[4.497,15.177],[8.352,-4.783],[9,-104],[1.863,-5.123],[-10.121,-4.034]],"v":[[-242.5,83.5],[-273,271],[-238.265,285.283],[-229,261],[-201,97],[-210.355,75.636]]},"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":3}},{"ty":"gf","bm":0,"hd":false,"mn":"ADBE Vector Graphic - G-Fill","nm":"Gradient Fill 1","e":{"a":0,"k":[-227.438,178.621],"ix":6},"g":{"p":3,"k":{"a":0,"k":[0,0.00392156862745098,0.3568627450980392,0.8392156862745098,0.655,0.00392156862745098,0.3568627450980392,0.8392156862745098,1,0.00392156862745098,0.3568627450980392,0.8392156862745098],"ix":9}},"t":1,"a":{"a":0,"k":0},"h":{"a":0,"k":0},"s":{"a":0,"k":[-271.536,175.151],"ix":5},"r":1,"o":{"a":0,"k":100,"ix":10}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":4,"parent":9},{"ty":4,"nm":"ÃÂÃÂ³ÃÂÃÂ»ÃÂÃÂ°ÃÂÃÂ· 2","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-158,-120.5,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.667,"y":1},"s":[100,100,100],"t":36},{"o":{"x":0.333,"y":0},"i":{"x":0.833,"y":0.833},"s":[100,0,100],"t":41},{"s":[100,100,100],"t":46}],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[120,-120.5,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Rectangle 1","ix":1,"cix":2,"np":3,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"Rectangle Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":20,"ix":4},"s":{"a":0,"k":[36,93],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-158,-120.5],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":5,"parent":7},{"ty":4,"nm":"ÃÂÃÂ³ÃÂÃÂ»ÃÂÃÂ°ÃÂÃÂ· 1","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-158,-120.5,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.667,"y":1},"s":[100,100,100],"t":36},{"o":{"x":0.333,"y":0},"i":{"x":0.833,"y":0.833},"s":[100,0,100],"t":41},{"s":[100,100,100],"t":46}],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[-158,-120.5,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Rectangle 1","ix":1,"cix":2,"np":3,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"Rectangle Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":20,"ix":4},"s":{"a":0,"k":[36,93],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-158,-120.5],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":6,"parent":7},{"ty":4,"nm":"ÃÂÃÂÃÂÃÂºÃÂÃÂÃÂÃÂ°ÃÂÃÂ½","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-16.492,-119,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-16.492,-119,0],"t":7,"ti":[-6.794,3.569,0],"to":[6.794,-3.569,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[24.269,-140.413,0],"t":45,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[24.269,-140.413,0],"t":53,"ti":[6.794,-3.569,0],"to":[-6.794,3.569,0]},{"s":[-16.492,-119,0],"t":79}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 2","ix":1,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.667,"y":1},"s":[{"c":true,"i":[[0,0.5],[80.5,-54],[0,0],[-3,82.5],[43.5,1]],"o":[[-1.383,5.531],[0,0],[0,0],[1.508,-41.476],[-43.5,-1]],"v":[[9,-199.75],[-65,-40.5],[158,-40.5],[210,-121],[152.25,-199.5]]}],"t":7},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[{"c":true,"i":[[0,0.5],[80.5,-54],[0,0],[-3,82.5],[43.5,1]],"o":[[-1.383,5.531],[0,0],[0,0],[1.508,-41.476],[-43.5,-1]],"v":[[31.083,-199.182],[-42.917,-39.932],[158,-40.5],[210,-121],[152.25,-199.5]]}],"t":45},{"o":{"x":0.333,"y":0},"i":{"x":0.833,"y":0.833},"s":[{"c":true,"i":[[0,0.5],[80.5,-54],[0,0],[-3,82.5],[43.5,1]],"o":[[-1.383,5.531],[0,0],[0,0],[1.508,-41.476],[-43.5,-1]],"v":[[31.083,-199.182],[-42.917,-39.932],[158,-40.5],[210,-121],[152.25,-199.5]]}],"t":53},{"s":[{"c":true,"i":[[0,0.5],[80.5,-54],[0,0],[-3,82.5],[43.5,1]],"o":[[-1.383,5.531],[0,0],[0,0],[1.508,-41.476],[-43.5,-1]],"v":[[9,-199.75],[-65,-40.5],[158,-40.5],[210,-121],[152.25,-199.5]]}],"t":79}],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.1333,0.1333,0.1333],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Rectangle 1","ix":2,"cix":2,"np":3,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"Rectangle Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":64,"ix":4},"s":{"a":0,"k":[441,162],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.1333,0.1333,0.1333],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[102.759,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-16.5,-119],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":7,"parent":8},{"ty":4,"nm":"ÃÂÃÂ³ÃÂÃÂ¾ÃÂÃÂ»ÃÂÃÂ¾ÃÂÃÂ²ÃÂÃÂ°","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-19.719,9.59,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-19.719,9.59,0],"t":7,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[-19.719,45.59,0],"t":47,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-19.719,45.59,0],"t":53,"ti":[0,0,0],"to":[0,0,0]},{"s":[-19.719,9.59,0],"t":79}],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":7},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-9],"t":28},{"s":[0],"t":79}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":3,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[42.021,64.812],[78,-156],[-182,-20],[0,0],[-35.843,52.428]],"o":[[-118,-182],[-28.425,56.851],[34.319,3.771],[0,0],[26.995,-39.487]],"v":[[242,-226],[-284,-218],[-178,14],[140,16],[250.406,-40.457]]},"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.8549,0.8784,0.902],"ix":3}},{"ty":"gf","bm":0,"hd":false,"mn":"ADBE Vector Graphic - G-Fill","nm":"Gradient Fill 1","e":{"a":0,"k":[198,-58],"ix":6},"g":{"p":3,"k":{"a":0,"k":[0,0.8549019607843137,0.8784313725490196,0.9019607843137255,0.655,0.8549019607843137,0.8784313725490196,0.9019607843137255,1,0.8549019607843137,0.8784313725490196,0.9019607843137255],"ix":9}},"t":1,"a":{"a":0,"k":0},"h":{"a":0,"k":0},"s":{"a":0,"k":[-296,-60],"ix":5},"r":1,"o":{"a":0,"k":100,"ix":10}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":8,"parent":9},{"ty":4,"nm":"ÃÂÃÂÃÂÃÂµÃÂÃÂ»ÃÂÃÂ¾","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-20.704,175.322,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[519.296,715.322,0],"t":0,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[519.296,635.322,0],"t":45,"ti":[0,0,0],"to":[0,0,0]},{"s":[519.296,715.322,0],"t":90}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[227,65],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"c":{"a":0,"k":[0.8549,0.8784,0.902],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.7686,0.7686],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-23.5,68.5],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":2,"cix":2,"np":3,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[51,0],[15.678,-82.948],[-49.731,-49.359],[-13.15,-0.292],[-37.729,38.101],[10.258,44.845]],"o":[[-12.374,0],[-8.179,43.273],[38.555,38.266],[13.544,0.301],[45.84,-46.291],[-15.181,-66.366]],"v":[[-27,31],[-179.678,102.948],[-132.269,283.359],[-25,320],[91.483,284.497],[137.742,101.155]]},"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.8549,0.8784,0.902],"ix":3}},{"ty":"gf","bm":0,"hd":false,"mn":"ADBE Vector Graphic - G-Fill","nm":"Gradient Fill 1","e":{"a":0,"k":[86,146],"ix":6},"g":{"p":3,"k":{"a":0,"k":[0,0.8549019607843137,0.8784313725490196,0.9019607843137255,0.655,0.8549019607843137,0.8784313725490196,0.9019607843137255,1,0.8549019607843137,0.8784313725490196,0.9019607843137255],"ix":9}},"t":1,"a":{"a":0,"k":0},"h":{"a":0,"k":0},"s":{"a":0,"k":[-166,148],"ix":5},"r":1,"o":{"a":0,"k":100,"ix":10}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":9},{"ty":4,"nm":"ÃÂÃÂÃÂÃÂÃÂÃÂ¾ 2","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-305.5,-118,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[263.5,-118,0],"t":7,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[247.381,-117.593,0],"t":49,"ti":[0,0,0],"to":[0,0,0]},{"s":[263.5,-118,0],"t":79}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[111,138],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-305.5,-118],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":10,"parent":8},{"ty":4,"nm":"ÃÂÃÂÃÂÃÂÃÂÃÂ¾ 1","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-305.5,-118,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-305.5,-118,0],"t":7,"ti":[0,0,0],"to":[0,0,0]},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[-321.619,-117.593,0],"t":49,"ti":[0,0,0],"to":[0,0,0]},{"s":[-305.5,-118,0],"t":79}],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[111,138],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.0039,0.3569,0.8392],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-305.5,-118],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":11,"parent":8},{"ty":4,"nm":"ÃÂÃÂÃÂÃÂµÃÂÃÂ½ÃÂÃÂ","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-17.5,380.5,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[100,100,100],"t":0},{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[108,108,100],"t":45},{"s":[100,100,100],"t":90}],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[523.5,919.5,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":60,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[249,59],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":0,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fill 1","c":{"a":0,"k":[0.7686,0.7686,0.7686],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-17.5,380.5],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":12}]}]}
\ No newline at end of file
Index: lib/shared/localization/locales.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/localization/locales.dart b/lib/shared/localization/locales.dart
new file mode 100644
--- /dev/null	
+++ b/lib/shared/localization/locales.dart	
@@ -0,0 +1,2487 @@
+import 'package:flutter_localization/flutter_localization.dart';
+
+mixin LocaleData {
+  static const String appTitle = 'appTitle';
+  static const String settings = 'settings';
+  static const String viewProfile = 'viewProfile';
+  static const String profileInformation = 'profileInformation';
+  static const String fullName = 'fullName';
+  static const String phoneNumber = 'phoneNumber';
+  static const String address = 'address';
+  static const String email = 'email';
+  static const String userId = 'userId';
+  static const String edit = 'edit';
+  static const String save = 'save';
+  static const String close = 'close';
+  static const String appearance = 'appearance';
+  static const String language = 'language';
+  static const String languageEnglish = 'languageEnglish';
+  static const String languageBengali = 'languageBengali';
+  static const String currency = 'currency';
+  static const String currencyBDT = 'currencyBDT';
+  static const String currencyAUD = 'currencyAUD';
+  static const String textSize = 'textSize';
+  static const String management = 'management';
+  static const String security = 'security';
+  static const String setPin = 'setPin';
+  static const String enterPin = 'enterPin';
+  static const String confirmPin = 'confirmPin';
+  static const String pinSaved = 'pinSaved';
+  static const String invalidPin = 'invalidPin';
+  static const String pinsDoNotMatch = 'pinsDoNotMatch';
+  static const String cancel = 'cancel';
+  static const String helpSupport = 'helpSupport';
+  static const String helpSupportComingSoon = 'helpSupportComingSoon';
+  static const String logOut = 'logOut';
+  static const String signedOut = 'signedOut';
+  static const String errorLoadingData = 'errorLoadingData';
+  static const String errorSavingData = 'errorSavingData';
+  static const String user = 'user';
+  static const String notAvailable = 'notAvailable';
+  // Previous Learn page keys
+  static const String financialBasics = 'financialBasics';
+  static const String askFinneyAI = 'askFinneyAI';
+  static const String moneyManagement = 'moneyManagement';
+  static const String moneyManagementSubtitle = 'moneyManagementSubtitle';
+  static const String savingBudgeting = 'savingBudgeting';
+  static const String savingBudgetingSubtitle = 'savingBudgetingSubtitle';
+  static const String investingFundamentals = 'investingFundamentals';
+  static const String investingFundamentalsSubtitle =
+      'investingFundamentalsSubtitle';
+  static const String financialSafety = 'financialSafety';
+  static const String financialSafetySubtitle = 'financialSafetySubtitle';
+  static const String keyPoints = 'keyPoints';
+  static const String learnMore = 'learnMore';
+  static const String backToTopics = 'backToTopics';
+  static const String aiAssistant = 'aiAssistant';
+  static const String moneyManagementPoint1 = 'moneyManagementPoint1';
+  static const String moneyManagementPoint2 = 'moneyManagementPoint2';
+  static const String moneyManagementPoint3 = 'moneyManagementPoint3';
+  static const String moneyManagementPoint4 = 'moneyManagementPoint4';
+  static const String savingBudgetingPoint1 = 'savingBudgetingPoint1';
+  static const String savingBudgetingPoint2 = 'savingBudgetingPoint2';
+  static const String savingBudgetingPoint3 = 'savingBudgetingPoint3';
+  static const String savingBudgetingPoint4 = 'savingBudgetingPoint4';
+  static const String investingFundamentalsPoint1 =
+      'investingFundamentalsPoint1';
+  static const String investingFundamentalsPoint2 =
+      'investingFundamentalsPoint2';
+  static const String investingFundamentalsPoint3 =
+      'investingFundamentalsPoint3';
+  static const String investingFundamentalsPoint4 =
+      'investingFundamentalsPoint4';
+  static const String financialSafetyPoint1 = 'financialSafetyPoint1';
+  static const String financialSafetyPoint2 = 'financialSafetyPoint2';
+  static const String financialSafetyPoint3 = 'financialSafetyPoint3';
+  static const String financialSafetyPoint4 = 'financialSafetyPoint4';
+  static const String resourceMoneyManagementVideo =
+      'resourceMoneyManagementVideo';
+  static const String resourceMoneyManagementArticle1 =
+      'resourceMoneyManagementArticle1';
+  static const String resourceMoneyManagementArticle2 =
+      'resourceMoneyManagementArticle2';
+  static const String resourceSavingVideo = 'resourceSavingVideo';
+  static const String resourceSavingArticle = 'resourceSavingArticle';
+  static const String resourceInvestingVideo = 'resourceInvestingVideo';
+  static const String resourceInvestingArticle = 'resourceInvestingArticle';
+  static const String resourceSafetyVideo1 = 'resourceSafetyVideo1';
+  static const String resourceSafetyVideo2 = 'resourceSafetyVideo2';
+  static const String resourceSafetyArticle1 = 'resourceSafetyArticle1';
+  static const String resourceSafetyArticle2 = 'resourceSafetyArticle2';
+  // Chatbot page keys
+  static const String chatbotTitle = 'chatbotTitle';
+  static const String chatbotHelp = 'chatbotHelp';
+  static const String chatbotClearChat = 'chatbotClearChat';
+  static const String welcomeMessage = 'welcomeMessage';
+  static const String suggestedQuestion1 = 'suggestedQuestion1';
+  static const String suggestedQuestion2 = 'suggestedQuestion2';
+  static const String suggestedQuestion3 = 'suggestedQuestion3';
+  static const String chatbotsuggestedQuestion1 = 'chatbotsuggestedQuestion1';
+  static const String chatbotsuggestedQuestion2 = 'chatbotsuggestedQuestion2';
+  static const String chatbotsuggestedQuestion3 = 'chatbotsuggestedQuestion3';
+  // New Learn page keys
+  static const String learnReset = 'learnReset';
+  static const String learnNoResults = 'learnNoResults';
+
+  static const String financialLearning = 'financialLearning';
+  static const String beginner = 'beginner';
+  static const String beginnerSubtitle = 'beginnerSubtitle';
+  static const String intermediate = 'intermediate';
+  static const String intermediateSubtitle = 'intermediateSubtitle';
+  static const String advanced = 'advanced';
+  static const String advancedSubtitle = 'advancedSubtitle';
+  static const String testYourKnowledge = 'testYourKnowledge';
+  static const String testYourKnowledgeSubtitle = 'testYourKnowledgeSubtitle';
+  static const String saveHabitTitle = 'saveHabitTitle';
+  static const String saveHabitDesc = 'saveHabitDesc';
+  static const String saveWhyTitle = 'saveWhyTitle';
+  static const String saveWhyDesc = 'saveWhyDesc';
+  static const String budgetSmartTitle = 'budgetSmartTitle';
+  static const String budgetSmartDesc = 'budgetSmartDesc';
+  static const String budgetSelfTitle = 'budgetSelfTitle';
+  static const String budgetSelfDesc = 'budgetSelfDesc';
+
+  static const String spendManageTitle = 'spendManageTitle';
+  static const String spendManageDesc = 'spendManageDesc';
+  static const String spendLandTitle = 'spendLandTitle';
+  static const String spendLandDesc = 'spendLandDesc';
+  static const String smartSpendingTips = 'smartSpendingTips';
+
+  static const String coachQ1 = 'coachQ1';
+  static const String coachQ2 = 'coachQ2';
+  static const String coachQ3 = 'coachQ3';
+  static const String coachQ4 = 'coachQ4';
+  static const String coachQ5 = 'coachQ5';
+  static const String coachQ6 = 'coachQ6';
+  static const String coachQ7 = 'coachQ7';
+  static const String coachQ8 = 'coachQ8';
+  static const String coachQ9 = 'coachQ9';
+  static const String coachQ10 = 'coachQ10';
+  static const String coachQ11 = 'coachQ11';
+
+  static const String coachOptBoth = 'coachOptBoth';
+  static const String coachOptSaveBig = 'coachOptSaveBig';
+  static const String coachOptTreats = 'coachOptTreats';
+
+  static const String coachPraiseHabit = 'coachPraiseHabit';
+  static const String coachRestart = 'coachRestart';
+
+  static const String coachSavingSmall = 'coachSavingSmall';
+  static const String coachOnYourWay = 'coachOnYourWay';
+  static const String coachPraiseGreat = 'coachPraiseGreat';
+  static const String never = 'never';
+  static const String sometimes = 'sometimes';
+  static const String no = 'no';
+  static const String maybe = 'maybe';
+  static const String coachAdviceTitle = 'coachAdviceTitle';
+
+  static const String tourBudgetTitle = 'tourBudgetTitle';
+  static const String tourBudgetDesc = 'tourBudgetDesc';
+
+  static const String tourChatbotTitle = 'tourChatbotTitle';
+  static const String tourChatbotDesc = 'tourChatbotDesc';
+
+  static const String tourDashboardTitle = 'tourDashboardTitle';
+  static const String tourDashboardDesc = 'tourDashboardDesc';
+
+  static const String tourExpenseTitle = 'tourExpenseTitle';
+  static const String tourExpenseDesc = 'tourExpenseDesc';
+
+  static const String tourLearnHubDesc = 'tourLearnHubDesc';
+  static const String tourLearnhubTitle = 'tourLearnhubTitle';
+  static const String tourLearnhubDesc = 'tourLearnhubDesc';
+
+  static const String tourReportDesc = 'tourReportDesc';
+  static const String tourReportTitle = 'tourReportTitle';
+
+  static const String tourSavingsTitle = 'tourSavingsTitle';
+  static const String tourSavingsDesc = 'tourSavingsDesc';
+
+  static const String tourSettingsTitle = 'tourSettingsTitle';
+  static const String tourSettingsDesc = 'tourSettingsDesc';
+
+  static const String tourMarkDone = 'tourMarkDone';
+
+  static const String quizTitle = 'quizTitle';
+  static const String generalQuizTitle = 'generalQuizTitle';
+  static const String quizScore = 'quizScore';
+  static const String quizResultScore = 'quizResultScore';
+  static const String quizBack = 'quizBack';
+  static const String quizReview = 'quizReview';
+  static const String quizClearConfirm = 'quizClearConfirm';
+  static const String quizNoResults = 'quizNoResults';
+  static const String quizResults = 'quizResults';
+  static const String quizReset = 'quizReset';
+  static const String quizResetConfirm = 'quizResetConfirm';
+  static const String reset = 'reset';
+  static const String quizQ1 = 'quizQ1';
+  static const String quizQ1A1 = 'quizQ1A1';
+  static const String quizQ1A2 = 'quizQ1A2';
+  static const String quizQ1A3 = 'quizQ1A3';
+  static const String quizQ1A4 = 'quizQ1A4';
+
+  static const String quizQ2 = 'quizQ2';
+  static const String quizQ2A1 = 'quizQ2A1';
+  static const String quizQ2A2 = 'quizQ2A2';
+  static const String quizQ2A3 = 'quizQ2A3';
+  static const String quizQ2A4 = 'quizQ2A4';
+
+  static const String quizQ3 = 'quizQ3';
+  static const String quizQ3A1 = 'quizQ3A1';
+  static const String quizQ3A2 = 'quizQ3A2';
+  static const String quizQ3A3 = 'quizQ3A3';
+  static const String quizQ3A4 = 'quizQ3A4';
+
+  static const String quizQ4 = 'quizQ4';
+  static const String quizQ4A1 = 'quizQ4A1';
+  static const String quizQ4A2 = 'quizQ4A2';
+  static const String quizQ4A3 = 'quizQ4A3';
+  static const String quizQ4A4 = 'quizQ4A4';
+
+  static const String quizQ5 = 'quizQ5';
+  static const String quizQ5A1 = 'quizQ5A1';
+  static const String quizQ5A2 = 'quizQ5A2';
+  static const String quizQ5A3 = 'quizQ5A3';
+  static const String quizQ5A4 = 'quizQ5A4';
+
+  static const String quizQ6 = 'quizQ6';
+  static const String quizQ6A1 = 'quizQ6A1';
+  static const String quizQ6A2 = 'quizQ6A2';
+  static const String quizQ6A3 = 'quizQ6A3';
+  static const String quizQ6A4 = 'quizQ6A4';
+
+  static const String quizQ7 = 'quizQ7';
+  static const String quizQ7A1 = 'quizQ7A1';
+  static const String quizQ7A2 = 'quizQ7A2';
+  static const String quizQ7A3 = 'quizQ7A3';
+  static const String quizQ7A4 = 'quizQ7A4';
+
+  static const String quizQ8 = 'quizQ8';
+  static const String quizQ8A1 = 'quizQ8A1';
+  static const String quizQ8A2 = 'quizQ8A2';
+  static const String quizQ8A3 = 'quizQ8A3';
+  static const String quizQ8A4 = 'quizQ8A4';
+
+  static const String quizQ9 = 'quizQ9';
+  static const String quizQ9A1 = 'quizQ9A1';
+  static const String quizQ9A2 = 'quizQ9A2';
+  static const String quizQ9A3 = 'quizQ9A3';
+  static const String quizQ9A4 = 'quizQ9A4';
+
+  static const String quizQ10 = 'quizQ10';
+  static const String quizQ10A1 = 'quizQ10A1';
+  static const String quizQ10A2 = 'quizQ10A2';
+  static const String quizQ10A3 = 'quizQ10A3';
+  static const String quizQ10A4 = 'quizQ10A4';
+
+  static const String quizQ11 = 'quizQ11';
+  static const String quizQ11A1 = 'quizQ11A1';
+  static const String quizQ11A2 = 'quizQ11A2';
+  static const String quizQ11A3 = 'quizQ11A3';
+  static const String quizQ11A4 = 'quizQ11A4';
+
+  static const String quizQ12 = 'quizQ12';
+  static const String quizQ12A1 = 'quizQ12A1';
+  static const String quizQ12A2 = 'quizQ12A2';
+  static const String quizQ12A3 = 'quizQ12A3';
+  static const String quizQ12A4 = 'quizQ12A4';
+
+  static const String quizQ13 = 'quizQ13';
+  static const String quizQ13A1 = 'quizQ13A1';
+  static const String quizQ13A2 = 'quizQ13A2';
+  static const String quizQ13A3 = 'quizQ13A3';
+  static const String quizQ13A4 = 'quizQ13A4';
+
+  static const String quizQ14 = 'quizQ14';
+  static const String quizQ14A1 = 'quizQ14A1';
+  static const String quizQ14A2 = 'quizQ14A2';
+  static const String quizQ14A3 = 'quizQ14A3';
+  static const String quizQ14A4 = 'quizQ14A4';
+
+  static const String quizQ15 = 'quizQ15';
+  static const String quizQ15A1 = 'quizQ15A1';
+  static const String quizQ15A2 = 'quizQ15A2';
+  static const String quizQ15A3 = 'quizQ15A3';
+  static const String quizQ15A4 = 'quizQ15A4';
+
+  static const String quizQ16 = 'quizQ16';
+  static const String quizQ16A1 = 'quizQ16A1';
+  static const String quizQ16A2 = 'quizQ16A2';
+  static const String quizQ16A3 = 'quizQ16A3';
+  static const String quizQ16A4 = 'quizQ16A4';
+
+  static const String quizQ17 = 'quizQ17';
+  static const String quizQ17A1 = 'quizQ17A1';
+  static const String quizQ17A2 = 'quizQ17A2';
+  static const String quizQ17A3 = 'quizQ17A3';
+  static const String quizQ17A4 = 'quizQ17A4';
+
+  static const String quizQ18 = 'quizQ18';
+  static const String quizQ18A1 = 'quizQ18A1';
+  static const String quizQ18A2 = 'quizQ18A2';
+  static const String quizQ18A3 = 'quizQ18A3';
+  static const String quizQ18A4 = 'quizQ18A4';
+
+  static const String quizQ19 = 'quizQ19';
+  static const String quizQ19A1 = 'quizQ19A1';
+  static const String quizQ19A2 = 'quizQ19A2';
+  static const String quizQ19A3 = 'quizQ19A3';
+  static const String quizQ19A4 = 'quizQ19A4';
+
+  static const String quizQ20 = 'quizQ20';
+  static const String quizQ20A1 = 'quizQ20A1';
+  static const String quizQ20A2 = 'quizQ20A2';
+  static const String quizQ20A3 = 'quizQ20A3';
+  static const String quizQ20A4 = 'quizQ20A4';
+
+  static const String quizQ21 = 'quizQ21';
+  static const String quizQ21A1 = 'quizQ21A1';
+  static const String quizQ21A2 = 'quizQ21A2';
+  static const String quizQ21A3 = 'quizQ21A3';
+  static const String quizQ21A4 = 'quizQ21A4';
+
+  static const String quizQ22 = 'quizQ22';
+  static const String quizQ22A1 = 'quizQ22A1';
+  static const String quizQ22A2 = 'quizQ22A2';
+  static const String quizQ22A3 = 'quizQ22A3';
+  static const String quizQ22A4 = 'quizQ22A4';
+
+  static const String quizQ23 = 'quizQ23';
+  static const String quizQ23A1 = 'quizQ23A1';
+  static const String quizQ23A2 = 'quizQ23A2';
+  static const String quizQ23A3 = 'quizQ23A3';
+  static const String quizQ23A4 = 'quizQ23A4';
+
+  static const String quizQ24 = 'quizQ24';
+  static const String quizQ24A1 = 'quizQ24A1';
+  static const String quizQ24A2 = 'quizQ24A2';
+  static const String quizQ24A3 = 'quizQ24A3';
+  static const String quizQ24A4 = 'quizQ24A4';
+
+  static const String quizQ25 = 'quizQ25';
+  static const String quizQ25A1 = 'quizQ25A1';
+  static const String quizQ25A2 = 'quizQ25A2';
+  static const String quizQ25A3 = 'quizQ25A3';
+  static const String quizQ25A4 = 'quizQ25A4';
+
+  static const String quizQ26 = 'quizQ26';
+  static const String quizQ26A1 = 'quizQ26A1';
+  static const String quizQ26A2 = 'quizQ26A2';
+  static const String quizQ26A3 = 'quizQ26A3';
+  static const String quizQ26A4 = 'quizQ26A4';
+
+  static const String quizQ27 = 'quizQ27';
+  static const String quizQ27A1 = 'quizQ27A1';
+  static const String quizQ27A2 = 'quizQ27A2';
+  static const String quizQ27A3 = 'quizQ27A3';
+  static const String quizQ27A4 = 'quizQ27A4';
+
+  static const String quizQ28 = 'quizQ28';
+  static const String quizQ28A1 = 'quizQ28A1';
+  static const String quizQ28A2 = 'quizQ28A2';
+  static const String quizQ28A3 = 'quizQ28A3';
+  static const String quizQ28A4 = 'quizQ28A4';
+
+  static const String quizQ29 = 'quizQ29';
+  static const String quizQ29A1 = 'quizQ29A1';
+  static const String quizQ29A2 = 'quizQ29A2';
+  static const String quizQ29A3 = 'quizQ29A3';
+  static const String quizQ29A4 = 'quizQ29A4';
+
+  static const String quizQ30 = 'quizQ30';
+  static const String quizQ30A1 = 'quizQ30A1';
+  static const String quizQ30A2 = 'quizQ30A2';
+  static const String quizQ30A3 = 'quizQ30A3';
+  static const String quizQ30A4 = 'quizQ30A4';
+
+  static const String quizLoadError = 'quizLoadError';
+  static const String quizResetSuccess = 'quizResetSuccess';
+  static const String error = 'error';
+  static const String refresh = 'refresh';
+  static const String clearAllResults = 'clearAllResults';
+
+
+  // Dashboard page keys
+  static const String failedToLoadDashboardData = 'failedToLoadDashboardData';
+  static const String dashboard = 'dashboard';
+  // Placeholder keys for child widgets
+  static const String balanceCardTitle = 'balanceCardTitle';
+  static const String timeRangeSelectorLabel = 'timeRangeSelectorLabel';
+  static const String recentTransactionsTitle = 'recentTransactionsTitle';
+  static const String addTransactionTitle = 'addTransactionTitle';
+  // Navigation tiles
+  static const String aiPoweredFeatures = 'aiPoweredFeatures';
+  static const String moneyTools = 'moneyTools';
+  static const String insights = 'insights';
+  static const String goals = 'goals';
+  static const String learnFinanceDescription = 'learnFinanceDescription';
+  static const String financeAcademy = 'financeAcademy';
+
+  // Robot animation
+  static const String thinking = 'thinking';
+  // Balance card
+  static const String balance = 'balance';
+  static const String income = 'income';
+  static const String expenses = 'expenses';
+  static const String thisMonth = 'thisMonth';
+  static const String thisWeek = 'thisWeek';
+  static const String thisYear = 'thisYear';
+  static const String customRange = 'customRange';
+  // time_selector
+  static const String selectTimePeriod = 'selectTimePeriod';
+  static const String allTime = 'allTime';
+  // Chart Service
+  static const String mon = 'mon';
+  static const String tue = 'tue';
+  static const String wed = 'wed';
+  static const String thu = 'thu';
+  static const String fri = 'fri';
+  static const String sat = 'sat';
+  static const String sun = 'sun';
+  static const String jan = 'jan';
+  static const String feb = 'feb';
+  static const String mar = 'mar';
+  static const String apr = 'apr';
+  static const String may = 'may';
+  static const String jun = 'jun';
+  static const String jul = 'jul';
+  static const String aug = 'aug';
+  static const String sep = 'sep';
+  static const String oct = 'oct';
+  static const String nov = 'nov';
+  static const String dec = 'dec';
+  // insight
+  static const String spendingAnalysis = 'spendingAnalysis';
+  static const String categoryBreakdown = 'categoryBreakdown';
+  static const String expenseAnalysis = 'expenseAnalysis';
+  static const String incomeAnalysis = 'incomeAnalysis';
+  // recent transaction
+  static const String transactions = 'transactions';
+  static const String selectItemsToDelete = 'selectItemsToDelete';
+  static const String noTransactionsInThisPeriod = 'noTransactionsInThisPeriod';
+  static const String seeAll = 'seeAll';
+  static const String deleteTransactions = 'deleteTransactions';
+  static const String confirmDeleteTransactions = 'confirmDeleteTransactions';
+  static const String delete = 'delete';
+  // all transactions
+  static const String confirmDeleteAction = 'confirmDeleteAction';
+  static const String errorLoadingTransactions = 'errorLoadingTransactions';
+  // delete transaction
+  static const String deleteTransaction = 'deleteTransaction';
+  static const String confirmDeleteSingleTransaction =
+      'confirmDeleteSingleTransaction';
+  // goal card
+  static const String savedAmount = 'savedAmount';
+  static const String targetAmount = 'targetAmount';
+  static const String percentCompleted = 'percentCompleted';
+  static const String targetDate = 'targetDate';
+  static const String daysLeft = 'daysLeft';
+  static const String daysOverdue = 'daysOverdue';
+  static const String addSavings = 'addSavings';
+  static const String addToSavings = 'addToSavings';
+  static const String amount = 'amount';
+  static const String pleaseEnterAmount = 'pleaseEnterAmount';
+  static const String pleaseEnterValidNumber = 'pleaseEnterValidNumber';
+  static const String amountMustBePositive = 'amountMustBePositive';
+  static const String amountExceedsTarget = 'amountExceedsTarget';
+  static const String add = 'add';
+  static const String deleteGoal = 'deleteGoal';
+  static const String confirmDeleteGoal = 'confirmDeleteGoal';
+  // add edit goal
+  static const String addSavingGoal = 'addSavingGoal';
+  static const String editSavingGoal = 'editSavingGoal';
+  static const String savingGoalPurpose = 'savingGoalPurpose';
+  static const String savingGoalHint = 'savingGoalHint';
+  static const String description = 'description';
+  static const String descriptionHint = 'descriptionHint';
+  static const String amountHint = 'amountHint';
+  static const String pleaseEnterPositiveAmount = 'pleaseEnterPositiveAmount';
+  static const String pleaseEnterSavingGoalName = 'pleaseEnterSavingGoalName';
+  static const String saveGoal = 'saveGoal';
+  static const String goalCreated = 'goalCreated';
+  static const String goalUpdated = 'goalUpdated';
+  static const String errorSavingGoal = 'errorSavingGoal';
+  // saving goal page
+  static const String mySavingGoals = 'mySavingGoals';
+  static const String newGoal = 'newGoal';
+  static const String loadingGoals = 'loadingGoals';
+  static const String noSavingGoals = 'noSavingGoals';
+  static const String createFirstGoal = 'createFirstGoal';
+  static const String totalSavingsProgress = 'totalSavingsProgress';
+  static const String percentComplete = 'percentComplete';
+  static const String savingsOfTarget = 'savingsOfTarget';
+  static const String deleteGoalQuestion = 'deleteGoalQuestion';
+  static const String confirmDeleteGoalPermanent = 'confirmDeleteGoalPermanent';
+  static const String addedToSavings = 'addedToSavings';
+  static const String goalDeleted = 'goalDeleted';
+  static const String goalWasDeleted = 'goalWasDeleted';
+  static const String amountGreaterThanZero = 'amountGreaterThanZero';
+  static const String couldNotAddSavings = 'couldNotAddSavings';
+  static const String couldNotDeleteGoal = 'couldNotDeleteGoal';
+  static const String goalsRefreshed = 'goalsRefreshed';
+  static const String aboutSavingGoals = 'aboutSavingGoals';
+  static const String trackProgress = 'trackProgress';
+  static const String trackProgressDescription = 'trackProgressDescription';
+  static const String addMoneyAnytime = 'addMoneyAnytime';
+  static const String addMoneyAnytimeDescription = 'addMoneyAnytimeDescription';
+  static const String setTargetDates = 'setTargetDates';
+  static const String setTargetDatesDescription = 'setTargetDatesDescription';
+  static const String gotIt = 'gotIt';
+  static const String savingsAddedSuccessfully = 'savingsAddedSuccessfully';
+  static const String insufficientBalance = 'insufficientBalance';
+  static const String errorAddingSavings = 'errorAddingSavings';
+  // add income
+  static const String addExpense = 'addExpense';
+  static const String editExpense = 'editExpense';
+  static const String addIncome = 'addIncome';
+  static const String editIncome = 'editIncome';
+  // base adding
+  static const String category = 'category';
+  static const String date = 'date';
+  static const String pleaseEnterValidAmount = 'pleaseEnterValidAmount';
+  static const String pleaseSelectCategory = 'pleaseSelectCategory';
+  static const String transactionSaved = 'transactionSaved';
+  static const String transactionUpdated = 'transactionUpdated';
+  static const String failedToSaveTransaction = 'failedToSaveTransaction';
+  // expense or income
+  static const String addNew = 'addNew';
+  static const String expense = 'expense';
+  static const String saving = 'saving';
+  static const String savings = 'savings';
+  // transaction item
+  static const String noTransactionsYet = 'noTransactionsYet';
+  static const String today = 'today';
+  static const String yesterday = 'yesterday';
+  // Category keys
+  static const String food = 'food';
+  static const String transport = 'transport';
+  static const String utilities = 'utilities';
+  static const String entertainment = 'entertainment';
+  static const String shopping = 'shopping';
+  static const String health = 'health';
+  static const String others = 'others';
+  static const String salary = 'salary';
+  static const String investment = 'investment';
+  static const String business = 'business';
+  static const String gift = 'gift';
+  static const String simpleBudgeting = 'simpleBudgeting';
+  // Dashboard help
+  static const String dashboardHelpTitle = 'dashboardHelpTitle';
+  static const String dashboardHelpSubtitle = 'dashboardHelpSubtitle';
+  static const String dashboardHelpBalance = 'dashboardHelpBalance';
+  static const String dashboardHelpAddTransaction =
+      'dashboardHelpAddTransaction';
+  static const String dashboardHelpDeleteTransaction =
+      'dashboardHelpDeleteTransaction';
+  static const String dashboardHelpSpendingPatterns =
+      'dashboardHelpSpendingPatterns';
+  static const String dashboardHelpRefresh = 'dashboardHelpRefresh';
+  //pie chart
+  static const String total = 'total';
+  static const String noExpenseData = 'noExpenseData';
+  static const String noIncomeData = 'noIncomeData';
+  //bar chart
+  static const String pagination = 'pagination';
+  // chart query
+  static const String hideAssistant = 'hideAssistant';
+  static const String askAboutChart = 'askAboutChart';
+  static const String askAboutChartHint = 'askAboutChartHint';
+  static const String assistant = 'assistant';
+  static const String queryError = 'queryError';
+  static const String queryErrorWithMessage = 'queryErrorWithMessage';
+  static const String chartContext = 'chartContext';
+  static const String queryPrompt = 'queryPrompt';
+  // advanced quiz
+  static const String quizCompleted = 'quiz_completed';
+  static const String quizFinish = 'quiz_finish';
+  static const String quizTryAgain = 'quiz_try_again';
+  static const String quizQuestion1 = 'quiz_question_1';
+  static const String quizQuestion1Answer1 = 'quiz_question_1_answer_1';
+  static const String quizQuestion1Answer2 = 'quiz_question_1_answer_2';
+  static const String quizQuestion1Answer3 = 'quiz_question_1_answer_3';
+  static const String quizQuestion2 = 'quiz_question_2';
+  static const String quizQuestion2Answer1 = 'quiz_question_2_answer_1';
+  static const String quizQuestion2Answer2 = 'quiz_question_2_answer_2';
+  static const String quizQuestion2Answer3 = 'quiz_question_2_answer_3';
+  static const String quizQuestion3 = 'quiz_question_3';
+  static const String quizQuestion3Answer1 = 'quiz_question_3_answer_1';
+  static const String quizQuestion3Answer2 = 'quiz_question_3_answer_2';
+  static const String quizQuestion3Answer3 = 'quiz_question_3_answer_3';
+  static const String quizQuestion4 = 'quiz_question_4';
+  static const String quizQuestion4Answer1 = 'quiz_question_4_answer_1';
+  static const String quizQuestion4Answer2 = 'quiz_question_4_answer_2';
+  static const String quizQuestion4Answer3 = 'quiz_question_4_answer_3';
+  static const String quizQuestion5 = 'quiz_question_5';
+  static const String quizQuestion5Answer1 = 'quiz_question_5_answer_1';
+  static const String quizQuestion5Answer2 = 'quiz_question_5_answer_2';
+  static const String quizQuestion5Answer3 = 'quiz_question_5_answer_3';
+  //advance quiz screen
+  static const String advancedScreenTitle = 'advanced_screen_title';
+  static const String investmentBasicsTitle = 'investment_basics_title';
+  static const String investmentBasicsPoint1 = 'investment_basics_point_1';
+  static const String investmentBasicsPoint2 = 'investment_basics_point_2';
+  static const String investmentBasicsPoint3 = 'investment_basics_point_3';
+  static const String retirementPlanningTitle = 'retirement_planning_title';
+  static const String retirementPlanningPoint1 = 'retirement_planning_point_1';
+  static const String retirementPlanningPoint2 = 'retirement_planning_point_2';
+  static const String retirementPlanningPoint3 = 'retirement_planning_point_3';
+  static const String insuranceProtectionTitle = 'insurance_protection_title';
+  static const String insuranceProtectionPoint1 =
+      'insurance_protection_point_1';
+  static const String insuranceProtectionPoint2 =
+      'insurance_protection_point_2';
+  static const String insuranceProtectionPoint3 =
+      'insurance_protection_point_3';
+  static const String takeAdvancedQuiz = 'take_advanced_quiz';
+  //beginer quiz
+  static const String beginnerQuizTitle = 'beginner_quiz_title';
+  static const String beginnerQuizQuestion1 = 'beginner_quiz_question_1';
+  static const String beginnerQuizQuestion1Answer1 =
+      'beginner_quiz_question_1_answer_1';
+  static const String beginnerQuizQuestion1Answer2 =
+      'beginner_quiz_question_1_answer_2';
+  static const String beginnerQuizQuestion1Answer3 =
+      'beginner_quiz_question_1_answer_3';
+  static const String beginnerQuizQuestion2 = 'beginner_quiz_question_2';
+  static const String beginnerQuizQuestion2Answer1 =
+      'beginner_quiz_question_2_answer_1';
+  static const String beginnerQuizQuestion2Answer2 =
+      'beginner_quiz_question_2_answer_2';
+  static const String beginnerQuizQuestion2Answer3 =
+      'beginner_quiz_question_2_answer_3';
+  static const String beginnerQuizQuestion3 = 'beginner_quiz_question_3';
+  static const String beginnerQuizQuestion3Answer1 =
+      'beginner_quiz_question_3_answer_1';
+  static const String beginnerQuizQuestion3Answer2 =
+      'beginner_quiz_question_3_answer_2';
+  static const String beginnerQuizQuestion3Answer3 =
+      'beginner_quiz_question_3_answer_3';
+  //beginer screen
+  static const String beginnerScreenTitle = 'beginner_screen_title';
+  static const String understandingMoneyTitle = 'understanding_money_title';
+  static const String understandingMoneyPoint1 = 'understanding_money_point_1';
+  static const String understandingMoneyPoint2 = 'understanding_money_point_2';
+  static const String understandingMoneyPoint3 = 'understanding_money_point_3';
+  static const String simpleBudgetingTitle = 'simple_budgeting_title';
+  static const String simpleBudgetingPoint1 = 'simple_budgeting_point_1';
+  static const String simpleBudgetingPoint2 = 'simple_budgeting_point_2';
+  static const String simpleBudgetingPoint3 = 'simple_budgeting_point_3';
+  static const String bankAccountsTitle = 'bank_accounts_title';
+  static const String bankAccountsPoint1 = 'bank_accounts_point_1';
+  static const String bankAccountsPoint2 = 'bank_accounts_point_2';
+  static const String bankAccountsPoint3 = 'bank_accounts_point_3';
+  static const String takeBeginnerQuiz = 'take_beginner_quiz';
+  static const String resourceError = 'resource_error';
+  //Intermedia quiz
+  static const String intermediateQuizTitle = 'intermediate_quiz_title';
+  static const String advancedQuizTitle = 'advancedQuizTitle';
+  static const String intermediateQuizQuestion1 =
+      'intermediate_quiz_question_1';
+  static const String intermediateQuizQuestion1Answer1 =
+      'intermediate_quiz_question_1_answer_1';
+  static const String intermediateQuizQuestion1Answer2 =
+      'intermediate_quiz_question_1_answer_2';
+  static const String intermediateQuizQuestion1Answer3 =
+      'intermediate_quiz_question_1_answer_3';
+  static const String intermediateQuizQuestion2 =
+      'intermediate_quiz_question_2';
+  static const String intermediateQuizQuestion2Answer1 =
+      'intermediate_quiz_question_2_answer_1';
+  static const String intermediateQuizQuestion2Answer2 =
+      'intermediate_quiz_question_2_answer_2';
+  static const String intermediateQuizQuestion2Answer3 =
+      'intermediate_quiz_question_2_answer_3';
+  static const String intermediateQuizQuestion3 =
+      'intermediate_quiz_question_3';
+  static const String intermediateQuizQuestion3Answer1 =
+      'intermediate_quiz_question_3_answer_1';
+  static const String intermediateQuizQuestion3Answer2 =
+      'intermediate_quiz_question_3_answer_2';
+  static const String intermediateQuizQuestion3Answer3 =
+      'intermediate_quiz_question_3_answer_3';
+  static const String intermediateQuizQuestion4 =
+      'intermediate_quiz_question_4';
+  static const String intermediateQuizQuestion4Answer1 =
+      'intermediate_quiz_question_4_answer_1';
+  static const String intermediateQuizQuestion4Answer2 =
+      'intermediate_quiz_question_4_answer_2';
+  static const String intermediateQuizQuestion4Answer3 =
+      'intermediate_quiz_question_4_answer_3';
+  //intermeadia screen
+  static const String intermediateScreenTitle = 'intermediate_screen_title';
+  static const String advancedBudgetingTitle = 'advanced_budgeting_title';
+  static const String advancedBudgetingPoint1 = 'advanced_budgeting_point_1';
+  static const String advancedBudgetingPoint2 = 'advanced_budgeting_point_2';
+  static const String advancedBudgetingPoint3 = 'advanced_budgeting_point_3';
+  static const String creditBasicsTitle = 'credit_basics_title';
+  static const String creditBasicsPoint1 = 'credit_basics_point_1';
+  static const String creditBasicsPoint2 = 'credit_basics_point_2';
+  static const String creditBasicsPoint3 = 'credit_basics_point_3';
+  static const String savingStrategiesTitle = 'saving_strategies_title';
+  static const String savingStrategiesPoint1 = 'saving_strategies_point_1';
+  static const String savingStrategiesPoint2 = 'saving_strategies_point_2';
+  static const String savingStrategiesPoint3 = 'saving_strategies_point_3';
+  static const String takeIntermediateQuiz = 'take_intermediate_quiz';
+  static const String quizHomeTitle = 'quiz_home_title';
+  static const String beginnerLevelQuiz = 'beginner_level_quiz';
+  static const String intermediateLevelQuiz = 'intermediate_level_quiz';
+  static const String advancedLevelQuiz = 'advanced_level_quiz';
+  // New Chatbot keys
+  static const String transactionAddedSuccess = 'transaction_added_success';
+  static const String transactionCanceled = 'transaction_canceled';
+  static const String transactionAddError = 'transaction_add_error';
+  static const String transactionConfirmPrompt = 'transaction_confirm_prompt';
+  static const String transactionNoPending = 'transaction_no_pending';
+  // New ChatbotHelp keys
+  static const String chatbotHelpTitle = 'chatbot_help_title';
+  static const String chatbotHelpSubtitle = 'chatbot_help_subtitle';
+  static const String chatbotHelpInstruction1 = 'chatbot_help_instruction_1';
+  static const String chatbotHelpInstruction2 = 'chatbot_help_instruction_2';
+  static const String chatbotHelpInstruction3 = 'chatbot_help_instruction_3';
+  static const String chatbotHelpInstruction4 = 'chatbot_help_instruction_4';
+  // New WelcomeScreen keys
+  static const String welcomeTryAsking = 'welcome_try_asking';
+  static const String welcomeWriteQuestion = 'welcome_write_question';
+  // New VoiceChatInterface keys
+  static const String voiceListening = 'voice_listening';
+  static const String voiceProcessing = 'voice_processing';
+  static const String voiceTapMic = 'voice_tap_mic';
+  static const String voiceSttNotAvailable = 'voice_stt_not_available';
+  // New TransactionPreviewPopup keys
+  static const String transactionPreviewTitle = 'transaction_preview_title';
+  static const String transactionPreviewCancel = 'transaction_preview_cancel';
+  static const String transactionPreviewConfirm = 'transaction_preview_confirm';
+  // New ChatInterface keys
+  static const String chatInputHint = 'chat_input_hint';
+  // New ChatConstants non-financial response keys
+  static const String nonFinancialQuestion = 'non_financial_question';
+  static const String nonFinancialImage = 'non_financial_image';
+  static const String expenseTracking = 'expenseTracking';
+  static const String categorySpentAmount = 'categorySpentAmount';
+  static const String categoryEarnedAmount = 'categoryEarnedAmount';
+  static const String backToQuiz = 'backToQuiz';
+  static const String reviewAnswers = 'reviewAnswers';
+  // ForgotPasswordPage keys
+  static const String forgotPasswordTitle = 'forgot_password_title';
+  static const String emailHint = 'email_hint';
+  static const String sendResetLink = 'send_reset_link';
+  static const String backToLogin = 'back_to_login';
+  static const String passwordResetSuccess = 'password_reset_success';
+  static const String passwordResetError = 'password_reset_error';
+  static const String dialogOk = 'dialog_ok';
+  // LoginPage keys
+  static const String loginTitle = 'login_title';
+  static const String passwordHint = 'password_hint';
+  static const String forgotPassword = 'forgot_password';
+  static const String signInButton = 'sign_in_button';
+  static const String continueWith = 'continue_with';
+  static const String notMember = 'not_member';
+  static const String registerNow = 'register_now';
+  static const String loginError = 'login_error';
+  static const String userNotFoundError = 'user_not_found_error';
+  // RegisterPage keys
+  static const String registerTitle = 'register_title';
+  static const String confirmPasswordHint = 'confirm_password_hint';
+  static const String signUpButton = 'sign_up_button';
+  static const String alreadyMember = 'already_member';
+  static const String loginNow = 'login_now';
+  static const String passwordStrong = 'password_strong';
+  static const String passwordWeak = 'password_weak';
+  static const String invalidGmailError = 'invalid_gmail_error';
+  static const String passwordsNotMatchError = 'passwords_not_match_error';
+  static const String weakPasswordError = 'weak_password_error';
+  static const String hiveStorageError = 'hive_storage_error';
+  static const String selectLanguage = 'select_language';
+  static const String report = 'report';
+  static const String savingGoals = 'savingGoals';
+  static const String quiz = 'quiz';
+  static const String quizAttempts = 'quizAttempts';
+  static const String quizAverage = 'quizAverage';
+  static const String quizLastAttempt = 'quizLastAttempt';
+  static const String learningReset = 'learningReset';
+  static const String learningHub = 'learningHub';
+  static const String ongoing = 'ongoing';
+  static const String completed = 'completed';
+  static const String noResultsFound = 'noResultsFound';
+  static const String savingMoneyEasy = 'savingMoneyEasy';
+  //Learn AppTour
+  static const String searchTextfiedText = "Search for topics..";
+  static const String apptourDashSubtitle = "Explore the main overview";
+  static const String expenseTrackingSubtite = "Track your daily spending";
+  static const String savingGoalheading = "Setting Up Saving Goals";
+  static const String savingGoalSubheading = "Set and smash goals";
+  static const String savingGoalSubtitled =
+      "Learn how to set, track, and achieve your personal savings goals using the app’s built-in features.";
+
+  static const String learnHub = "LearnHub";
+  static const String learnHubSubtitle = "Central learning area";
+  static const String tourBudgetSubTitle = "Stay within budget";
+  static const String tourCahtBotSubtite = "Your friendly guide";
+  static const String tourReportSubtite = "See the full picture";
+  static const String settingSubHeading = "Adjust preferences";
+
+  static const String lessons = 'Lessons';
+  static const String appTour = 'App Tour';
+  static const String progress = 'Progress';
+  static const String smartSpendingTipsSubtitle = 'Spend smarter, live better';
+  static const String simpleBudgetingSubtitle = 'Plan with ease';
+  static const String savingMoneyEasySubtitle = 'Build your future';
+  static const String savingsCoach = 'Savings Coach';
+  static const String savingsCoachSubtitle = 'Cut costs, not dreams';
+  static const String taketheQuiz = 'Take the Quiz';
+  static const String taketheQuizSubtitle = 'Test your knowledge';
+  static const String viewQuizResult = 'View Quiz Result';
+  static const String quizResultSubtitle = 'See your scores';
+  //Smart spending tips videos screen
+  static const String spendingVideo1Title =
+      'Manage, Grow, Invest & Protect Money';
+  static const String spendingVideo1Subtitle =
+      'No matter how much you earn, if you manage it well, grow it, invest it, and protect it, your future will be secure.';
+  static const String spendingVideo2Title = 'Smart Investment: Buy Land';
+  static const String spendingVideo2Subtitle =
+      "Land is a safe and profitable investment. Check papers and location before you buy. It’s more flexible than flats or crypto.";
+
+  static const String simpleBudgetingvideo1Title =
+      'Smart Monthly Income Allocation';
+  static const String simpleBudgetingvideo1Subtitle =
+      'Spend 55% on needs, 10% on long-term investments, 10% for future goals, 10% to improve your skills, and 15% for fun or charity.';
+  static const String simpleBudgetingvideo2Title =
+      "Investing in Yourself Pays Off Most";
+  static const String simpleBudgetingvideo2Subtitle =
+      'Instead of starting a business with 10,000 Taka, improve your skills. Read books, take online courses, and find ways to earn using your knowledge.';
+  static const String savingMoneyVideo1Title = 'Making Saving a Habit';
+  static const String savingMoneyVideo1Subtitle =
+      "It’s smart to save money regularly and turn it into a habit. The best way is to plan your savings before you spend.";
+  static const String savingMoneyVideo2Title = 'Why Saving Is Important';
+  static const String savingMoneyVideo2Subtitle =
+      "Saving money for emergencies is super important. If you keep some money aside as soon as you get paid, your future will feel more secure.";
+
+  //Saving Coach
+
+  static const String coachOptMoneyBoss = 'coachOptMoneyBoss';
+  static const String coachOptDoingOkay = 'coachOptDoingOkay';
+  static const String coachOptNeedsWork = 'coachOptNeedsWork';
+  static const String coachOpt0_200 = 'coachOpt0_200';
+  static const String coachOpt200_500 = 'coachOpt200_500';
+  static const String coachOpt500plus = 'coachOpt500plus';
+  static const String coachOpt0_1000 = 'coachOpt0_1000';
+  static const String coachOpt1000_2000 = 'coachOpt1000_2000';
+  static const String coachOpt2000plus = 'coachOpt2000plus';
+  static const String coachOpt100 = 'coachOpt100';
+  static const String coachOpt500 = 'coachOpt500';
+  static const String coachOpt1000plus = 'coachOpt1000plus';
+  static const String coachOptAlways = 'coachOptAlways';
+  static const String coachOptSometimes = 'coachOptSometimes';
+  static const String coachOptNotReally = 'coachOptNotReally';
+  static const String coachOptFood = 'coachOptFood';
+  static const String coachOptShopping = 'coachOptShopping';
+  static const String coachOptEntertainment = 'coachOptEntertainment';
+  static const String coachOptNever = 'coachOptNever';
+  static const String coachOptYes = 'coachOptYes';
+  static const String coachOptMaybe = 'coachOptMaybe';
+  static const String coachOptNo = 'coachOptNo';
+  static const String coachOptRarely = 'coachOptRarely';
+  static const String coachOptSaveIt = 'coachOptSaveIt';
+  static const String coachOptSpendIt = 'coachOptSpendIt';
+
+  static const String coachOptNotSure = 'coachOptNotSure';
+  static const String coachOtherHint = 'coachOtherHint';
+  static const String coachSeeResult = 'coachSeeResult';
+  static const String coachNext = 'coachNext';
+  static const String coachSavingPlan = 'coachSavingPlan';
+  static const String restartQuiz = "Restart Quiz";
+  static const String feedbackMessageExcellent =
+      "🎉 Excellent! You’re a money master!";
+  static const String feedbackMessageGood =
+      "👍 Good job! You’re on the right path!";
+  static const String feedbackMessageNotBad =
+      "🧠 Not bad! A little more learning will go a long way.";
+  static const String feedbackMessageKeepGoing =
+      "📘 Keep going! Review the Learn section and try again.";
+
+  static const String score = "score";
+  static const String accuracy = "Accuracy";
+  static const String highScore = "🏅 Highest Score";
+
+  static const String coachSpendingHigh = "coachSpendingHigh";
+  static const String coachSpendingMedium = "coachSpendingMedium";
+  static const String coachSpendingHealthy = "coachSpendingHealthy";
+  static const String coachTrackStart = "coachTrackStart";
+  static const String coachTrackMore = "coachTrackMore";
+  static const String coachAdjustNo = "coachAdjustNo";
+  static const String coachAdjustMaybe = "coachAdjustMaybe";
+  static const String coachAdjustYes = "coachAdjustYes";
+  static const String greatJob = "🏆 Great Job!";
+  static const String goodEffort = "👍 Good Effort";
+  static const String tryAgain = "🔄 Try Again";
+  //**************************************************************************** */
+  static const Map<String, String> en = {
+    greatJob: "🏆 Great Job!",
+    goodEffort: "👍 Good Effort",
+    tryAgain: "🔄 Try Again",
+    coachSpendingHigh:
+    "But your spending is high. Try cutting at least \$150 from your %s.\n",
+    coachSpendingMedium: "There is still room to trim about \$100 from %s.\n",
+    coachSpendingHealthy: "Spending looks healthy. Keep it up!\n",
+    coachTrackStart:
+    "Start tracking where your money goes. It will surprise you!\n",
+    coachTrackMore:
+    "Tracking a little more seriously could reveal hidden leaks.\n",
+    coachAdjustNo:
+    "Even tiny changes like skipping one takeaway meal a week can save \$100+ a month.\n",
+    coachAdjustMaybe:
+    "Try testing small adjustments. You might love the results!\n",
+    coachAdjustYes:
+    "You are ready to smash your savings goals. Time to go all in!\n",
+    score: "score",
+    accuracy: "Accuracy",
+    highScore: "🏅 Highest Score",
+    feedbackMessageNotBad:
+    "🧠 Not bad! A little more learning will go a long way.",
+    feedbackMessageKeepGoing:
+    "📘 Keep going! Review the Learn section and try again.",
+    feedbackMessageGood: "👍 Good job! You’re on the right path!",
+    feedbackMessageExcellent: "🎉 Excellent! You’re a money master!",
+
+    restartQuiz: "Restart Quiz",
+    savingMoneyVideo1Title: 'Making Saving a Habit',
+    savingMoneyVideo1Subtitle:
+    "It’s smart to save money regularly and turn it into a habit. The best way is to plan your savings before you spend.",
+    savingMoneyVideo2Title: 'Why Saving Is Important',
+    savingMoneyVideo2Subtitle:
+    "Saving money for emergencies is super important. If you keep some money aside as soon as you get paid, your future will feel more secure.",
+    simpleBudgetingvideo1Title: 'Smart Monthly Income Allocation',
+    simpleBudgetingvideo1Subtitle:
+    'Spend 55% on needs, 10% on long-term investments, 10% for future goals, 10% to improve your skills, and 15% for fun or charity.',
+    simpleBudgetingvideo2Title: "Investing in Yourself Pays Off Most",
+    simpleBudgetingvideo2Subtitle:
+    'Instead of starting a business with 10,000 Taka, improve your skills. Read books, take online courses, and find ways to earn using your knowledge.',
+    spendingVideo2Title: "Smart Investment: Buy Land",
+    spendingVideo2Subtitle:
+    "Land is a safe and profitable investment. Check papers and location before you buy. It’s more flexible than flats or crypto.",
+    spendingVideo1Subtitle:
+    "No matter how much you earn, if you manage it well, grow it, invest it, and protect it, your future will be secure.",
+    spendingVideo1Title: "Manage, Grow, Invest & Protect Money",
+    apptourDashSubtitle: "Explore the main overview",
+    searchTextfiedText: "Search for topics..",
+    expenseTrackingSubtite: "Track your daily spending",
+    savingGoalheading: "Setting Up Saving Goals",
+    savingGoalSubheading: "Set and smash goals",
+    savingGoalSubtitled:
+    "Learn how to set, track, and achieve your personal savings goals using the app’s built-in features.",
+    learnHub: "LearnHub",
+    learnHubSubtitle: "Central learning area",
+    tourBudgetSubTitle: "Stay within budget",
+    tourCahtBotSubtite: "Your friendly guide",
+    tourReportSubtite: "See the full picture",
+    settingSubHeading: "Adjust preferences",
+    smartSpendingTips: 'Smart Spending Tips',
+    appTitle: 'Finney',
+    settings: 'Settings',
+    viewProfile: 'View Profile',
+    profileInformation: 'Profile Information',
+    fullName: 'Full Name',
+    phoneNumber: 'Phone Number',
+    address: 'Address',
+    email: 'Email',
+    userId: 'User ID',
+    edit: 'Edit',
+    save: 'Save',
+    close: 'Close',
+    appearance: 'Appearance',
+    language: 'Language',
+    languageEnglish: 'English',
+    languageBengali: 'Bengali',
+    currency: 'Currency',
+    currencyBDT: 'Bangladeshi Taka (৳)',
+    currencyAUD: 'Australian Dollar (AUD)',
+    textSize: 'Text Size',
+    management: 'Management',
+    security: 'Security',
+    setPin: 'Set PIN',
+    enterPin: 'Enter 4-digit PIN',
+    confirmPin: 'Confirm 4-digit PIN',
+    pinSaved: 'PIN saved!',
+    invalidPin: 'Please enter a 4-digit PIN',
+    pinsDoNotMatch: 'Pins do not match',
+    cancel: 'Cancel',
+    helpSupport: 'Help & Support',
+    helpSupportComingSoon: 'Help & Support page coming soon!',
+    logOut: 'Log Out',
+    signedOut: 'Successfully signed out',
+    errorLoadingData: 'Failed to load user data',
+    errorSavingData: 'Failed to save user data',
+    user: 'User',
+    notAvailable: 'Not available',
+    financialBasics: 'Financial Basics',
+    askFinneyAI: 'Ask Finney AI for any help',
+    moneyManagement: 'Money Management',
+    moneyManagementSubtitle: 'Track, plan, and control your money',
+    savingBudgeting: 'Saving & Budgeting',
+    savingBudgetingSubtitle: 'Learn how to save and budget smartly',
+    investingFundamentals: 'Investing Fundamentals',
+    investingFundamentalsSubtitle: 'Understand how to grow your money',
+    financialSafety: 'Financial Safety',
+    financialSafetySubtitle: 'Stay secure and avoid scams',
+    keyPoints: 'Key Points',
+    learnMore: 'Learn More',
+    backToTopics: 'Back to Topics',
+    aiAssistant: 'AI Assistant',
+    moneyManagementPoint1: 'Track income and expenses regularly',
+    moneyManagementPoint2: 'Differentiate between needs and wants',
+    moneyManagementPoint3: 'Understand basic banking services',
+    moneyManagementPoint4: 'Maintain a simple financial record',
+    savingBudgetingPoint1: 'Follow the 50-30-20 rule (Needs-Wants-Savings)',
+    savingBudgetingPoint2: 'Build an emergency fund (3-6 months expenses)',
+    savingBudgetingPoint3: 'Automate your savings',
+    savingBudgetingPoint4: 'Review and adjust budget monthly',
+    investingFundamentalsPoint1: 'Understand risk and return',
+    investingFundamentalsPoint2: 'Diversify your investments',
+    investingFundamentalsPoint3: 'Learn about stocks, bonds, and mutual funds',
+    investingFundamentalsPoint4:
+    'Start with small investments and grow gradually',
+    financialSafetyPoint1: 'Recognize and avoid financial scams',
+    financialSafetyPoint2: 'Understand the importance of insurance',
+    financialSafetyPoint3: 'Secure your online financial accounts',
+    financialSafetyPoint4: 'Learn about identity theft protection',
+    resourceMoneyManagementVideo: 'Basic Money Management',
+    resourceMoneyManagementArticle1: 'Investopedia: Personal Finance Basics',
+    resourceMoneyManagementArticle2:
+    'Investopedia: Ultimate Guide to Financial Literacy',
+    resourceSavingVideo: 'Budgeting for Beginners; Learn 50-30-20 Rule',
+    resourceSavingArticle: 'NerdWallet: How to Budget Money',
+    resourceInvestingVideo: 'Investing basics by Professor Dave',
+    resourceInvestingArticle: 'Investopedia: Investing Basics',
+    resourceSafetyVideo1: 'Financial Safety Tips for Mobile Banking',
+    resourceSafetyVideo2: 'Guide to Financial Security',
+    resourceSafetyArticle1: 'Investopedia: Financial Security Tips',
+    resourceSafetyArticle2: 'MoneySmart: Protect Yourself from Scams',
+    chatbotTitle: 'Finney AI',
+    chatbotHelp: 'Help',
+    chatbotClearChat: 'Clear Chat',
+    welcomeMessage: 'Welcome to Finney AI! How can I assist you today?',
+    suggestedQuestion1: 'What is budgeting?',
+    suggestedQuestion2: 'How can I save money effectively?',
+    suggestedQuestion3: 'What are the basics of investing?',
+    chatbotsuggestedQuestion1: "Summatize my spending for this month",
+    chatbotsuggestedQuestion2: 'What is my highest spending category?',
+    chatbotsuggestedQuestion3: 'Tips for reducing my daily expenses',
+    financialLearning: 'Financial Learning',
+    beginner: 'Beginner',
+    beginnerSubtitle: 'Learn basic money skills',
+    intermediate: 'Intermediate',
+    intermediateSubtitle: 'Build better financial habits',
+    advanced: 'Advanced',
+    advancedSubtitle: 'Grow your wealth',
+    testYourKnowledge: 'Test Your Knowledge',
+    testYourKnowledgeSubtitle: 'Take a quiz to check your understanding',
+    failedToLoadDashboardData: 'Failed to load dashboard data',
+    balanceCardTitle: 'Balance Overview',
+    timeRangeSelectorLabel: 'Select Time Range',
+    recentTransactionsTitle: 'Recent Transactions',
+    addTransactionTitle: 'Add Transaction',
+    aiPoweredFeatures: 'AI-Powered Features',
+    moneyTools: 'Money Tools',
+    insights: 'Insights',
+    goals: 'Goals',
+    thinking: 'Thinking...',
+    balance: 'Balance',
+    'financeAcademy': 'Finance Academy',
+    income: 'Income',
+    expenses: 'Expenses',
+    expense: 'Expense',
+    thisMonth: 'This Month',
+    thisWeek: 'This Week',
+    thisYear: 'This Year',
+    customRange: 'Custom Range',
+    selectTimePeriod: 'Select Time Period',
+    allTime: 'All Time',
+    mon: 'Mon',
+    tue: 'Tue',
+    wed: 'Wed',
+    thu: 'Thu',
+    fri: 'Fri',
+    sat: 'Sat',
+    sun: 'Sun',
+    jan: 'Jan',
+    feb: 'Feb',
+    mar: 'Mar',
+    apr: 'Apr',
+    may: 'May',
+    jun: 'Jun',
+    jul: 'Jul',
+    aug: 'Aug',
+    sep: 'Sep',
+    oct: 'Oct',
+    nov: 'Nov',
+    dec: 'Dec',
+    spendingAnalysis: 'Spending Analysis',
+    categoryBreakdown: 'Category Breakdown',
+    expenseAnalysis: 'Expense Analysis',
+    incomeAnalysis: 'Income Analysis',
+    transactions: 'Transactions',
+    selectItemsToDelete: 'Select Items to Delete',
+    noTransactionsInThisPeriod: 'No transactions in this period',
+    seeAll: 'See All',
+    deleteTransactions: 'Delete Transactions',
+    confirmDeleteTransactions:
+    'Are you sure you want to delete %d transaction(s)?',
+    delete: 'Delete',
+    errorLoadingTransactions: 'Error loading transactions',
+    confirmDeleteAction:
+    'This action cannot be undone. Are you sure you want to delete %d transaction(s)?',
+    deleteTransaction: 'Delete Transaction',
+    confirmDeleteSingleTransaction:
+    'This action cannot be undone. Are you sure you want to delete this transaction?',
+    savedAmount: 'Saved: %s',
+    targetAmount: 'Target: %s',
+    percentCompleted: '%s% completed',
+    targetDate: 'Target date: %s',
+    daysLeft: '%d days left',
+    daysOverdue: '%d days overdue',
+    addSavings: 'Add Savings',
+    addToSavings: 'Add to Savings',
+    amount: 'Amount',
+    savings: 'Saving',
+    pleaseEnterAmount: 'Please enter an amount',
+    pleaseEnterValidNumber: 'Please enter a valid number',
+    amountMustBePositive: 'Amount must be positive',
+    amountExceedsTarget:
+    'Amount exceeds remaining target of %s. Please enter a smaller amount.',
+    add: 'Add',
+    deleteGoal: 'Delete Goal',
+    confirmDeleteGoal: 'Are you sure you want to delete "%s"?',
+    addSavingGoal: 'Add Saving Goal',
+    editSavingGoal: 'Edit Saving Goal',
+    savingGoalPurpose: 'Saving Goal Purpose',
+    savingGoalHint: 'e.g. Saving for new Car...',
+    description: 'Description',
+    descriptionHint: 'Enter description (optional)',
+    amountHint: '0.00',
+    pleaseEnterPositiveAmount: 'Please enter a positive amount',
+    pleaseEnterSavingGoalName: 'Please enter a saving goal name',
+    saveGoal: 'Save Goal',
+    goalCreated: 'Goal "%s" created!',
+    goalUpdated: 'Goal "%s" updated!',
+    errorSavingGoal: 'Error saving goal. Please try again.',
+    mySavingGoals: 'My Saving Goals',
+    newGoal: 'New Goal',
+    loadingGoals: 'Loading your goals...',
+    noSavingGoals: 'No saving goals yet',
+    createFirstGoal: 'Create Your First Goal',
+    totalSavingsProgress: 'Total Savings Progress',
+    percentComplete: '%s% Complete',
+    savingsOfTarget: '%s of %s',
+    deleteGoalQuestion: 'Delete Goal?',
+    confirmDeleteGoalPermanent: 'This will permanently delete "%s"',
+    addedToSavings: 'Added %s to "%s"',
+    goalDeleted: '"%s" was deleted',
+    goalWasDeleted: 'Goal was deleted',
+    amountGreaterThanZero: 'Please enter an amount greater than zero',
+    couldNotAddSavings: 'Could not add to savings. Please try again.',
+    couldNotDeleteGoal: 'Could not delete goal. Please try again.',
+    goalsRefreshed: 'Your goals have been refreshed',
+    aboutSavingGoals: 'About Saving Goals',
+    trackProgress: 'Track your progress',
+    trackProgressDescription: 'See how close you are to reaching each goal',
+    addMoneyAnytime: 'Add money anytime',
+    addMoneyAnytimeDescription:
+    'Contribute to your goals whenever you save money',
+    setTargetDates: 'Set target dates',
+    setTargetDatesDescription: 'Stay motivated with clear deadlines',
+    gotIt: 'Got It',
+    addExpense: 'Add Expense',
+    editExpense: 'Edit Expense',
+    addIncome: 'Add Income',
+    editIncome: 'Edit Income',
+    category: 'Category',
+    date: 'Date',
+    pleaseEnterValidAmount: 'Please enter a valid amount',
+    pleaseSelectCategory: 'Please select a category',
+    transactionSaved: 'Transaction saved successfully',
+    transactionUpdated: 'Transaction updated successfully',
+    failedToSaveTransaction: 'Failed to save transaction. Please try again.',
+    food: 'Food',
+    transport: 'Transport',
+    utilities: 'Utilities',
+    entertainment: 'Entertainment',
+    shopping: 'Shopping',
+    health: 'Health',
+    others: 'Others',
+    salary: 'Salary',
+    investment: 'Investment',
+    business: 'Business',
+    gift: 'Gift',
+    noTransactionsYet: 'No transactions yet',
+    today: 'Today',
+    yesterday: 'Yesterday',
+    dashboardHelpTitle: 'How to use the Dashboard',
+    dashboardHelpSubtitle: 'Track your finances easily',
+    dashboardHelpBalance:
+    'View your current balance, income, and expenses at a glance',
+    dashboardHelpAddTransaction: 'Add new transactions using the + button',
+    dashboardHelpDeleteTransaction: 'Swipe left on transactions to delete them',
+    dashboardHelpSpendingPatterns:
+    'Monitor weekly spending patterns and category breakdown',
+    dashboardHelpRefresh: 'Pull down to refresh your financial data',
+    total: 'Total',
+    noExpenseData: 'No expense data for this period',
+    noIncomeData: 'No income data for this period',
+    pagination: 'Page %d of %d',
+    hideAssistant: 'Hide Assistant',
+    askAboutChart: 'Ask about this chart',
+    askAboutChartHint: 'Ask about this chart...',
+    assistant: 'Assistant',
+    queryError: 'Sorry, I couldn\'t process that question.',
+    queryErrorWithMessage: 'Sorry, an error occurred: %s',
+    chartContext:
+    'I\'m looking at a %s chart showing my %s data. The chart data is: %s.',
+    queryPrompt:
+    'You are a helpful financial assistant. Answer the following question about the chart data. Keep your answer brief (under 100 words) and focused on the chart data. If you can\'t answer from the data provided, state that clearly. Chart context: %s Question: %s',
+    advancedQuizTitle: 'Advanced Quiz',
+    quizCompleted: 'Quiz Completed!',
+    quizResultScore: 'Your score: %s/%s',
+    quizFinish: 'Finish',
+    quizTryAgain: 'Try Again',
+    quizQuestion1: 'What is the main benefit of compound interest?',
+    quizQuestion1Answer1: 'Money grows faster over time',
+    quizQuestion1Answer2: 'It reduces your taxes',
+    quizQuestion1Answer3: 'It\'s safer than regular interest',
+    quizQuestion2: 'What does diversification in investing mean?',
+    quizQuestion2Answer1: 'Putting all money in one stock',
+    quizQuestion2Answer2: 'Spreading investments across different assets',
+    quizQuestion2Answer3: 'Investing only in what you know',
+    quizQuestion3: 'What is a key feature of index funds?',
+    quizQuestion3Answer1: 'High management fees',
+    quizQuestion3Answer2: 'Tracks a specific market index',
+    quizQuestion3Answer3: 'Guaranteed returns',
+    quizQuestion4: 'What is the 4% retirement rule?',
+    quizQuestion4Answer1: 'Withdraw 4% of savings annually in retirement',
+    quizQuestion4Answer2: 'Save 4% of income for retirement',
+    quizQuestion4Answer3: 'Work 4% longer than planned',
+    quizQuestion5:
+    'What type of insurance is most important for income protection?',
+    quizQuestion5Answer1: 'Travel insurance',
+    quizQuestion5Answer2: 'Income protection insurance',
+    quizQuestion5Answer3: 'Pet insurance',
+    advancedScreenTitle: 'Advanced Financial Skills',
+    investmentBasicsTitle: 'Investment Basics',
+    investmentBasicsPoint1: 'Understanding stocks and bonds',
+    investmentBasicsPoint2: 'Risk vs return principles',
+    investmentBasicsPoint3: 'Diversification strategies',
+    retirementPlanningTitle: 'Retirement Planning',
+    retirementPlanningPoint1: 'Understanding superannuation',
+    retirementPlanningPoint2: 'Compound interest power',
+    retirementPlanningPoint3: 'Retirement savings goals',
+    insuranceProtectionTitle: 'Insurance & Protection',
+    insuranceProtectionPoint1: 'Types of insurance needed',
+    insuranceProtectionPoint2: 'Calculating coverage needs',
+    insuranceProtectionPoint3: 'Balancing cost and protection',
+    takeAdvancedQuiz: 'Take Advanced Quiz',
+    beginnerQuizTitle: 'Beginner Quiz',
+    beginnerQuizQuestion1: 'What is the first step in managing money?',
+    beginnerQuizQuestion1Answer1: 'Spend everything you earn',
+    beginnerQuizQuestion1Answer2: 'Track your income and expenses',
+    beginnerQuizQuestion1Answer3: 'Invest in stocks',
+    beginnerQuizQuestion2: 'Which is a "need" rather than a "want"?',
+    beginnerQuizQuestion2Answer1: 'New smartphone',
+    beginnerQuizQuestion2Answer2: 'Groceries',
+    beginnerQuizQuestion2Answer3: 'Vacation',
+    beginnerQuizQuestion3: 'How much should you ideally save from your income?',
+    beginnerQuizQuestion3Answer1: '5%',
+    beginnerQuizQuestion3Answer2: '20%',
+    beginnerQuizQuestion3Answer3: '50%',
+    beginnerScreenTitle: 'Beginner Financial Skills',
+    understandingMoneyTitle: 'Understanding Money',
+    understandingMoneyPoint1: 'What is money and how it works',
+    understandingMoneyPoint2: 'Different types of money (cash, digital)',
+    understandingMoneyPoint3: 'Basic needs vs wants',
+    simpleBudgetingTitle: 'Simple Budgeting',
+    simpleBudgetingPoint1: 'Tracking daily expenses',
+    simpleBudgetingPoint2: 'The 50-30-20 rule simplified',
+    simpleBudgetingPoint3: 'Saving small amounts regularly',
+    bankAccountsTitle: 'Bank Accounts',
+    bankAccountsPoint1: 'Types of bank accounts',
+    bankAccountsPoint2: 'How to deposit and withdraw money',
+    bankAccountsPoint3: 'Understanding bank statements',
+    takeBeginnerQuiz: 'Take Beginner Quiz',
+    resourceError: 'Could not open resource: %s',
+    intermediateQuizTitle: 'Intermediate Quiz',
+    intermediateQuizQuestion1: 'What is the purpose of an emergency fund?',
+    intermediateQuizQuestion1Answer1: 'To pay for vacations',
+    intermediateQuizQuestion1Answer2: 'To cover unexpected expenses',
+    intermediateQuizQuestion1Answer3: 'To invest in stocks',
+    intermediateQuizQuestion2:
+    'What percentage of your income should go to needs in the 50-30-20 rule?',
+    intermediateQuizQuestion2Answer1: '20%',
+    intermediateQuizQuestion2Answer2: '30%',
+    intermediateQuizQuestion2Answer3: '50%',
+    intermediateQuizQuestion3: 'What is a good credit score range?',
+    intermediateQuizQuestion3Answer1: '300-500',
+    intermediateQuizQuestion3Answer2: '670-850',
+    intermediateQuizQuestion3Answer3: '100-300',
+    intermediateQuizQuestion4: 'What is the first step to get out of debt?',
+    intermediateQuizQuestion4Answer1: 'Ignore it and hope it goes away',
+    intermediateQuizQuestion4Answer2: 'Create a debt repayment plan',
+    intermediateQuizQuestion4Answer3: 'Take on more debt to pay it off',
+    intermediateScreenTitle: 'Intermediate Financial Skills',
+    advancedBudgetingTitle: 'Advanced Budgeting',
+    advancedBudgetingPoint1: 'Creating a monthly budget plan',
+    advancedBudgetingPoint2: 'Setting financial goals',
+    advancedBudgetingPoint3: 'Managing irregular income',
+    creditBasicsTitle: 'Credit Basics',
+    creditBasicsPoint1: 'Understanding credit scores',
+    creditBasicsPoint2: 'Responsible credit card use',
+    creditBasicsPoint3: 'Avoiding debt traps',
+    savingStrategiesTitle: 'Saving Strategies',
+    savingStrategiesPoint1: 'Emergency funds (3-6 months)',
+    savingStrategiesPoint2: 'Saving for big purchases',
+    savingStrategiesPoint3: 'Automating your savings',
+    takeIntermediateQuiz: 'Take Intermediate Quiz',
+    quizHomeTitle: 'Financial Knowledge Quiz',
+    beginnerLevelQuiz: 'Beginner Level Quiz',
+    intermediateLevelQuiz: 'Intermediate Level Quiz',
+    advancedLevelQuiz: 'Advanced Level Quiz',
+    transactionAddedSuccess: 'Transaction added successfully',
+    transactionCanceled: 'No problem, I won\'t add that transaction.',
+    transactionAddError:
+    'Sorry, I couldn\'t add the transaction. Please try again later.',
+    transactionConfirmPrompt:
+    'I\'m not sure what you want to do with this transaction. Let me show you the options.',
+    transactionNoPending:
+    'I don\'t have any transaction to confirm at the moment.',
+    chatbotHelpTitle: 'How to Use Finney AI',
+    chatbotHelpSubtitle: 'Your personal financial assistant',
+    chatbotHelpInstruction1: 'Ask finance-related questions for instant advice',
+    chatbotHelpInstruction2: 'Upload financial images for analysis',
+    chatbotHelpInstruction3:
+    'You can use the microphone to talk with the AI assistant',
+    chatbotHelpInstruction4: 'Try suggested questions or type your own',
+    welcomeTryAsking: 'Try asking',
+    welcomeWriteQuestion: 'Write your own question',
+    voiceListening: 'Listening... Tap again when you finish',
+    voiceProcessing: 'Processing...',
+    voiceTapMic: 'Tap microphone to talk with Finney AI',
+    voiceSttNotAvailable: 'Speech recognition not available on this device',
+    transactionPreviewTitle: 'Transaction Preview',
+    transactionPreviewCancel: 'Cancel',
+    transactionPreviewConfirm: 'Confirm',
+    chatInputHint: 'Ask me a financial question...',
+    nonFinancialQuestion:
+    'I\'m here to help with your financial questions. What money matters can I assist with?',
+    nonFinancialImage:
+    'I can only analyze financial documents or receipts. Need help with something financial?',
+    addNew: 'Add New',
+    categorySpentAmount: 'Spent %s in %s category (%s%%)',
+    categoryEarnedAmount: 'Earned %s from %s category (%s%%)',
+    'expenseSummary':
+    'Total expenses: %s, average: %s. Highest expense: %s on %s, and lowest expense: %s on %s.',
+    'incomeSummary':
+    'Total income: %s, average: %s. Highest income: %s on %s, and lowest income: %s on %s.',
+    'expenseCategorySummary':
+    'Highest expense is in %s category, which is %s (%s%%).',
+    'incomeCategorySummary':
+    'Highest income is from %s category, which is %s (%s%%).',
+    forgotPasswordTitle: 'Forgot Password',
+    emailHint: 'Enter your email',
+    sendResetLink: 'Send Reset Link',
+    backToLogin: 'Back to login',
+    passwordResetSuccess: 'A password reset link has been sent to your email.',
+    passwordResetError:
+    'Failed to send reset link. Please check your email and try again.',
+    dialogOk: 'OK',
+    loginTitle: 'Login to your Account',
+    passwordHint: 'Password',
+    forgotPassword: 'Forgot Password?',
+    signInButton: 'Sign In',
+    continueWith: 'Or continue with',
+    notMember: 'Not a member?',
+    registerNow: 'Register now',
+    loginError: 'Incorrect email/password. Please check again.',
+    userNotFoundError: 'User details not found in local storage.',
+    registerTitle: 'Create your Account',
+    confirmPasswordHint: 'Confirm Password',
+    signUpButton: 'Sign Up',
+    alreadyMember: 'Already a member?',
+    loginNow: 'Log in now',
+    passwordStrong: '✅ Strong password',
+    passwordWeak: '❌ Use 12+ chars w/ upper, lower, number & symbol',
+    invalidGmailError: 'Please enter a valid Gmail address.',
+    passwordsNotMatchError: 'Passwords do not match.',
+    weakPasswordError:
+    'Password must be at least 12 characters long and include uppercase, lowercase, number, and symbol.',
+    hiveStorageError: 'Failed to store user in local storage.',
+    selectLanguage: 'Select Language',
+    saveHabitTitle: 'Making Saving a Habit',
+    saveHabitDesc:
+    'It’s smart to save money regularly and turn it into a habit. The best way is to plan your savings before you spend.',
+    saveWhyTitle: 'Why Saving Is Important',
+    saveWhyDesc:
+    'Saving money for emergencies is super important. If you keep some money aside as soon as you get paid, your future will feel more secure.',
+    budgetSmartTitle: 'Smart Monthly Income Allocation',
+    budgetSmartDesc:
+    'Spend 55% on needs, 10% on long-term investments, 10% for future goals, 10% to improve your skills, and 15% for fun or charity.',
+    budgetSelfTitle: 'Investing in Yourself Pays Off Most',
+    budgetSelfDesc:
+    'Instead of starting a business with 10,000 Taka, improve your skills. Read books, take online courses, and find ways to earn using your knowledge.',
+    spendManageTitle: 'Manage, Grow, Invest & Protect Money',
+    spendManageDesc:
+    'No matter how much you earn, if you manage it well, grow it, invest it, and protect it, your future will be secure.',
+    spendLandTitle: 'Smart Investment: Buy Land',
+    spendLandDesc:
+    'Land is a safe and profitable investment. Check papers and location before you buy. It’s more flexible than flats or crypto.',
+    coachQ1:
+    'How good are you with managing your money? Boss level or still figuring it out?',
+    coachQ2: 'How much money do you usually save each month?',
+    coachQ3: 'How much do you usually spend each month?',
+    coachQ4: 'In a perfect world, how much would you love to save monthly?',
+    coachQ5: 'Can you easily tell needs apart from wants?',
+    coachQ6: 'What category eats up most of your money?',
+    coachQ7: 'Do you track where your money goes?',
+    coachQ8: 'Are you willing to adjust your spending habits?',
+    coachQ9: 'Do you often spend money without planning?',
+    coachQ10: 'When you get extra cash, do you save it or spend it?',
+    coachQ11: 'Would you rather save for a big goal or enjoy small treats now?',
+    coachSavingSmall:
+    'You are saving a small amount. Try to increase your savings bit by bit! ',
+    coachOnYourWay: 'You are on your way! Keep building your savings habit. ',
+    coachPraiseGreat: 'Great job! You are saving a lot. ',
+    never: 'Never',
+    sometimes: 'Sometimes',
+    no: 'No',
+    maybe: 'Maybe',
+    coachAdviceTitle: 'Your Savings Coach Advice',
+    coachOptBoth: 'A bit of both',
+    coachOptSaveBig: 'Save for big goal',
+    coachOptTreats: 'Enjoy small treats',
+    coachPraiseHabit: 'Great saving habit!',
+    coachRestart: 'Restart Savings Coach',
+    learnNoResults: 'No results found.',
+    tourBudgetTitle: 'Stay on Budget',
+    tourBudgetDesc:
+    'Learn how to use reminders to stick to your spending limits and avoid unnecessary purchases.',
+    tourChatbotTitle: 'AI Chat Assistant',
+    tourChatbotDesc:
+    'Understand how the chatbot helps answer your finance questions and guides you through the app.',
+    tourDashboardTitle: 'Dashboard Overview',
+    tourDashboardDesc:
+    'Learn how to navigate the dashboard and understand key metrics of your financial health.',
+    tourExpenseTitle: 'Track Spending Habits',
+    tourExpenseDesc:
+    'See how to record and monitor your everyday expenses to avoid overspending.',
+    tourLearnHubDesc:
+    'Get an overview of the main LearnHub content and how to navigate through lessons.',
+    tourLearnhubTitle: 'LearnHub Module Overview',
+    tourLearnhubDesc:
+    'A quick intro to LearnHub modules and how to use the lessons.',
+    tourReportDesc:
+    'Learn how to view and understand your financial reports for better decision-making.',
+    tourReportTitle: 'Report Overview',
+    tourSavingsTitle: 'Setting Up Saving Goals',
+    tourSavingsDesc:
+    'Learn how to set, track, and achieve your personal savings goals using the app’s built-in features.',
+    tourSettingsTitle: 'Settings Overview',
+    tourSettingsDesc:
+    'Learn how to update language, notifications, and other app settings to personalize your experience.',
+    tourMarkDone: 'Mark as Done',
+    generalQuizTitle: 'Test Your Knowledge',
+    quizScore: 'Score: %s / %s',
+    quizBack: 'Back to Quiz',
+    quizReview: 'Review Your Answers',
+    quizClearConfirm: 'Are you sure you want to clear all quiz results?',
+    quizNoResults: 'No quiz results found.',
+    quizResults: 'Quiz Results',
+    quizReset: 'Reset Quiz Results',
+    quizResetConfirm:
+    'Are you sure you want to delete all quiz results? This action cannot be undone.',
+    reset: 'Reset',
+    quizAttempts: 'Attempts',
+    quizAverage: 'Average',
+    quizLastAttempt: 'Last Attempt',
+    quizQ1: 'What is the purpose of the Finney app?',
+    quizQ1A1: 'Gaming',
+    quizQ1A2: 'Social networking',
+    quizQ1A3: 'Financial literacy',
+    quizQ1A4: 'Online shopping',
+    quizQ2: 'Which screen helps track expenses?',
+    quizQ2A1: 'Dashboard',
+    quizQ2A2: 'Chatbot',
+    quizQ2A3: 'Learn',
+    quizQ2A4: 'Settings',
+    quizQ3: 'What is a budget used for?',
+    quizQ3A1: 'Tracking spending',
+    quizQ3A2: 'Entertainment',
+    quizQ3A3: 'Investing in crypto',
+    quizQ3A4: 'Buying groceries',
+    quizQ4: 'Which category would rent typically go under?',
+    quizQ4A1: 'Savings',
+    quizQ4A2: 'Needs',
+    quizQ4A3: 'Wants',
+    quizQ4A4: 'Luxury',
+    quizQ5: 'What is one smart spending tip?',
+    quizQ5A1: 'Buy unnecessary items',
+    quizQ5A2: 'Track every dollar',
+    quizQ5A3: 'Avoid discounts',
+    quizQ5A4: 'Spend impulsively',
+    quizQ6: 'Why should you wait 24 hours before buying something unplanned?',
+    quizQ6A1: 'Shops may close',
+    quizQ6A2: 'Helps avoid impulse spending',
+    quizQ6A3: 'Prices might drop',
+    quizQ6A4: 'You might get paid',
+    quizQ7: 'What is a “want” in budgeting terms?',
+    quizQ7A1: 'Essential food',
+    quizQ7A2: 'Rent',
+    quizQ7A3: 'Medical expenses',
+    quizQ7A4: 'Designer sneakers',
+    quizQ8: 'Which of the following helps increase income?',
+    quizQ8A1: 'Skipping meals',
+    quizQ8A2: 'Skill development',
+    quizQ8A3: 'Spending more',
+    quizQ8A4: 'Taking loans',
+    quizQ9: 'What is the 50-30-20 rule commonly used for?',
+    quizQ9A1: 'Meal planning',
+    quizQ9A2: 'Work hours',
+    quizQ9A3: 'Budgeting',
+    quizQ9A4: 'Exercise routine',
+    quizQ10: 'What should you do before spending money?',
+    quizQ10A1: 'Check trends',
+    quizQ10A2: 'Post on social media',
+    quizQ10A3: 'Make a budget plan',
+    quizQ10A4: 'Borrow from friends',
+    quizQ11:
+    'Where is it safest to invest first, according to the Finney app videos?',
+    quizQ11A1: 'Crypto',
+    quizQ11A2: 'Land',
+    quizQ11A3: 'Forex',
+    quizQ11A4: 'NFTs',
+    quizQ12: 'What’s a benefit of cooking at home?',
+    quizQ12A1: 'More plastic waste',
+    quizQ12A2: 'Higher delivery cost',
+    quizQ12A3: 'Saves money and improves health',
+    quizQ12A4: 'Takes more time',
+    quizQ13: 'Why is saving early in the month smart?',
+    quizQ13A1: 'To avoid shopping',
+    quizQ13A2: 'So you don’t have to budget',
+    quizQ13A3: 'To build financial discipline',
+    quizQ13A4: 'To pay fines early',
+    quizQ14:
+    'How much should ideally go into personal development according to budgeting tips?',
+    quizQ14A1: '55%',
+    quizQ14A2: '15%',
+    quizQ14A3: '30%',
+    quizQ14A4: '10%',
+    quizQ15: 'What does “protecting your money” usually refer to?',
+    quizQ15A1: 'Spending on gadgets',
+    quizQ15A2: 'Avoiding all risks',
+    quizQ15A3: 'Using insurance and emergency funds',
+    quizQ15A4: 'Buying gold',
+    quizQ16: 'What is the first step in setting a financial goal?',
+    quizQ16A1: 'Spend freely',
+    quizQ16A2: 'Set a savings target',
+    quizQ16A3: 'Shop online',
+    quizQ16A4: 'Borrow money',
+    quizQ17: 'Which feature provides instant financial help in the Finney app?',
+    quizQ17A1: 'Settings',
+    quizQ17A2: 'QnA Chatbot',
+    quizQ17A3: 'Expense Tracker',
+    quizQ17A4: 'Profile',
+    quizQ18: 'An emergency fund is mainly used for?',
+    quizQ18A1: 'Vacations',
+    quizQ18A2: 'Unexpected expenses',
+    quizQ18A3: 'Entertainment',
+    quizQ18A4: 'Shopping',
+    quizQ19: 'Which is a good saving habit?',
+    quizQ19A1: 'Impulse buying',
+    quizQ19A2: 'Tracking expenses',
+    quizQ19A3: 'Ignoring bills',
+    quizQ19A4: 'Overspending',
+    quizQ20: 'If you earn 20000 and spend 18000, your savings are?',
+    quizQ20A1: '5000',
+    quizQ20A2: '3000',
+    quizQ20A3: '2000',
+    quizQ20A4: '1000',
+    quizQ21: 'What usually causes financial stress?',
+    quizQ21A1: 'Overspending',
+    quizQ21A2: 'Saving regularly',
+    quizQ21A3: 'Following a budget',
+    quizQ21A4: 'Having insurance',
+    quizQ22: 'When should you ideally save money?',
+    quizQ22A1: 'End of the month',
+    quizQ22A2: 'After income',
+    quizQ22A3: 'After expenses',
+    quizQ22A4: 'When borrowing',
+    quizQ23: 'Budgeting helps in?',
+    quizQ23A1: 'Spending more',
+    quizQ23A2: 'Managing money better',
+    quizQ23A3: 'Losing savings',
+    quizQ23A4: 'Gambling',
+    quizQ24: 'Which is a “need” expense?',
+    quizQ24A1: 'Netflix subscription',
+    quizQ24A2: 'Groceries',
+    quizQ24A3: 'Luxury car',
+    quizQ24A4: 'Designer watch',
+    quizQ25: 'Before investing, you should always check?',
+    quizQ25A1: 'Popularity',
+    quizQ25A2: 'Risk and return',
+    quizQ25A3: 'Number of likes',
+    quizQ25A4: 'Brand name',
+    quizQ26: 'How to reduce impulse buying?',
+    quizQ26A1: 'Use credit cards',
+    quizQ26A2: 'Use shopping lists',
+    quizQ26A3: 'Follow ads',
+    quizQ26A4: 'Shop when emotional',
+    quizQ27: 'A good financial goal is?',
+    quizQ27A1: 'Vague and distant',
+    quizQ27A2: 'Specific and measurable',
+    quizQ27A3: 'Expensive and fast',
+    quizQ27A4: 'Lucky and random',
+    quizQ28: 'Saving money mainly helps with?',
+    quizQ28A1: 'Showing off',
+    quizQ28A2: 'Building security',
+    quizQ28A3: 'Buying unnecessary items',
+    quizQ28A4: 'Spending faster',
+    quizQ29: 'Which section in the Finney app helps improve financial skills?',
+    quizQ29A1: 'Settings',
+    quizQ29A2: 'Learn Academy',
+    quizQ29A3: 'Notifications',
+    quizQ29A4: 'Profile',
+    quizQ30: 'If expenses are greater than income, what happens?',
+    quizQ30A1: 'Debt increases',
+    quizQ30A2: 'Savings increase',
+    quizQ30A3: 'Net worth grows',
+    quizQ30A4: 'Salary doubles',
+    reviewAnswers: 'Review Answers',
+    backToQuiz: 'Back to Quiz',
+    dashboard: 'Dashboard',
+    expenseTracking: 'Expense Tracking',
+    report: 'Report',
+    savingGoals: 'Saving Goals',
+    quiz: 'Quiz',
+    learningReset: 'Learning progress reset.',
+    learningHub: 'Learning Hub',
+    ongoing: 'Ongoing',
+    completed: 'Completed',
+    noResultsFound: 'No results found.',
+    savingMoneyEasy: 'Saving Money Easy',
+    simpleBudgeting: 'Simple Budgeting',
+    lessons: "Lessons",
+    appTour: "App Tour",
+    progress: "Progress",
+    smartSpendingTipsSubtitle: "Spend smarter, live better",
+    simpleBudgetingSubtitle: "Plan with ease",
+    savingMoneyEasySubtitle: "Build your future",
+    savingsCoach: "Savings Coach",
+    savingsCoachSubtitle: "Cut costs, not dreams",
+    taketheQuiz: "Take the Quiz",
+    taketheQuizSubtitle: "Test your knowledge",
+    viewQuizResult: "View Quiz Result",
+    quizResultSubtitle: "See your scores",
+
+    coachOptMoneyBoss: 'Money boss',
+    coachOptDoingOkay: 'Doing okay',
+    coachOptNeedsWork: 'Needs work',
+    coachOpt0_200: '\$0-\$200',
+    coachOpt200_500: '\$200-\$500',
+    coachOpt500plus: '\$500+',
+    coachOpt0_1000: '\$0-\$1000',
+    coachOpt1000_2000: '\$1000-\$2000',
+    coachOpt2000plus: '\$2000+',
+    coachOpt100: '\$100',
+    coachOpt500: '\$500',
+    coachOpt1000plus: '\$1000+',
+    coachOptAlways: 'Always',
+    coachOptSometimes: 'Sometimes',
+    coachOptNotReally: 'Not really',
+    coachOptFood: 'Food',
+    coachOptShopping: 'Shopping',
+    coachOptEntertainment: 'Entertainment',
+    coachOptNever: 'Never',
+    coachOptYes: 'Yes',
+    coachOptMaybe: 'Maybe',
+    coachOptNo: 'No',
+    coachOptRarely: 'Rarely',
+    coachOptSaveIt: 'Save it',
+    coachOptSpendIt: 'Spend it',
+
+    coachOptNotSure: 'Not sure',
+    coachOtherHint: 'Other (please specify)',
+    coachSeeResult: 'See Result',
+    coachNext: 'Next',
+    coachSavingPlan: 'Your Saving Plan',
+    'quizLoadError': 'Failed to load quiz results. Please try again.',
+    'quizResetSuccess': 'Quiz results have been cleared.',
+    'error': 'Error',
+    'refresh': 'Refresh',
+    'clearAllResults': 'Clear All Results',
+    'learnFinanceDescription': 'Learn the basics of finance through videos and quizzes.',
+
+  };
+
+  static const Map<String, String> bn = {
+    'quizLoadError': 'কুইজ ফলাফল লোড করতে ব্যর্থ হয়েছে। আবার চেষ্টা করুন।',
+    'quizResetSuccess': 'কুইজের ফলাফল সাফ করা হয়েছে।',
+    'error': 'ভুল',
+    'refresh': 'রিফ্রেশ',
+    'clearAllResults': 'সব ফলাফল মুছে ফেলুন',
+    'learnFinanceDescription': 'ভিডিও এবং কুইজের মাধ্যমে অর্থের মূল ধারণা শিখুন।',
+
+
+    greatJob: "🏆 চমৎকার কাজ!",
+    goodEffort: "👍 ভালো চেষ্টা",
+    tryAgain: "🔄 আবার চেষ্টা করুন",
+    coachSpendingHigh:
+    "কিন্তু আপনার খরচ বেশি। অন্তত %s থেকে ১৫০ ডলার কমানোর চেষ্টা করুন।\n",
+    coachSpendingMedium: "এখনও %s থেকে প্রায় ১০০ ডলার কমানোর সুযোগ আছে।\n",
+    coachSpendingHealthy: "আপনার খরচ স্বাস্থ্যকর। এভাবেই চালিয়ে যান!\n",
+    coachTrackStart:
+    "আপনার টাকা কোথায় যাচ্ছে তা ট্র্যাক করা শুরু করুন। অবাক হবেন!\n",
+    coachTrackMore:
+    "আরও একটু সিরিয়াসলি ট্র্যাক করলে লুকানো খরচ বেরিয়ে আসবে।\n",
+    coachAdjustNo: "একটা খাবার কম খেলেও মাসে ১০০+ ডলার সেভ করা যায়।\n",
+    coachAdjustMaybe: "ছোট ছোট পরিবর্তন ট্রাই করুন। ফলাফল ভালো লাগতে পারে!\n",
+    coachAdjustYes: "আপনি প্রস্তুত! এবার সেভিংস লক্ষ্য পূরণে ঝাঁপিয়ে পড়ুন!\n",
+    score: "স্কোর",
+    accuracy: "সঠিকতা",
+    highScore: "🏅 সর্বোচ্চ স্কোর",
+    feedbackMessageNotBad: "🧠 খারাপ না! আরেকটু শিখলেই অনেক দূর যেতে পারবেন।",
+    feedbackMessageKeepGoing:
+    "📘 চালিয়ে যান! লার্ন সেকশনটি আবার দেখুন এবং চেষ্টা করুন।",
+    feedbackMessageGood: "👍 দারুণ! আপনি সঠিক পথে আছেন!",
+    feedbackMessageExcellent: "🎉 অসাধারণ! আপনি অর্থ ব্যবস্থাপনায় মাস্টার!",
+    restartQuiz: 'কুইজ পুনরায় চালু করুন',
+    savingMoneyVideo2Title: "সেভিং কেন জরুরি",
+    savingMoneyVideo2Subtitle:
+    "হঠাৎ প্রয়োজনে টাকা সেভ থাকা খুবই জরুরি। ইনকাম পাওয়ার সাথে সাথেই যদি কিছু টাকা আলাদা করে রাখেন, আপনার ভবিষ্যৎ অনেক বেশি সুরক্ষিত থাকবে।",
+
+    savingMoneyVideo1Title: "সেভ করা অভ্যাসে পরিণত করুন",
+    savingMoneyVideo1Subtitle:
+    "নিয়মিত সেভ করা চালিয়ে গেলে সেটা একটা ভালো অভ্যাসে পরিণত হয়। খরচের আগেই সেভিংস প্ল্যান করাটাই সবচেয়ে বুদ্ধিমানের কাজ।",
+    simpleBudgetingvideo1Title: "স্মার্ট মাসিক ইনকাম ভাগ করা",
+    simpleBudgetingvideo1Subtitle:
+    "৫৫% প্রয়োজনীয় জিনিসে, ১০% লং-টার্ম ইনভেস্টমেন্টে, ১০% ভবিষ্যতের লক্ষ্য পূরণে, ১০% নিজের স্কিল বাড়াতে, আর ১৫% ফান বা দান খয়রাতে খরচ করুন।",
+    simpleBudgetingvideo2Title: "নিজের উপর ইনভেস্ট করাই সবচেয়ে কাজের",
+    simpleBudgetingvideo2Subtitle:
+    "১০,০০০ টাকা দিয়ে বিজনেস শুরু না করে আগে নিজের স্কিল বাড়ান। বই পড়ুন, অনলাইন কোর্স করুন, আর নিজের জ্ঞান দিয়ে ইনকাম করার উপায় খুঁজে বের করুন।",
+    spendingVideo2Title: "স্মার্ট ইনভেস্টমেন্ট: জমি কিনুন",
+    spendingVideo2Subtitle:
+    "জমি একটা সেফ আর লাভজনক ইনভেস্টমেন্ট। কেনার আগে কাগজপত্র আর লোকেশন ভালো করে দেখে নিন। এটা ফ্ল্যাট বা ক্রিপ্টোর চেয়ে অনেক বেশি ফ্লেক্সিবল।",
+    spendingVideo1Subtitle:
+    "আপনি যতই আয় করুন না কেন — ঠিকভাবে ম্যানেজ, বাড়ানো, ইনভেস্ট আর নিরাপদ রাখলে ভবিষ্যৎ হবে সুরক্ষিত।",
+    spendingVideo1Title: "টাকা ম্যানেজ, বাড়ান, ইনভেস্ট আর সুরক্ষা দিন",
+    apptourDashSubtitle: "প্রধান ওভারভিউ অন্বেষণ করুন",
+    searchTextfiedText: "বিষয়বস্তু অনুসন্ধান করুন..",
+    expenseTrackingSubtite: "আপনার দৈনিক খরচ ট্র্যাক করুন",
+    savingGoalheading: "সেভিং গোল সেটআপ",
+    savingGoalSubheading: "গোল সেট করুন এবং অর্জন করুন",
+    savingGoalSubtitled:
+    "অ্যাপের অন্তর্নির্মিত বৈশিষ্ট্যগুলি ব্যবহার করে কীভাবে আপনার ব্যক্তিগত সেভিং গোল সেট, ট্র্যাক এবং অর্জন করবেন তা শিখুন।",
+    learnHub: "লার্নহাব",
+    learnHubSubtitle: "কেন্দ্রীয় শেখার এলাকা",
+    tourBudgetSubTitle: "বাজেটের মধ্যে থাকুন",
+    tourCahtBotSubtite: "আপনার বন্ধুত্বপূর্ণ গাইড",
+    tourReportSubtite: "সম্পূর্ণ চিত্র দেখুন",
+    settingSubHeading: "পছন্দসমূহ সামঞ্জস্য করুন",
+    smartSpendingTips: 'স্মার্ট খরচের টিপস',
+    appTitle: 'ফিনি',
+    settings: 'সেটিংস',
+    viewProfile: 'প্রোফাইল দেখুন',
+    profileInformation: 'প্রোফাইল তথ্য',
+    fullName: 'পুরো নাম',
+    phoneNumber: 'ফোন নম্বর',
+    address: 'ঠিকানা',
+    email: 'ইমেল',
+    userId: 'ব্যবহারকারীর আইডি',
+    edit: 'সম্পাদনা',
+    save: 'সংরক্ষণ',
+    close: 'বন্ধ',
+    appearance: 'চেহারা',
+    language: 'ভাষা',
+    languageEnglish: 'ইংরেজি',
+    languageBengali: 'বাংলা',
+    currency: 'মুদ্রা',
+    currencyBDT: 'বাংলাদেশী টাকা (৳)',
+    currencyAUD: 'অস্ট্রেলিয়ান ডলার (AUD)',
+    textSize: 'টেক্সট সাইজ',
+    management: 'ব্যবস্থাপনা',
+    security: 'নিরাপত্তা',
+    setPin: 'পিন সেট করুন',
+    enterPin: '৪-সংখ্যার পিন লিখুন',
+    confirmPin: '৪-সংখ্যার পিন নিশ্চিত করুন',
+    pinSaved: 'পিন সংরক্ষিত!',
+    invalidPin: 'অনুগ্রহ করে ৪-সংখ্যার পিন লিখুন',
+    pinsDoNotMatch: 'পিন মেলেনি',
+    cancel: 'বাতিল',
+    helpSupport: 'সহায়তা ও সমর্থন',
+    helpSupportComingSoon: 'সহায়তা ও সমর্থন পৃষ্ঠা শীঘ্রই আসছে!',
+    logOut: 'লগ আউট',
+    signedOut: 'সফলভাবে সাইন আউট হয়েছে',
+    errorLoadingData: 'তথ্য লোড করতে ব্যর্থ',
+    errorSavingData: 'তথ্য সংরক্ষণের ত্রুটি',
+    user: 'ব্যবহারকারী',
+    notAvailable: 'পাওয়া যায়নি',
+    financialBasics: 'আর্থিক মৌলিক বিষয়',
+    askFinneyAI: 'যেকোনো সাহায্যের জন্য ফিনি এআই-কে জিজ্ঞাসা করুন',
+    moneyManagement: 'অর্থ ব্যবস্থাপনা',
+    moneyManagementSubtitle:
+    'আপনার অর্থ ট্র্যাক, পরিকল্পনা এবং নিয়ন্ত্রণ করুন',
+    savingBudgeting: 'সঞ্চয় ও বাজেটিং',
+    savingBudgetingSubtitle:
+    'কীভাবে স্মার্টলি সঞ্চয় এবং বাজেট করতে হয় তা শিখুন',
+    investingFundamentals: 'বিনিয়োগের মৌলিক বিষয়',
+    investingFundamentalsSubtitle: 'আপনার অর্থ কীভাবে বাড়ানো যায় তা বুঝুন',
+    financialSafety: 'আর্থিক নিরাপত্তা',
+    financialSafetySubtitle: 'নিরাপদ থাকুন এবং প্রতারণা এড়ান',
+    keyPoints: 'মূল বিষয়',
+    learnMore: 'আরও জানুন',
+    backToTopics: 'বিষয়গুলোতে ফিরে যান',
+    aiAssistant: 'এআই সহকারী',
+    moneyManagementPoint1: 'নিয়মিত আয় এবং খরচ ট্র্যাক করুন',
+    moneyManagementPoint2: 'প্রয়োজন এবং চাওয়ার মধ্যে পার্থক্য করুন',
+    moneyManagementPoint3: 'বেসিক ব্যাংকিং পরিষেবা বুঝুন',
+    moneyManagementPoint4: 'একটি সাধারণ আর্থিক রেকর্ড বজায় রাখুন',
+    savingBudgetingPoint1:
+    '50-30-20 নিয়ম অনুসরণ করুন (প্রয়োজন-চাওয়া-সঞ্চয়)',
+    savingBudgetingPoint2: 'জরুরি তহবিল তৈরি করুন (3-6 মাসের খরচ)',
+    savingBudgetingPoint3: 'আপনার সঞ্চয় স্বয়ংক্রিয় করুন',
+    savingBudgetingPoint4: 'মাসিক বাজেট পর্যালোচনা এবং সমন্বয় করুন',
+    investingFundamentalsPoint1: 'ঝুঁকি এবং রিটার্ন বুঝুন',
+    investingFundamentalsPoint2: 'আপনার বিনিয়োগ বৈচিত্র্যময় করুন',
+    investingFundamentalsPoint3:
+    'স্টক, বন্ড এবং মিউচুয়াল ফান্ড সম্পর্কে জানুন',
+    investingFundamentalsPoint4:
+    'ছোট বিনিয়োগ দিয়ে শুরু করুন এবং ধীরে ধীরে বাড়ান',
+    financialSafetyPoint1: 'আর্থিক প্রতারণা চিনুন এবং এড়ান',
+    financialSafetyPoint2: 'বীমার গুরুত্ব বুঝুন',
+    financialSafetyPoint3: 'আপনার অনলাইন আর্থিক অ্যাকাউন্ট সুরক্ষিত করুন',
+    financialSafetyPoint4: 'পরিচয় চুরি সুরক্ষা সম্পর্কে জানুন',
+    resourceMoneyManagementVideo: 'বেসিক মানি ম্যানেজমেন্ট',
+    resourceMoneyManagementArticle1:
+    'ইনভেস্টোপিডিয়া: ব্যক্তিগত অর্থের মৌলিক বিষয়',
+    resourceMoneyManagementArticle2:
+    'ইনভেস্টোপিডিয়া: আর্থিক সাক্ষরতার চূড়ান্ত গাইড',
+    resourceSavingVideo: 'বাজেটিং ফর বিগিনার্স; 50-30-20 নিয়ম শিখুন',
+    resourceSavingArticle: 'নার্ডওয়ালেট: কীভাবে অর্থ বাজেট করবেন',
+    resourceInvestingVideo: 'প্রফেসর ডেভ দ্বারা বিনিয়োগের মৌলিক বিষয়',
+    resourceInvestingArticle: 'ইনভেস্টোপিডিয়া: বিনিয়োগের মৌলিক বিষয়',
+    resourceSafetyVideo1: 'মোবাইল ব্যাংকিংয়ের জন্য আর্থিক নিরাপত্তা টিপস',
+    resourceSafetyVideo2: 'আর্থিক নিরাপত্তার গাইড',
+    resourceSafetyArticle1: 'ইনভেস্টোপিডিয়া: আর্থিক নিরাপত্তা টিপস',
+    resourceSafetyArticle2: 'মানিস্মার্ট: প্রতারণা থেকে নিজেকে রক্ষা করুন',
+    chatbotTitle: 'ফিনি এআই',
+    chatbotHelp: 'সহায়তা',
+    chatbotClearChat: 'চ্যাট মুছুন',
+    welcomeMessage:
+    'ফিনি এআই-এ স্বাগতম! আমি আজ আপনাকে কীভাবে সহায়তা করতে পারি?',
+    suggestedQuestion1: 'বাজেটিং কী?',
+    suggestedQuestion2: 'কীভাবে আমি কার্যকরভাবে অর্থ সঞ্চয় করতে পারি?',
+    suggestedQuestion3: 'বিনিয়োগের মৌলিক বিষয়গুলো কী কী?',
+    financialLearning: 'আর্থিক শিক্ষা',
+    beginner: 'প্রাথমিক',
+    beginnerSubtitle: 'বেসিক অর্থের দক্ষতা শিখুন',
+    intermediate: 'মধ্যবর্তী',
+    intermediateSubtitle: 'উন্নত আর্থিক অভ্যাস গড়ে তুলুন',
+    advanced: 'উন্নত',
+    advancedSubtitle: 'আপনার সম্পদ বাড়ান',
+    testYourKnowledge: 'আপনার জ্ঞান পরীক্ষা করুন',
+    testYourKnowledgeSubtitle: 'আপনার বোঝার পরীক্ষা করতে একটি কুইজ দিন',
+    failedToLoadDashboardData: 'ড্যাশবোর্ড তথ্য লোড করতে ব্যর্থ',
+    balanceCardTitle: 'হিসাব নিকাশ  ওভারভিউ',
+    timeRangeSelectorLabel: 'সময়সীমা নির্বাচন করুন',
+    recentTransactionsTitle: 'সাম্প্রতিক লেনদেন',
+    addTransactionTitle: 'লেনদেন যোগ করুন',
+    aiPoweredFeatures: 'এআই চালিত বৈশিষ্ট্য',
+    moneyTools: 'অর্থের সরঞ্জাম',
+    insights: 'ইনসাইট',
+    goals: 'লক্ষ্য',
+    thinking: 'চিন্তা করছে...',
+    balance: 'হিসাব নিকাশ ',
+    income: 'আয়',
+    'financeAcademy': 'ফিন্যান্স একাডেমি',
+
+    expenses: 'খরচ',
+    expense: 'খরচ',
+    saving: 'সঞ্চয়',
+    savings: 'সঞ্চয়',
+    thisMonth: 'এই মাস',
+    thisWeek: 'এই সপ্তাহ',
+    thisYear: 'এই বছর',
+    customRange: 'কাস্টম পরিসীমা',
+    selectTimePeriod: 'সময়কাল নির্বাচন করুন',
+    allTime: 'সব সময়',
+    mon: 'সোম',
+    tue: 'মঙ্গল',
+    wed: 'বুধ',
+    thu: 'বৃহস্পতি',
+    fri: 'শুক্র',
+    sat: 'শনি',
+    sun: 'রবি',
+    jan: 'জানু',
+    feb: 'ফেব',
+    mar: 'মার্চ',
+    apr: 'এপ্রিল',
+    may: 'মে',
+    jun: 'জুন',
+    jul: 'জুলাই',
+    aug: 'আগস্ট',
+    sep: 'সেপ্ট',
+    oct: 'অক্টো',
+    nov: 'নভে',
+    dec: 'ডিসে',
+    spendingAnalysis: 'খরচ বিশ্লেষণ',
+    categoryBreakdown: 'শ্রেণী বিন্যাস ',
+    expenseAnalysis: 'খরচ বিশ্লেষণ',
+    incomeAnalysis: 'আয় বিশ্লেষণ',
+    transactions: 'লেনদেন',
+    selectItemsToDelete: 'নির্বাচিত আইটেমগুলি মুছুন',
+    noTransactionsInThisPeriod: 'এই সময়কালে কোনো লেনদেন নেই',
+    seeAll: 'সব দেখুন',
+    deleteTransactions: 'লেনদেন মুছুন',
+    confirmDeleteTransactions: 'আপনি কি নিশ্চিত যে %dটি লেনদেন মুছতে চান?',
+    delete: 'মুছুন',
+    errorLoadingTransactions: 'লেনদেন লোড করতে ত্রুটি',
+    confirmDeleteAction:
+    'এই ক্রিয়াটি পূর্বাবস্থায় ফেরানো যাবে না। আপনি কি লেনদেন (গুলি) মুছে ফেলার বিষয়ে নিশ্চিত?',
+    deleteTransaction: 'লেনদেন মুছুন',
+    confirmDeleteSingleTransaction:
+    'এই ক্রিয়াটি পূর্বাবস্থায় ফেরানো যাবে না। আপনি কি নিশ্চিত যে এই লেনদেনটি মুছতে চান?',
+    savedAmount: 'সঞ্চিত: %s',
+    targetAmount: 'লক্ষ্য: %s',
+    percentCompleted: '%s% সম্পন্ন',
+    targetDate: 'লক্ষ্য তারিখ: %s',
+    daysLeft: '%d দিন বাকি',
+    daysOverdue: '%d দিন অতিবাহিত',
+    addSavings: 'সঞ্চয় যোগ করুন',
+    addToSavings: 'সঞ্চয়ে যোগ করুন',
+    amount: 'পরিমাণ',
+    //savings: 'সঞ্চয়',
+    pleaseEnterAmount: 'অনুগ্রহ করে একটি পরিমাণ লিখুন',
+    pleaseEnterValidNumber: 'অনুগ্রহ করে একটি বৈধ সংখ্যা লিখুন',
+    amountMustBePositive: 'পরিমাণ অবশ্যই ধনাত্মক হতে হবে',
+    add: 'যোগ করুন',
+    deleteGoal: 'লক্ষ্য মুছুন',
+    confirmDeleteGoal: 'আপনি কি নিশ্চিত যে "%s" মুছতে চান?',
+    addSavingGoal: 'সঞ্চয় লক্ষ্য যোগ করুন',
+    editSavingGoal: 'সঞ্চয় লক্ষ্য সম্পাদনা করুন',
+    savingGoalPurpose: 'সঞ্চয় লক্ষ্যের উদ্দেশ্য',
+    savingGoalHint: 'যেমন নতুন গাড়ির জন্য সঞ্চয়...',
+    description: 'বিবরণ',
+    descriptionHint: 'বিবরণ লিখুন (ঐচ্ছিক)',
+    amountHint: '0.00',
+    pleaseEnterPositiveAmount: 'অনুগ্রহ করে একটি ধনাত্মক পরিমাণ লিখুন',
+    pleaseEnterSavingGoalName: 'অনুগ্রহ করে একটি সঞ্চয় লক্ষ্যের নাম লিখুন',
+    saveGoal: 'লক্ষ্য সংরক্ষণ করুন',
+    goalCreated: 'লক্ষ্য "%s" তৈরি হয়েছে!',
+    goalUpdated: 'লক্ষ্য "%s" আপডেট হয়েছে!',
+    errorSavingGoal: 'লক্ষ্য সংরক্ষণে ত্রুটি। অনুগ্রহ করে আবার চেষ্টা করুন।',
+    mySavingGoals: 'আমার সঞ্চয় লক্ষ্য',
+    newGoal: 'নতুন লক্ষ্য',
+    loadingGoals: 'আপনার লক্ষ্য লোড হচ্ছে...',
+    noSavingGoals: 'এখনো কোনো সঞ্চয় লক্ষ্য নেই',
+    createFirstGoal: 'আপনার প্রথম লক্ষ্য তৈরি করুন',
+    totalSavingsProgress: 'মোট সঞ্চয় অগ্রগতি',
+    percentComplete: '%s% সম্পন্ন',
+    savingsOfTarget: '%s এর মধ্যে %s',
+    deleteGoalQuestion: 'লক্ষ্য মুছবেন?',
+    confirmDeleteGoalPermanent: 'এটি "%s" স্থায়ীভাবে মুছে ফেলবে',
+    addedToSavings: '"%s" এ %s যোগ করা হয়েছে',
+    goalDeleted: '"%s" মুছে ফেলা হয়েছে',
+    goalWasDeleted: 'লক্ষ্য মুছে ফেলা হয়েছে',
+    amountGreaterThanZero: 'অনুগ্রহ করে শূন্যের চেয়ে বেশি পরিমাণ লিখুন',
+    couldNotAddSavings: 'সঞ্চয় যোগ করা যায়নি',
+    couldNotDeleteGoal: 'লক্ষ্য মুছে ফেলা যায়নি',
+    goalsRefreshed: 'লক্ষ্য পুনরায় নিশ্চিত',
+    aboutSavingGoals: 'লক্ষ্য নির্ধারণ সম্পর্কে',
+    trackProgress: 'আপনার লক্ষ্যের অগ্রগতি দেখুন',
+    trackProgressDescription: 'লক্ষ্য অগ্রগতি বিবরণ',
+    addMoneyAnytime: 'যেকোনো সময় অর্থ যোগ করুন',
+    addMoneyAnytimeDescription:
+    'যখনই আপনি অর্থ সঞ্চয় করেন তখন আপনার লক্ষ্যে অবদান রাখুন',
+    setTargetDates: 'লক্ষ্য তারিখ নির্ধারণ করুন',
+    setTargetDatesDescription: 'স্পষ্ট সময়সীমা দিয়ে অনুপ্রাণিত থাকুন',
+    gotIt: 'বুঝেছি',
+    addExpense: 'খরচ যোগ করুন',
+    editExpense: 'খরচ সম্পাদনা করুন',
+    addIncome: 'আয় যোগ করুন',
+    editIncome: 'আয় সম্পাদনা করুন',
+    category: 'বিভাগ',
+    date: 'তারিখ',
+    pleaseEnterValidAmount: 'অনুগ্রহ করে একটি বৈধ পরিমাণ লিখুন',
+    pleaseSelectCategory: 'অনুগ্রহ করে একটি বিভাগ নির্বাচন করুন',
+    transactionSaved: 'লেনদেন সফলভাবে সংরক্ষিত হয়েছে',
+    transactionUpdated: 'লেনদেন সফলভাবে আপডেট হয়েছে',
+    failedToSaveTransaction:
+    'লেনদেন সংরক্ষণ করতে ব্যর্থ হয়েছে। আবার চেষ্টা করুন।',
+    food: 'খাদ্য',
+    transport: 'পরিবহন',
+    utilities: 'ইউটিলিটিস',
+    entertainment: 'বিনোদন',
+    shopping: 'কেনাকাটা',
+    health: 'স্বাস্থ্য',
+    others: 'অন্যান্য',
+    salary: 'বেতন',
+    investment: 'বিনিয়োগ',
+    business: 'ব্যবসা',
+    gift: 'উপহার',
+    noTransactionsYet: 'এখনো কোনো লেনদেন নেই',
+    today: 'আজ',
+    yesterday: 'গতকাল',
+    dashboardHelpTitle: 'ড্যাশবোর্ড কীভাবে ব্যবহার করবেন',
+    dashboardHelpSubtitle: 'আপনার আর্থিক সহজে ট্র্যাক করুন',
+    dashboardHelpBalance:
+    'আপনার বর্তমান হিসাব নিকাশ , আয় এবং খরচ এক নজরে দেখুন',
+    dashboardHelpAddTransaction: '+ ব্যবহার করে নতুন লেনদেন যোগ করুন',
+    dashboardHelpDeleteTransaction: 'লেনদেন মুছে ফেলতে বাম দিকে সোয়াইপ করুন',
+    dashboardHelpSpendingPatterns:
+    'সাপ্তাহিক খরচের ধরণ এবং শ্রেণী বিন্যাস পর্যবেক্ষণ করুন',
+    dashboardHelpRefresh: 'আপনার আর্থিক তথ্য রিফ্রেশ করতে নিচে টানুন',
+    total: 'মোট',
+    noExpenseData: 'এই সময়ের জন্য কোনো খরচ তথ্য নেই',
+    noIncomeData: 'এই সময়ের জন্য কোনো আয় তথ্য নেই',
+    pagination: 'পৃষ্ঠা %d এর %d',
+    hideAssistant: 'সহকারী লুকান',
+    askAboutChart: 'এই চার্ট সম্পর্কে জিজ্ঞাসা করুন',
+    askAboutChartHint: 'এই চার্ট সম্পর্কে জিজ্ঞাসা করুন...',
+    assistant: 'সহকারী',
+    queryError: 'দুঃখিত, আমি সেই প্রশ্নটি প্রক্রিয়া করতে পারিনি।',
+    queryErrorWithMessage: 'দুঃখিত, একটি ত্রুটি ঘটেছে: %s',
+    chartContext:
+    'আমি একটি %s চার্ট দেখছি যা আমার %s তথ্য দেখাচ্ছে। চার্ট তথ্য: %s।',
+    queryPrompt:
+    'আপনি একজন সহায়ক আর্থিক সহকারী। চার্ট তথ্য সম্পর্কে নিম্নলিখিত প্রশ্নের উত্তর দিন। আপনার উত্তর সংক্ষিপ্ত (১০০ শব্দের নিচে) এবং চার্ট তথ্যর উপর কেন্দ্রীভূত রাখুন। যদি প্রদত্ত তথ্য থেকে উত্তর দিতে না পারেন, তা স্পষ্টভাবে বলুন। চার্ট প্রেক্ষাপট: %s প্রশ্ন: %s',
+    advancedQuizTitle: 'উন্নত কুইজ',
+    quizCompleted: 'কুইজ সম্পন্ন!',
+    quizScore: 'আপনার স্কোর: %s/%s',
+    quizFinish: 'শেষ',
+    quizTryAgain: 'আবার চেষ্টা করুন',
+    quizQuestion1: 'চক্রবৃদ্ধি সুদের প্রধান সুবিধা কী?',
+    quizQuestion1Answer1: 'টাকা সময়ের সাথে দ্রুত বৃদ্ধি পায়',
+    quizQuestion1Answer2: 'এটি আপনার কর হ্রাস করে',
+    quizQuestion1Answer3: 'এটি নিয়মিত সুদের চেয়ে নিরাপদ',
+    quizQuestion2: 'বিনিয়োগে বৈচিত্র্যকরণ বলতে কী বোঝায়?',
+    quizQuestion2Answer1: 'সব টাকা একটি স্টকে রাখা',
+    quizQuestion2Answer2: 'বিভিন্ন সম্পদে বিনিয়োগ ছড়িয়ে দেওয়া',
+    quizQuestion2Answer3: 'শুধুমাত্র যা জানেন তাতে বিনিয়োগ করা',
+    quizQuestion3: 'ইনডেক্স ফান্ডের মূল বৈশিষ্ট্য কী?',
+    quizQuestion3Answer1: 'উচ্চ ব্যবস্থাপনা ফি',
+    quizQuestion3Answer2: 'একটি নির্দিষ্ট বাজার সূচক ট্র্যাক করে',
+    quizQuestion3Answer3: 'গ্যারান্টিযুক্ত রিটার্ন',
+    quizQuestion4: '4% অবসর নিয়ম কী?',
+    quizQuestion4Answer1: 'অবসরে বছরে 4% সঞ্চয় উত্তোলন করা',
+    quizQuestion4Answer2: 'অবসরের জন্য আয়ের 4% সঞ্চয় করা',
+    quizQuestion4Answer3: 'পরিকল্পিত সময়ের চেয়ে 4% বেশি কাজ করা',
+    quizQuestion5: 'আয় সুরক্ষার জন্য কোন ধরনের বীমা সবচেয়ে গুরুত্বপূর্ণ?',
+    quizQuestion5Answer1: 'ভ্রমণ বীমা',
+    quizQuestion5Answer2: 'আয় সুরক্ষা বীমা',
+    quizQuestion5Answer3: 'পোষা প্রাণীর বীমা',
+    advancedScreenTitle: 'উন্নত আর্থিক দক্ষতা',
+    investmentBasicsTitle: 'বিনিয়োগের মৌলিক বিষয়',
+    investmentBasicsPoint1: 'স্টক এবং বন্ড বোঝা',
+    investmentBasicsPoint2: 'ঝুঁকি বনাম রিটার্ন নীতি',
+    investmentBasicsPoint3: 'বৈচিত্র্যকরণ কৌশল',
+    retirementPlanningTitle: 'অবসর পরিকল্পনা',
+    retirementPlanningPoint1: 'সুপারঅ্যানুয়েশন বোঝা',
+    retirementPlanningPoint2: 'চক্রবৃদ্ধি সুদের শক্তি',
+    retirementPlanningPoint3: 'অবসর সঞ্চয় লক্ষ্য',
+    insuranceProtectionTitle: 'বীমা ও সুরক্ষা',
+    insuranceProtectionPoint1: 'প্রয়োজনীয় বীমার ধরন',
+    insuranceProtectionPoint2: 'কভারেজ প্রয়োজন গণনা',
+    insuranceProtectionPoint3: 'খরচ এবং সুরক্ষার ভারসাম্য',
+    takeAdvancedQuiz: 'উন্নত কুইজ নিন',
+    beginnerQuizTitle: 'প্রাথমিক কুইজ',
+    beginnerQuizQuestion1: 'টাকা পরিচালনার প্রথম ধাপ কী?',
+    beginnerQuizQuestion1Answer1: 'আপনার উপার্জনের সবকিছু খরচ করুন',
+    beginnerQuizQuestion1Answer2: 'আপনার আয় এবং খরচ ট্র্যাক করুন',
+    beginnerQuizQuestion1Answer3: 'স্টকে বিনিয়োগ করুন',
+    beginnerQuizQuestion2: 'কোনটি "চাহিদা" এবং কোনটি "ইচ্ছা" নয়?',
+    beginnerQuizQuestion2Answer1: 'নতুন স্মার্টফোন',
+    beginnerQuizQuestion2Answer2: 'মুদি',
+    beginnerQuizQuestion2Answer3: 'ছুটি',
+    beginnerQuizQuestion3: 'আপনার আয় থেকে আদর্শভাবে কতটা সঞ্চয় করা উচিত?',
+    beginnerQuizQuestion3Answer1: '5%',
+    beginnerQuizQuestion3Answer2: '20%',
+    beginnerQuizQuestion3Answer3: '50%',
+    beginnerScreenTitle: 'প্রাথমিক আর্থিক দক্ষতা',
+    understandingMoneyTitle: 'টাকা বোঝা',
+    understandingMoneyPoint1: 'টাকা কী এবং এটি কীভাবে কাজ করে',
+    understandingMoneyPoint2: 'টাকার বিভিন্ন প্রকার (নগদ, ডিজিটাল)',
+    understandingMoneyPoint3: 'মৌলিক চাহিদা বনাম ইচ্ছা',
+    simpleBudgetingTitle: 'সাধারণ বাজেটিং',
+    simpleBudgetingPoint1: 'দৈনিক খরচ ট্র্যাক করা',
+    simpleBudgetingPoint2: '50-30-20 নিয়ম সরলীকৃত',
+    simpleBudgetingPoint3: 'নিয়মিতভাবে অল্প পরিমাণ সঞ্চয় করা',
+    bankAccountsTitle: 'ব্যাংক অ্যাকাউন্ট',
+    bankAccountsPoint1: 'ব্যাংক অ্যাকাউন্টের প্রকার',
+    bankAccountsPoint2: 'টাকা জমা এবং উত্তোলনের পদ্ধতি',
+    bankAccountsPoint3: 'ব্যাংক স্টেটমেন্ট বোঝা',
+    takeBeginnerQuiz: 'প্রাথমিক কুইজ নিন',
+    resourceError: 'রিসোর্স খুলতে ব্যর্থ: %s',
+    intermediateQuizTitle: 'মধ্যবর্তী কুইজ',
+    intermediateQuizQuestion1: 'জরুরি তহবিলের উদ্দেশ্য কী?',
+    intermediateQuizQuestion1Answer1: 'ছুটির জন্য অর্থ প্রদান করা',
+    intermediateQuizQuestion1Answer2: 'অপ্রত্যাশিত খরচ কভার করা',
+    intermediateQuizQuestion1Answer3: 'স্টকে বিনিয়োগ করা',
+    intermediateQuizQuestion2:
+    '50-30-20 নিয়মে আপনার আয়ের কত শতাংশ চাহিদার জন্য খরচ করা উচিত?',
+    intermediateQuizQuestion2Answer1: '20%',
+    intermediateQuizQuestion2Answer2: '30%',
+    intermediateQuizQuestion2Answer3: '50%',
+    intermediateQuizQuestion3: 'একটি ভাল ক্রেডিট স্কোরের পরিসীমা কী?',
+    intermediateQuizQuestion3Answer1: '300-500',
+    intermediateQuizQuestion3Answer2: '670-850',
+    intermediateQuizQuestion3Answer3: '100-300',
+    intermediateQuizQuestion4: 'ঋণ থেকে মুক্তি পাওয়ার প্রথম ধাপ কী?',
+    intermediateQuizQuestion4Answer1:
+    'এটি উপেক্ষা করুন এবং আশা করুন এটি চলে যাবে',
+    intermediateQuizQuestion4Answer2: 'একটি ঋণ পরিশোধ পরিকল্পনা তৈরি করুন',
+    intermediateQuizQuestion4Answer3: 'এটি পরিশোধের জন্য আরও ঋণ নিন',
+    intermediateScreenTitle: 'মধ্যবর্তী আর্থিক দক্ষতা',
+    advancedBudgetingTitle: 'উন্নত বাজেটিং',
+    advancedBudgetingPoint1: 'মাসিক বাজেট পরিকল্পনা তৈরি করা',
+    advancedBudgetingPoint2: 'আর্থিক লক্ষ্য নির্ধারণ',
+    advancedBudgetingPoint3: 'অনিয়মিত আয় পরিচালনা',
+    creditBasicsTitle: 'ক্রেডিট মৌলিক বিষয়',
+    creditBasicsPoint1: 'ক্রেডিট স্কোর বোঝা',
+    creditBasicsPoint2: 'দায়িত্বশীল ক্রেডিট কার্ড ব্যবহার',
+    creditBasicsPoint3: 'ঋণের ফাঁদ এড়ানো',
+    savingStrategiesTitle: 'সঞ্চয় কৌশল',
+    savingStrategiesPoint1: 'জরুরি তহবিল (3-6 মাস)',
+    savingStrategiesPoint2: 'বড় ক্রয়ের জন্য সঞ্চয়',
+    savingStrategiesPoint3: 'আপনার সঞ্চয় স্বয়ংক্রিয় করা',
+    takeIntermediateQuiz: 'মধ্যবর্তী কুইজ নিন',
+    quizHomeTitle: 'আর্থিক জ্ঞান কুইজ',
+    beginnerLevelQuiz: 'প্রাথমিক স্তরের কুইজ',
+    intermediateLevelQuiz: 'মধ্যবর্তী স্তরের কুইজ',
+    advancedLevelQuiz: 'উন্নত স্তরের কুইজ',
+    transactionAddedSuccess: 'লেনদেন সফলভাবে যোগ করা হয়েছে',
+    transactionCanceled: 'কোন সমস্যা নেই, আমি এই লেনদেন যোগ করব না।',
+    transactionAddError:
+    'দুঃখিত, আমি লেনদেন যোগ করতে পারিনি। অনুগ্রহ করে পরে আবার চেষ্টা করুন।',
+    transactionConfirmPrompt:
+    'আমি নিশ্চিত নই আপনি এই লেনদেনের সাথে কী করতে চান। আমাকে বিকল্পগুলি দেখাতে দিন।',
+    transactionNoPending:
+    'এই মুহূর্তে আমার কাছে নিশ্চিত করার জন্য কোন লেনদেন নেই।',
+    chatbotHelpTitle: 'ফিনি এআই কীভাবে ব্যবহার করবেন',
+    chatbotHelpSubtitle: 'আপনার ব্যক্তিগত আর্থিক সহকারী',
+    chatbotHelpInstruction1:
+    'তাত্ক্ষণিক পরামর্শের জন্য আর্থিক সম্পর্কিত প্রশ্ন জিজ্ঞাসা করুন',
+    chatbotHelpInstruction2: 'বিশ্লেষণের জন্য আর্থিক ছবি আপলোড করুন',
+    chatbotHelpInstruction3:
+    'আপনি এআই সহকারীর সাথে কথা বলার জন্য মাইক্রোফোন ব্যবহার করতে পারেন',
+    chatbotHelpInstruction4:
+    'প্রস্তাবিত প্রশ্নগুলি চেষ্টা করুন বা নিজের প্রশ্ন টাইপ করুন',
+    welcomeTryAsking: 'জিজ্ঞাসা করে দেখুন',
+    welcomeWriteQuestion: 'নিজের প্রশ্ন লিখুন',
+    voiceListening: 'কণ্ঠস্বর শোনা যাচ্ছে... শেষ হলে আবার ট্যাপ করুন',
+    voiceProcessing: 'কণ্ঠস্বর প্রক্রিয়াকরণ...',
+    voiceTapMic: 'ফিনি এআই-এর সাথে কথা বলতে মাইক্রোফোন ট্যাপ করুন',
+    voiceSttNotAvailable: 'এই ডিভাইসে স্পিচ রিকগনিশন উপলব্ধ নয়',
+    transactionPreviewTitle: 'লেনদেনের শিরোনাম',
+    transactionPreviewCancel: 'বাতিল',
+    transactionPreviewConfirm: 'নিশ্চিত করুন',
+    chatInputHint: 'আমাকে একটি আর্থিক প্রশ্ন জিজ্ঞাসা করুন...',
+    nonFinancialQuestion:
+    'আমি আপনার আর্থিক প্রশ্নগুলির সাথে সাহায্য করতে এখানে আছি। কোন অর্থের বিষয়ে আমি সহায়তা করতে পারি?',
+    nonFinancialImage:
+    'আমি কেবল আর্থিক নথি বা রসিদ বিশ্লেষণ করতে পারি। আর্থিক কিছু নিয়ে সাহায্য প্রয়োজন?',
+    addNew: 'Add New',
+    categorySpentAmount: '%s টাকা %s শ্রেণী থেকে খরচ হয়েছে (%s%%)',
+    categoryEarnedAmount: '%s টাকা %s শ্রেণী থেকে আয় হয়েছে (%s%%)',
+    'expenseSummary':
+    'মোট খরচ হয়েছে %s, গড়ে %s। সর্বোচ্চ খরচ হয়েছে %s %s তারিখে, এবং সর্বনিম্ন খরচ হয়েছে %s %s তারিখে।',
+    'incomeSummary':
+    'মোট আয় হয়েছে %s, গড়ে %s। সর্বোচ্চ আয় হয়েছে %s %s তারিখে, এবং সর্বনিম্ন আয় হয়েছে %s %s তারিখে।',
+    'expenseCategorySummary':
+    'সর্বোচ্চ খরচ হয়েছে %s শ্রেণী থেকে , যা %s (%s%%)।',
+    'incomeCategorySummary':
+    'সর্বোচ্চ আয় হয়েছে %s শ্রেণী থেকে, যা %s (%s%%)।',
+    saveHabitTitle: 'সেভিং এর অভ্যাস গড়ে তোলা',
+    saveHabitDesc:
+    'নিয়মিত টাকা জমানো স্মার্ট একটি অভ্যাস। খরচ করার আগে সেভিং প্ল্যান করা সবচেয়ে ভালো উপায়।',
+    saveWhyTitle: 'সেভিং কেন জরুরি?',
+    saveWhyDesc:
+    'ইমারজেন্সির জন্য টাকা জমিয়ে রাখা খুব দরকারি। বেতন পাওয়ার পরেই কিছু অংশ আলাদা রাখলে ভবিষ্যৎ নিরাপদ লাগে।',
+    budgetSmartTitle: 'বুদ্ধিমান মাসিক আয়ের বন্টন',
+    budgetSmartDesc:
+    'আয়ের ৫৫% প্রয়োজনের জন্য, ১০% দীর্ঘমেয়াদী বিনিয়োগের জন্য, ১০% ভবিষ্যতের লক্ষ্য পূরণের জন্য, ১০% নিজের দক্ষতা বাড়াতে এবং ১৫% মজা বা দান করার জন্য ব্যয় করুন।',
+    budgetSelfTitle: 'নিজের উপর বিনিয়োগ সবচেয়ে বেশি ফল দেয়',
+    budgetSelfDesc:
+    '১০,০০০ টাকা দিয়ে ব্যবসা শুরু করার বদলে নিজের স্কিল উন্নত করুন। বই পড়ুন, অনলাইন কোর্স করুন এবং আপনার জ্ঞান দিয়ে উপার্জনের উপায় খুঁজুন।',
+
+    spendManageTitle: 'টাকা পরিচালনা, বৃদ্ধি, বিনিয়োগ ও সুরক্ষা দিন',
+    spendManageDesc:
+    'আপনার আয় যতই হোক না কেন, যদি আপনি তা ভালোভাবে পরিচালনা করেন, বাড়ান, বিনিয়োগ করেন এবং সুরক্ষা দেন — ভবিষ্যৎ নিশ্চিত থাকবে।',
+    spendLandTitle: 'স্মার্ট বিনিয়োগ: জমি কিনুন',
+    spendLandDesc:
+    'জমি একটি নিরাপদ ও লাভজনক বিনিয়োগ। কেনার আগে কাগজপত্র ও লোকেশন যাচাই করুন। এটি ফ্ল্যাট বা ক্রিপ্টোর চেয়ে বেশি ফ্লেক্সিবল।',
+    coachQ1: 'টাকা ব্যবস্থাপনায় আপনি কতটা ভালো? বস লেভেল, নাকি এখনও শিখছেন?',
+    coachQ2: 'সাধারণত আপনি মাসে কত টাকা সঞ্চয় করেন?',
+    coachQ3: 'আপনি মাসে সাধারণত কত খরচ করেন?',
+    coachQ4: 'সেরা পরিস্থিতিতে, আপনি মাসে কত সঞ্চয় করতে চাইতেন?',
+    coachQ5: 'আপনি কি প্রয়োজন আর ইচ্ছার মধ্যে পার্থক্য সহজে করতে পারেন?',
+    coachQ6: 'কোন খাতে আপনার সবচেয়ে বেশি টাকা চলে যায়?',
+    coachQ7: 'আপনি কি আপনার খরচ কোথায় যায় সেটা ট্র্যাক করেন?',
+    coachQ8: 'আপনি কি আপনার খরচের অভ্যাস বদলাতে ইচ্ছুক?',
+    coachQ9: 'আপনি কি প্রায়ই প্ল্যান ছাড়া খরচ করেন?',
+    coachQ10: 'এক্সট্রা টাকা পেলে আপনি সঞ্চয় করেন না খরচ?',
+    coachQ11:
+    'আপনি কি বড় কোনো লক্ষ্য পূরণের জন্য সঞ্চয় করতে চান, নাকি এখনই ছোট আনন্দ উপভোগ করতে চান?',
+    coachSavingSmall:
+    'আপনি কম সঞ্চয় করছেন। একটু একটু করে সঞ্চয় বাড়ানোর চেষ্টা করুন! ',
+    coachOnYourWay: 'আপনি সঠিক পথে আছেন! সঞ্চয়ের অভ্যাস গড়ে তুলুন। ',
+    coachPraiseGreat: 'অসাধারণ! আপনি অনেক সঞ্চয় করছেন। ',
+    never: 'কখনোই না',
+    sometimes: 'মাঝে মাঝে',
+    no: 'না',
+    maybe: 'হয়তো',
+    coachAdviceTitle: 'আপনার সেভিংস কোচের পরামর্শ',
+    coachOptBoth: 'দুটোই একটু একটু',
+    coachOptSaveBig: 'বড় লক্ষ্য পূরণের জন্য সঞ্চয়',
+    coachOptTreats: 'এখনই একটু মজা',
+    coachPraiseHabit: 'চমৎকার সঞ্চয়ের অভ্যাস!',
+    coachRestart: 'সেভিং কোচ আবার শুরু করুন',
+    learnReset: 'লার্নিং অগ্রগতি রিসেট হয়েছে।',
+    learnNoResults: 'কোনও ফলাফল পাওয়া যায়নি।',
+    learningReset: 'লার্নিং অগ্রগতি রিসেট হয়েছে।',
+    learningHub: 'লার্নিং হাব',
+    ongoing: 'চলমান',
+    completed: 'সম্পন্ন',
+    noResultsFound: 'কোনও ফলাফল পাওয়া যায়নি।',
+    tourBudgetTitle: 'বাজেটের মধ্যে থাকুন',
+    tourBudgetDesc:
+    'খরচ সীমার মধ্যে থাকতে এবং অপ্রয়োজনীয় খরচ এড়াতে রিমাইন্ডার কীভাবে ব্যবহার করবেন তা শিখুন।',
+
+    tourChatbotTitle: 'এআই চ্যাট সহকারী',
+    tourChatbotDesc:
+    'চ্যাটবট কীভাবে আর্থিক প্রশ্নের উত্তর দেয় এবং অ্যাপে সাহায্য করে তা বুঝুন।',
+
+    tourDashboardTitle: 'ড্যাশবোর্ড পরিচিতি',
+    tourDashboardDesc:
+    'ড্যাশবোর্ড কীভাবে ব্যবহার করবেন এবং আপনার আর্থিক অবস্থা বুঝতে মূল তথ্য কোথায় তা শিখুন।',
+
+    tourExpenseTitle: 'খরচ ট্র্যাক করুন',
+    tourExpenseDesc:
+    'প্রতিদিনের খরচ কীভাবে রেকর্ড এবং পর্যবেক্ষণ করবেন তা দেখুন যাতে বেশি খরচ না হয়।',
+
+    tourLearnHubDesc:
+    'Get an overview of the main LearnHub content and how to navigate through lessons.',
+    tourLearnhubTitle: 'লার্নহাব মডিউল পরিচিতি',
+    tourLearnhubDesc:
+    'LearnHub মডিউলগুলোর সংক্ষিপ্ত পরিচিতি এবং কিভাবে পাঠগুলো ব্যবহার করবেন তা দেখুন।',
+    tourReportDesc:
+    'আপনার আর্থিক রিপোর্ট কীভাবে পড়বেন এবং বোঝাবেন তা শিখুন যাতে ভালো সিদ্ধান্ত নিতে পারেন।',
+    tourReportTitle: 'রিপোর্ট পরিচিতি',
+
+    tourSavingsTitle: 'সঞ্চয়ের লক্ষ্য নির্ধারণ',
+    tourSavingsDesc:
+    'অ্যাপের ফিচার ব্যবহার করে কীভাবে সঞ্চয়ের লক্ষ্য নির্ধারণ, ট্র্যাক এবং অর্জন করবেন তা শিখুন।',
+
+    tourSettingsTitle: 'সেটিংস পরিচিতি',
+    tourSettingsDesc:
+    'ভাষা, নোটিফিকেশন এবং অন্যান্য সেটিংস কাস্টমাইজ করতে কীভাবে অ্যাপ সেটিংস আপডেট করবেন তা শিখুন।',
+
+    tourMarkDone: 'সম্পন্ন হিসেবে চিহ্নিত করুন',
+    generalQuizTitle: 'আপনার জ্ঞান পরীক্ষা করুন',
+    quizResultScore: 'স্কোর: %s / %s',
+    quizBack: 'কুইজে ফিরে যান',
+    quizReview: 'আপনার উত্তরগুলো পর্যালোচনা করুন',
+    quizClearConfirm: 'আপনি কি নিশ্চিত যে সব কুইজ ফলাফল মুছে ফেলতে চান?',
+    quizNoResults: 'কোন কুইজ ফলাফল পাওয়া যায়নি।',
+    quizResults: 'কুইজ ফলাফল',
+    quizReset: 'কুইজ ফলাফল রিসেট করুন',
+    quizResetConfirm:
+    'আপনি কি সমস্ত কুইজ ফলাফল মুছে ফেলতে চান? এই পদক্ষেপটি পূর্বাবস্থায় ফেরানো যাবে না।',
+    reset: 'রিসেট',
+    quizAttempts: 'চেষ্টা',
+    quizAverage: 'গড়',
+    quizLastAttempt: 'সর্বশেষ চেষ্টা',
+    quizQ1: 'Finney অ্যাপের মূল কাজ কী?',
+    quizQ1A1: 'গেম খেলা',
+    quizQ1A2: 'সামাজিক যোগাযোগ',
+    quizQ1A3: 'আর্থিক শিক্ষা',
+    quizQ1A4: 'অনলাইন শপিং',
+    quizQ2: 'খরচ ট্র্যাক করতে কোন স্ক্রিন সাহায্য করে?',
+    quizQ2A1: 'ড্যাশবোর্ড',
+    quizQ2A2: 'চ্যাটবট',
+    quizQ2A3: 'লার্ন',
+    quizQ2A4: 'সেটিংস',
+    quizQ3: 'বাজেট সাধারণত কী কাজে লাগে?',
+    quizQ3A1: 'খরচ ট্র্যাক করা',
+    quizQ3A2: 'বিনোদন',
+    quizQ3A3: 'ক্রিপ্টোতে বিনিয়োগ',
+    quizQ3A4: 'মুদির বাজার',
+    quizQ4: 'ভাড়া সাধারণত কোন বিভাগের অন্তর্ভুক্ত?',
+    quizQ4A1: 'সঞ্চয়',
+    quizQ4A2: 'প্রয়োজন',
+    quizQ4A3: 'want',
+    quizQ4A4: 'বিলাসিতা',
+    quizQ5: 'স্মার্ট খরচের একটি টিপস কী হতে পারে?',
+    quizQ5A1: 'অপ্রয়োজনীয় জিনিস কেনা',
+    quizQ5A2: 'প্রতিটি টাকা ট্র্যাক করা',
+    quizQ5A3: 'ছাড় এড়ানো',
+    quizQ5A4: 'ঝোঁকের বশে খরচ করা',
+    quizQ6: 'অপ্রত্যাশিত কেনাকাটার আগে ২৪ ঘণ্টা অপেক্ষা করা কেন ভালো?',
+    quizQ6A1: 'দোকান বন্ধ হয়ে যেতে পারে',
+    quizQ6A2: 'ঝোঁকের খরচ এড়াতে সাহায্য করে',
+    quizQ6A3: 'দাম কমতে পারে',
+    quizQ6A4: 'আপনি হয়তো টাকা পাবেন',
+    quizQ7: 'বাজেটিংয়ে "want" বলতে কী বোঝায়?',
+    quizQ7A1: 'প্রয়োজনীয় খাবার',
+    quizQ7A2: 'ভাড়া',
+    quizQ7A3: 'চিকিৎসা খরচ',
+    quizQ7A4: 'ডিজাইনার স্নিকার্স',
+    quizQ8: 'আয় বাড়ানোর জন্য কোনটি সহায়ক?',
+    quizQ8A1: 'খাবার মিস করা',
+    quizQ8A2: 'দক্ষতা উন্নয়ন',
+    quizQ8A3: 'বেশি খরচ করা',
+    quizQ8A4: 'ঋণ নেওয়া',
+    quizQ9: '৫০-৩০-২০ নিয়মটি সাধারণত কোন ক্ষেত্রে ব্যবহার হয়?',
+    quizQ9A1: 'খাবার পরিকল্পনা',
+    quizQ9A2: 'কাজের সময়',
+    quizQ9A3: 'বাজেট তৈরি',
+    quizQ9A4: 'ব্যায়ামের রুটিন',
+    quizQ10: 'খরচ করার আগে কী করা উচিত?',
+    quizQ10A1: 'ট্রেন্ড চেক করা',
+    quizQ10A2: 'সোশ্যাল মিডিয়াতে পোস্ট করা',
+    quizQ10A3: 'একটি বাজেট প্ল্যান তৈরি করা',
+    quizQ10A4: 'বন্ধুর কাছ থেকে ধার নেওয়া',
+    quizQ11: 'Finney অ্যাপ অনুযায়ী কোথায় বিনিয়োগ করা সবচেয়ে নিরাপদ?',
+    quizQ11A1: 'ক্রিপ্টো',
+    quizQ11A2: 'জমি',
+    quizQ11A3: 'ফরেক্স',
+    quizQ11A4: 'এনএফটি',
+    quizQ12: 'বাসায় রান্না করার কী উপকারিতা আছে?',
+    quizQ12A1: 'বেশি প্লাস্টিক বর্জ্য',
+    quizQ12A2: 'বেশি ডেলিভারি খরচ',
+    quizQ12A3: 'টাকা বাঁচায় এবং স্বাস্থ্য ভালো রাখে',
+    quizQ12A4: 'বেশি সময় লাগে',
+    quizQ13: 'মাসের শুরুতেই সঞ্চয় করাটা কেন গুরুত্বপূর্ণ?',
+    quizQ13A1: 'অপ্রয়োজনীয় কেনাকাটা এড়াতে',
+    quizQ13A2: 'যাতে বাজেট না করলেও চলে',
+    quizQ13A3: 'আর্থিক নিয়মানুবর্তিতা গড়ে তুলতে',
+    quizQ13A4: 'জরিমানা আগেই মেটাতে',
+    quizQ14: 'পার্সোনাল ডেভেলপমেন্টে কত শতাংশ রাখা উচিত?',
+    quizQ14A1: '৫৫%',
+    quizQ14A2: '১৫%',
+    quizQ14A3: '৩০%',
+    quizQ14A4: '১০%',
+    quizQ15: '"টাকা প্রোটেক্ট" বলতে কী বোঝায়?',
+    quizQ15A1: 'গ্যাজেটে খরচ',
+    quizQ15A2: 'সব ঝুঁকি এড়ানো',
+    quizQ15A3: 'বীমা ও জরুরি ফান্ড ব্যবহার',
+    quizQ15A4: 'সোনা কেনা',
+    quizQ16: 'একটি আর্থিক লক্ষ্য স্থির করার প্রথম ধাপ কী?',
+    quizQ16A1: 'মন মতো খরচ করা',
+    quizQ16A2: 'সঞ্চয়ের লক্ষ্য নির্ধারণ করা',
+    quizQ16A3: 'অনলাইন শপিং',
+    quizQ16A4: 'ঋণ নেওয়া',
+    quizQ17: 'Finney অ্যাপে কোন ফিচারটি তাৎক্ষণিক আর্থিক সহায়তা দেয়?',
+    quizQ17A1: 'সেটিংস',
+    quizQ17A2: 'চ্যাটবট',
+    quizQ17A3: 'খরচ ট্র্যাকার',
+    quizQ17A4: 'প্রোফাইল',
+    quizQ18: 'জরুরি তহবিল সাধারণত কোন কাজে ব্যবহৃত হয়?',
+    quizQ18A1: 'ছুটি',
+    quizQ18A2: 'অপ্রত্যাশিত খরচ',
+    quizQ18A3: 'বিনোদন',
+    quizQ18A4: 'শপিং',
+    quizQ19: 'ভালো সঞ্চয় অভ্যাস কাকে বলা হয়?',
+    quizQ19A1: 'ঝোঁকের কেনাকাটা',
+    quizQ19A2: 'খরচ ট্র্যাক করা',
+    quizQ19A3: 'বিল উপেক্ষা করা',
+    quizQ19A4: 'অতিরিক্ত খরচ',
+    quizQ20:
+    'আপনি যদি ২০০০০ টাকা আয় করেন এবং ১৮০০০ টাকা খরচ করেন, আপনার সঞ্চয় কত হবে?',
+    quizQ20A1: '৫০০০',
+    quizQ20A2: '৩০০০',
+    quizQ20A3: '২০০০',
+    quizQ20A4: '১০০০',
+    quizQ21: 'আর্থিক চাপ সাধারণত কী কারণে হয়?',
+    quizQ21A1: 'অতিরিক্ত খরচ',
+    quizQ21A2: 'নিয়মিত সঞ্চয়',
+    quizQ21A3: 'বাজেট মেনে চলা',
+    quizQ21A4: 'বীমা থাকা',
+    quizQ22: 'কখন সঞ্চয় শুরু করা সবচেয়ে ভালো?',
+    quizQ22A1: 'মাসের শেষ',
+    quizQ22A2: 'আয়ের পরে',
+    quizQ22A3: 'খরচের পরে',
+    quizQ22A4: 'ঋণ নিলে',
+    quizQ23: 'বাজেটিং কিভাবে সাহায্য করে?',
+    quizQ23A1: 'বেশি খরচ করা',
+    quizQ23A2: 'টাকা ভালোভাবে ম্যানেজ করা',
+    quizQ23A3: 'সঞ্চয় হারানো',
+    quizQ23A4: 'জুয়া খেলা',
+    quizQ24: 'নিচের কোনটি একটি "প্রয়োজনীয়" খরচ?',
+    quizQ24A1: 'নেটফ্লিক্স সাবস্ক্রিপশন',
+    quizQ24A2: 'মুদির বাজার',
+    quizQ24A3: 'লাক্সারি গাড়ি',
+    quizQ24A4: 'ডিজাইনার ঘড়ি',
+    quizQ25: 'বিনিয়োগের আগে কী বিষয় যাচাই করা উচিত?',
+    quizQ25A1: 'জনপ্রিয়তা',
+    quizQ25A2: 'ঝুঁকি ও রিটার্ন',
+    quizQ25A3: 'লাইকের সংখ্যা',
+    quizQ25A4: 'ব্র্যান্ড নাম',
+    quizQ26: 'ঝোঁকের কেনাকাটা কমানোর উপায় কী?',
+    quizQ26A1: 'ক্রেডিট কার্ড ব্যবহার',
+    quizQ26A2: 'শপিং লিস্ট ব্যবহার',
+    quizQ26A3: 'বিজ্ঞাপন অনুসরণ',
+    quizQ26A4: 'মুডের উপর ভিত্তি করে কেনাকাটা',
+    quizQ27: 'একটি ভালো আর্থিক লক্ষ্য কেমন হওয়া উচিত?',
+    quizQ27A1: 'অস্পষ্ট ও দূরের',
+    quizQ27A2: 'নির্দিষ্ট ও পরিমাপযোগ্য',
+    quizQ27A3: 'দামী ও দ্রুত',
+    quizQ27A4: 'ভাগ্যনির্ভর ও এলোমেলো',
+    quizQ28: 'সঞ্চয় করা কী কাজে আসে?',
+    quizQ28A1: 'দেখানোর জন্য',
+    quizQ28A2: 'নিরাপত্তা তৈরি',
+    quizQ28A3: 'অপ্রয়োজনীয় জিনিসপত্র কেনা',
+    quizQ28A4: 'দ্রুত খরচ',
+    quizQ29: 'Finney অ্যাপের কোন অংশ অর্থনৈতিক দক্ষতা বাড়াতে সাহায্য করে?',
+    quizQ29A1: 'সেটিংস',
+    quizQ29A2: 'লার্ন একাডেমি',
+    quizQ29A3: 'নোটিফিকেশন',
+    quizQ29A4: 'প্রোফাইল',
+    quizQ30: 'যদি আপনার খরচ আপনার আয়ের চেয়ে বেশি হয়, তাহলে কী ঘটতে পারে?',
+    quizQ30A1: 'ঋণ বাড়ে',
+    quizQ30A2: 'সঞ্চয় বাড়ে',
+    quizQ30A3: 'সম্পদ বাড়ে',
+    quizQ30A4: 'বেতন দ্বিগুণ হয়',
+    reviewAnswers: 'উত্তরগুলো পর্যালোচনা করুন',
+    backToQuiz: 'কুইজে ফিরে যান',
+    dashboard: 'ড্যাশবোর্ড',
+    expenseTracking: 'খরচ ট্র্যাকিং',
+    report: 'রিপোর্ট',
+    savingGoals: 'সঞ্চয় লক্ষ্য',
+    quiz: 'কুইজ',
+    savingMoneyEasy: 'সহজে টাকা সঞ্চয়',
+    simpleBudgeting: 'সহজ বাজেটিং',
+    lessons: "পাঠসমূহ",
+    appTour: "অ্যাপ ট্যুর",
+    progress: "অগ্রগতি",
+    smartSpendingTipsSubtitle: "বুদ্ধিমানের মতো খরচ করুন, ভালো থাকুন",
+    simpleBudgetingSubtitle: "সহজেই পরিকল্পনা করুন",
+    savingMoneyEasySubtitle: "আপনার ভবিষ্যৎ গড়ুন",
+    savingsCoach: "সেভিংস কোচ",
+    savingsCoachSubtitle: "খরচ কমান, স্বপ্ন নয়",
+    taketheQuiz: "কুইজ দিন",
+    taketheQuizSubtitle: "আপনার জ্ঞান পরীক্ষা করুন",
+    viewQuizResult: "কুইজ ফলাফল দেখুন",
+    quizResultSubtitle: "আপনার স্কোর দেখুন",
+
+    coachOptMoneyBoss: 'অর্থের বস',
+    coachOptDoingOkay: 'ভালো আছি',
+    coachOptNeedsWork: 'উন্নতি দরকার',
+    coachOpt0_200: '৳০-৳২০০',
+    coachOpt200_500: '৳২০০-৳৫০০',
+    coachOpt500plus: '৳৫০০+',
+    coachOpt0_1000: '৳০-৳১০০০',
+    coachOpt1000_2000: '৳১০০০-৳২০০০',
+    coachOpt2000plus: '৳২০০০+',
+    coachOpt100: '৳১০০',
+    coachOpt500: '৳৫০০',
+    coachOpt1000plus: '৳১০০০+',
+    coachOptAlways: 'সবসময়',
+    coachOptSometimes: 'মাঝে মাঝে',
+    coachOptNotReally: 'একদম না',
+    coachOptFood: 'খাদ্য',
+    coachOptShopping: 'শপিং',
+    coachOptEntertainment: 'বিনোদন',
+    coachOptNever: 'কখনোই না',
+    coachOptYes: 'হ্যাঁ',
+    coachOptMaybe: 'হয়তো',
+    coachOptNo: 'না',
+    coachOptRarely: 'কদাচিৎ',
+    coachOptSaveIt: 'সঞ্চয় করি',
+    coachOptSpendIt: 'খরচ করি',
+
+    coachOptNotSure: 'নিশ্চিত নই',
+    coachOtherHint: 'অন্যান্য (অনুগ্রহ করে উল্লেখ করুন)',
+    coachSeeResult: 'ফলাফল দেখুন',
+    coachNext: 'পরবর্তী',
+    coachSavingPlan: 'আপনার সঞ্চয় পরিকল্পনা',
+  };
+}
+
+List<MapLocale> locales = [
+  MapLocale('en', LocaleData.en, countryCode: 'US'),
+  MapLocale('bn', LocaleData.bn, countryCode: 'BD'),
+];
Index: lib/shared/category.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/shared/category.dart b/lib/shared/category.dart
new file mode 100644
--- /dev/null	
+++ b/lib/shared/category.dart	
@@ -0,0 +1,189 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:flutter/material.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+
+class CategoryUtils {
+  static final Map<String, IconData> _categoryIconCache = {};
+  static final Map<String, Color> _categoryColorCache = {};
+
+  // Expense categories
+  static const expenseCategories = [
+    'Shopping',
+    'Food',
+    'Entertainment',
+    'Transport',
+    'Health',
+    'Utilities',
+    'Others',
+  ];
+
+  // Income categories
+  static const incomeCategories = [
+    'Salary',
+    'Investment',
+    'Business',
+    'Gift',
+    'Others',
+  ];
+
+  // Get localized category name
+  static String getLocalizedCategoryName(String category, BuildContext context) {
+    switch (category) {
+      case 'Shopping':
+        return LocaleData.shopping.getString(context);
+      case 'Food':
+        return LocaleData.food.getString(context);
+      case 'Entertainment':
+        return LocaleData.entertainment.getString(context);
+      case 'Transport':
+        return LocaleData.transport.getString(context);
+      case 'Health':
+        return LocaleData.health.getString(context);
+      case 'Utilities':
+        return LocaleData.utilities.getString(context);
+      case 'Salary':
+        return LocaleData.salary.getString(context);
+      case 'Investment':
+        return LocaleData.investment.getString(context);
+      case 'Business':
+        return LocaleData.business.getString(context);
+      case 'Gift':
+        return LocaleData.gift.getString(context);
+      case 'Others':
+        return LocaleData.others.getString(context);
+      default:
+        return category;
+    }
+  }
+
+  // Get category from localized name
+  static String getCategoryFromLocalizedName(String localizedName, BuildContext context) {
+    // Check expense categories
+    for (String category in expenseCategories) {
+      if (getLocalizedCategoryName(category, context) == localizedName) {
+        return category;
+      }
+    }
+    
+    // Check income categories
+    for (String category in incomeCategories) {
+      if (getLocalizedCategoryName(category, context) == localizedName) {
+        return category;
+      }
+    }
+    
+    return localizedName;
+  }
+
+  // Get localized categories based on transaction type
+  static List<String> getLocalizedCategoriesForType(bool isExpense, BuildContext context) {
+    List<String> categories = isExpense ? expenseCategories : incomeCategories;
+    return categories.map((e) => getLocalizedCategoryName(e, context)).toList();
+  }
+
+  static IconData getIconForCategory(String category) {
+    if (_categoryIconCache.containsKey(category)) {
+      return _categoryIconCache[category]!;
+    }
+
+    IconData icon;
+    switch (category) {
+      // Expense icons
+      case 'Shopping':
+        icon = Icons.shopping_bag;
+        break;
+      case 'Food':
+        icon = Icons.restaurant;
+        break;
+      case 'Entertainment':
+        icon = Icons.movie;
+        break;
+      case 'Transport':
+        icon = Icons.directions_car;
+        break;
+      case 'Health':
+        icon = Icons.medical_services;
+        break;
+      case 'Utilities':
+        icon = Icons.phone;
+        break;
+
+      // Income icons
+      case 'Salary':
+        icon = Icons.work;
+        break;  // Added missing break
+      case 'Investment':
+        icon = Icons.trending_up;
+        break;  // Added missing break
+      case 'Business':
+        icon = Icons.business;
+        break;  // Added missing break
+      case 'Gift':
+        icon = Icons.card_giftcard;
+        break;  // Added missing break
+
+      // Default icon
+      default:
+        icon = Icons.category_outlined;
+    }
+
+    _categoryIconCache[category] = icon;
+    return icon;
+  }
+
+  static Color getColorForCategory(String category) {
+    if (_categoryColorCache.containsKey(category)) {
+      return _categoryColorCache[category]!;
+    }
+
+    Color color;
+    switch (category) {
+      // Expense colors
+      case 'Shopping':
+        color = AppColors.categoryShopping;
+        break;
+      case 'Food':
+        color = AppColors.categoryFood;
+        break;
+      case 'Entertainment':
+        color = AppColors.categoryEntertainment;
+        break;
+      case 'Transport':
+        color = AppColors.categoryTransport;
+        break;
+      case 'Health':
+        color = AppColors.categoryHealth;
+        break;
+      case 'Utilities':
+        color = AppColors.categoryUtilities;
+        break;
+
+      // Income colors
+      case 'Salary':
+        color = AppColors.categorySalary;
+        break;  // Added missing break
+      case 'Investment':
+        color = AppColors.categoryInvestment;
+        break;  // Added missing break
+      case 'Business':
+        color = AppColors.categoryBusiness;
+        break;  // Added missing break
+      case 'Gift':
+        color = AppColors.categoryGift;
+        break;  // Added missing break
+
+      // Default color
+      default:
+        color = AppColors.categoryDefault;
+    }
+
+    _categoryColorCache[category] = color;
+    return color;
+  }
+
+  // Helper method to get categories based on transaction type
+  static List<String> getCategoriesForType(bool isExpense) {
+    return isExpense ? expenseCategories : incomeCategories;
+  }
+}
\ No newline at end of file
Index: lib/main.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/main.dart b/lib/main.dart
new file mode 100644
--- /dev/null	
+++ b/lib/main.dart	
@@ -0,0 +1,217 @@
+import 'package:finney/shared/theme/app_color.dart';
+import 'package:finney/shared/localization/locales.dart';
+import 'package:finney/core/network/no_internet_screen.dart';
+import 'package:finney/pages/3-dashboard/dashboard.dart';
+import 'package:finney/pages/0-onboarding/onboarding.dart';
+import 'package:finney/pages/1-auth/auth_page.dart';
+import 'package:finney/pages/9-setting/language_selection.dart';
+import 'package:firebase_auth/firebase_auth.dart';
+import 'package:finney/shared/path/api_key.dart';
+import 'package:flutter/material.dart';
+import 'package:firebase_core/firebase_core.dart';
+import 'package:flutter_gemini/flutter_gemini.dart';
+import 'package:flutter_localization/flutter_localization.dart';
+import 'package:shared_preferences/shared_preferences.dart';
+import 'core/storage/cloud/firebase_options.dart';
+import 'package:finney/core/storage/storage_manager.dart';
+import 'package:cloud_firestore/cloud_firestore.dart';
+
+void main() async {
+  WidgetsFlutterBinding.ensureInitialized();
+  await FlutterLocalization.instance.ensureInitialized();
+
+  // Initialize Firebase
+  await Firebase.initializeApp(
+    options: DefaultFirebaseOptions.currentPlatform,
+  );
+
+  // Initialize StorageManager (now just initializes Firebase and connectivity services)
+  await StorageManager().initialize();
+  
+  // Initialize Gemini AI
+  Gemini.init(apiKey: geminiApiKey);
+  
+  runApp(const MyApp());
+}
+
+class MyApp extends StatefulWidget {
+  const MyApp({super.key});
+
+  @override
+  State<MyApp> createState() => _MyAppState();
+}
+
+class _MyAppState extends State<MyApp> {
+  final FlutterLocalization localization = FlutterLocalization.instance;
+  late SharedPreferences _prefs;
+  bool _initialized = false;
+  String _languageCode = 'en';
+
+  @override
+  void initState() {
+    _loadPreferences();
+    super.initState();
+  }
+
+  Future<void> _loadPreferences() async {
+    _prefs = await SharedPreferences.getInstance();
+    _languageCode = _prefs.getString('language') ?? 'en';
+    
+    configureLocalization();
+    
+    setState(() {
+      _initialized = true;
+    });
+  }
+
+  void configureLocalization() {
+    localization.init(
+      mapLocales: [
+        MapLocale('en', LocaleData.en),
+        MapLocale('bn', LocaleData.bn),
+      ],
+      initLanguageCode: _languageCode,
+    );
+    localization.onTranslatedLanguage = onTranslatedLanguage;
+  }
+
+  void onTranslatedLanguage(Locale? locale) {
+    setState(() {});
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    // Show loading spinner while initializing preferences
+    if (!_initialized) {
+      return MaterialApp(
+        theme: ThemeData(
+          primaryColor: AppColors.primary,
+          fontFamily: 'NotoSerifBengali',
+        ),
+        home: const Scaffold(
+          body: Center(child: CircularProgressIndicator()),
+        ),
+      );
+    }
+
+    // Check if language is set
+    bool hasLanguage = _prefs.containsKey('language');
+    
+    // Wrap the entire app with InternetConnectionHandler
+    return InternetConnectionHandler(
+      child: MaterialApp(
+        theme: ThemeData(
+          primaryColor: AppColors.primary,
+          fontFamily: 'NotoSerifBengali',
+          textTheme: const TextTheme(
+            headlineMedium: TextStyle(fontSize: 20, fontWeight: FontWeight.w500),
+            bodyMedium: TextStyle(fontSize: 14),
+          ),
+        ),
+        debugShowCheckedModeBanner: false,
+        locale: localization.currentLocale,
+        supportedLocales: const [
+          Locale('en', 'US'),
+          Locale('bn', 'BD'),
+        ],
+        localizationsDelegates: localization.localizationsDelegates,
+        home: !hasLanguage 
+          ? const LanguageSelectionPage()
+          : StreamBuilder<User?>(
+              stream: FirebaseAuth.instance.authStateChanges(),
+              builder: (context, authSnapshot) {
+                if (authSnapshot.connectionState == ConnectionState.waiting) {
+                  return const Scaffold(body: Center(child: CircularProgressIndicator()));
+                }
+                
+                // User is logged in
+                if (authSnapshot.hasData) {
+                  final user = authSnapshot.data!;
+                  
+                  // Check if user has completed onboarding in Firestore
+                  return FutureBuilder<bool>(
+                    future: _checkNeedsOnboarding(user),
+                    builder: (context, onboardingSnapshot) {
+                      if (onboardingSnapshot.connectionState == ConnectionState.waiting) {
+                        return const Scaffold(body: Center(child: CircularProgressIndicator()));
+                      }
+                      
+                      final needsOnboarding = onboardingSnapshot.data ?? true;
+                      
+                      if (needsOnboarding) {
+                        return Onboarding(
+                          onComplete: () async {
+                            // Mark onboarding as completed in Firestore
+                            await _markOnboardingCompleted(user.uid);
+                            setState(() {});  // Refresh to show main app
+                          },
+                        );
+                      }
+                      
+                      // Otherwise show the main app layout
+                      return const Dashboard();
+                    },
+                  );
+                }
+                
+                // User is not logged in, show auth page
+                return const AuthPage();
+              },
+            ),
+      ),
+    );
+  }
+  
+  // Check if user needs onboarding by looking at Firestore
+  Future<bool> _checkNeedsOnboarding(User user) async {
+    try {
+      // First check - is this a brand new user?
+      final isNewUser = user.metadata.creationTime!
+          .isAfter(DateTime.now().subtract(const Duration(minutes: 1)));
+      
+      if (isNewUser) {
+        return true; // New users always need onboarding
+      }
+      
+      // Otherwise check the user's profile in Firestore
+      final userDoc = await FirebaseFirestore.instance
+          .collection('users')
+          .doc(user.uid)
+          .get();
+      
+      // If the user document doesn't exist or doesn't have onboardingCompleted field
+      if (!userDoc.exists || !userDoc.data()!.containsKey('onboardingCompleted')) {
+        return true;
+      }
+      
+      // Return based on the value in Firestore
+      return !(userDoc.data()!['onboardingCompleted'] as bool);
+    } catch (e) {
+      debugPrint('Error checking onboarding status: $e');
+      return true; // Default to showing onboarding if there's an error
+    }
+  }
+  
+  // Mark onboarding as completed in Firestore
+  Future<void> _markOnboardingCompleted(String userId) async {
+    try {
+      await FirebaseFirestore.instance
+          .collection('users')
+          .doc(userId)
+          .set({
+        'onboardingCompleted': true,
+        'onboardingCompletedAt': FieldValue.serverTimestamp(),
+      }, SetOptions(merge: true));
+    } catch (e) {
+      debugPrint('Error marking onboarding as completed: $e');
+    }
+  }
+  
+  // Method to save language preference
+  Future<void> saveLanguagePreference(String languageCode) async {
+    await _prefs.setString('language', languageCode);
+    setState(() {
+      _languageCode = languageCode;
+    });
+  }
+}
\ No newline at end of file
Index: web/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/index.html b/web/index.html
new file mode 100644
--- /dev/null	
+++ b/web/index.html	
@@ -0,0 +1,38 @@
+<!DOCTYPE html>
+<html>
+<head>
+  <!--
+    If you are serving your web app in a path other than the root, change the
+    href value below to reflect the base path you are serving from.
+
+    The path provided below has to start and end with a slash "/" in order for
+    it to work correctly.
+
+    For more details:
+    * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base
+
+    This is a placeholder for base href that will be replaced by the value of
+    the `--base-href` argument provided to `flutter build`.
+  -->
+  <base href="$FLUTTER_BASE_HREF">
+
+  <meta charset="UTF-8">
+  <meta content="IE=Edge" http-equiv="X-UA-Compatible">
+  <meta name="description" content="A new Flutter project.">
+
+  <!-- iOS meta tags & icons -->
+  <meta name="mobile-web-app-capable" content="yes">
+  <meta name="apple-mobile-web-app-status-bar-style" content="black">
+  <meta name="apple-mobile-web-app-title" content="finney">
+  <link rel="apple-touch-icon" href="icons/Icon-192.png">
+
+  <!-- Favicon -->
+  <link rel="icon" type="image/png" href="favicon.png"/>
+
+  <title>finney</title>
+  <link rel="manifest" href="manifest.json">
+</head>
+<body>
+  <script src="flutter_bootstrap.js" async></script>
+</body>
+</html>
Index: web/manifest.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/manifest.json b/web/manifest.json
new file mode 100644
--- /dev/null	
+++ b/web/manifest.json	
@@ -0,0 +1,35 @@
+{
+    "name": "finney",
+    "short_name": "finney",
+    "start_url": ".",
+    "display": "standalone",
+    "background_color": "#0175C2",
+    "theme_color": "#0175C2",
+    "description": "A new Flutter project.",
+    "orientation": "portrait-primary",
+    "prefer_related_applications": false,
+    "icons": [
+        {
+            "src": "icons/Icon-192.png",
+            "sizes": "192x192",
+            "type": "image/png"
+        },
+        {
+            "src": "icons/Icon-512.png",
+            "sizes": "512x512",
+            "type": "image/png"
+        },
+        {
+            "src": "icons/Icon-maskable-192.png",
+            "sizes": "192x192",
+            "type": "image/png",
+            "purpose": "maskable"
+        },
+        {
+            "src": "icons/Icon-maskable-512.png",
+            "sizes": "512x512",
+            "type": "image/png",
+            "purpose": "maskable"
+        }
+    ]
+}
Index: test/widget_test.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/widget_test.dart b/test/widget_test.dart
new file mode 100644
--- /dev/null	
+++ b/test/widget_test.dart	
@@ -0,0 +1,30 @@
+// This is a basic Flutter widget test.
+//
+// To perform an interaction with a widget in your test, use the WidgetTester
+// utility in the flutter_test package. For example, you can send tap and scroll
+// gestures. You can also use WidgetTester to find child widgets in the widget
+// tree, read text, and verify that the values of widget properties are correct.
+
+import 'package:flutter/material.dart';
+import 'package:flutter_test/flutter_test.dart';
+
+import 'package:finney/main.dart';
+
+void main() {
+  testWidgets('Counter increments smoke test', (WidgetTester tester) async {
+    // Build our app and trigger a frame.
+    await tester.pumpWidget(const MyApp());
+
+    // Verify that our counter starts at 0.
+    expect(find.text('0'), findsOneWidget);
+    expect(find.text('1'), findsNothing);
+
+    // Tap the '+' icon and trigger a frame.
+    await tester.tap(find.byIcon(Icons.add));
+    await tester.pump();
+
+    // Verify that our counter has incremented.
+    expect(find.text('0'), findsNothing);
+    expect(find.text('1'), findsOneWidget);
+  });
+}
Index: .idea/caches/deviceStreaming.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/caches/deviceStreaming.xml b/.idea/caches/deviceStreaming.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/caches/deviceStreaming.xml	
@@ -0,0 +1,679 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DeviceStreaming">
+    <option name="deviceSelectionList">
+      <list>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="27" />
+          <option name="brand" value="DOCOMO" />
+          <option name="codename" value="F01L" />
+          <option name="id" value="F01L" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="FUJITSU" />
+          <option name="name" value="F-01L" />
+          <option name="screenDensity" value="360" />
+          <option name="screenX" value="720" />
+          <option name="screenY" value="1280" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="OnePlus" />
+          <option name="codename" value="OP535DL1" />
+          <option name="id" value="OP535DL1" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="OnePlus" />
+          <option name="name" value="CPH2409" />
+          <option name="screenDensity" value="401" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2412" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="OnePlus" />
+          <option name="codename" value="OP5552L1" />
+          <option name="id" value="OP5552L1" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="OnePlus" />
+          <option name="name" value="CPH2415" />
+          <option name="screenDensity" value="480" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2412" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="OPPO" />
+          <option name="codename" value="OP573DL1" />
+          <option name="id" value="OP573DL1" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="OPPO" />
+          <option name="name" value="CPH2557" />
+          <option name="screenDensity" value="480" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="28" />
+          <option name="brand" value="DOCOMO" />
+          <option name="codename" value="SH-01L" />
+          <option name="id" value="SH-01L" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="SHARP" />
+          <option name="name" value="AQUOS sense2 SH-01L" />
+          <option name="screenDensity" value="480" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2160" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="a15" />
+          <option name="id" value="a15" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="A15" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="a15x" />
+          <option name="id" value="a15x" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="A15 5G" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="a16x" />
+          <option name="id" value="a16x" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="A16 5G" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="a35x" />
+          <option name="id" value="a35x" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="A35" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="31" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="a51" />
+          <option name="id" value="a51" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy A51" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="akita" />
+          <option name="id" value="akita" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 8a" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="motorola" />
+          <option name="codename" value="arcfox" />
+          <option name="id" value="arcfox" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Motorola" />
+          <option name="name" value="razr plus 2024" />
+          <option name="screenDensity" value="360" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="1272" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="motorola" />
+          <option name="codename" value="austin" />
+          <option name="id" value="austin" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Motorola" />
+          <option name="name" value="moto g 5G (2022)" />
+          <option name="screenDensity" value="280" />
+          <option name="screenX" value="720" />
+          <option name="screenY" value="1600" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="b0q" />
+          <option name="id" value="b0q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy S22 Ultra" />
+          <option name="screenDensity" value="600" />
+          <option name="screenX" value="1440" />
+          <option name="screenY" value="3088" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="32" />
+          <option name="brand" value="google" />
+          <option name="codename" value="bluejay" />
+          <option name="id" value="bluejay" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 6a" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="caiman" />
+          <option name="id" value="caiman" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9 Pro" />
+          <option name="screenDensity" value="360" />
+          <option name="screenX" value="960" />
+          <option name="screenY" value="2142" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="comet" />
+          <option name="default" value="true" />
+          <option name="id" value="comet" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9 Pro Fold" />
+          <option name="screenDensity" value="390" />
+          <option name="screenX" value="2076" />
+          <option name="screenY" value="2152" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="35" />
+          <option name="brand" value="google" />
+          <option name="codename" value="comet" />
+          <option name="default" value="true" />
+          <option name="id" value="comet" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9 Pro Fold" />
+          <option name="screenDensity" value="390" />
+          <option name="screenX" value="2076" />
+          <option name="screenY" value="2152" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="29" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="crownqlteue" />
+          <option name="id" value="crownqlteue" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy Note9" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="2220" />
+          <option name="screenY" value="1080" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="dm2q" />
+          <option name="id" value="dm2q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="S23 Plus" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="dm3q" />
+          <option name="id" value="dm3q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy S23 Ultra" />
+          <option name="screenDensity" value="600" />
+          <option name="screenX" value="1440" />
+          <option name="screenY" value="3088" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="e1q" />
+          <option name="default" value="true" />
+          <option name="id" value="e1q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy S24" />
+          <option name="screenDensity" value="480" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="e3q" />
+          <option name="id" value="e3q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy S24 Ultra" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1440" />
+          <option name="screenY" value="3120" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="google" />
+          <option name="codename" value="eos" />
+          <option name="id" value="eos" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Eos" />
+          <option name="screenDensity" value="320" />
+          <option name="screenX" value="384" />
+          <option name="screenY" value="384" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="google" />
+          <option name="codename" value="felix" />
+          <option name="id" value="felix" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel Fold" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="2208" />
+          <option name="screenY" value="1840" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="felix" />
+          <option name="id" value="felix" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel Fold" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="2208" />
+          <option name="screenY" value="1840" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="google" />
+          <option name="codename" value="felix_camera" />
+          <option name="id" value="felix_camera" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel Fold (Camera-enabled)" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="2208" />
+          <option name="screenY" value="1840" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="motorola" />
+          <option name="codename" value="fogona" />
+          <option name="id" value="fogona" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Motorola" />
+          <option name="name" value="moto g play - 2024" />
+          <option name="screenDensity" value="280" />
+          <option name="screenX" value="720" />
+          <option name="screenY" value="1600" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="g0q" />
+          <option name="id" value="g0q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="SM-S906U1" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="gta9pwifi" />
+          <option name="id" value="gta9pwifi" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="SM-X210" />
+          <option name="screenDensity" value="240" />
+          <option name="screenX" value="1200" />
+          <option name="screenY" value="1920" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="gts7xllite" />
+          <option name="id" value="gts7xllite" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="SM-T738U" />
+          <option name="screenDensity" value="340" />
+          <option name="screenX" value="1600" />
+          <option name="screenY" value="2560" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="gts8uwifi" />
+          <option name="formFactor" value="Tablet" />
+          <option name="id" value="gts8uwifi" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy Tab S8 Ultra" />
+          <option name="screenDensity" value="320" />
+          <option name="screenX" value="1848" />
+          <option name="screenY" value="2960" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="gts8wifi" />
+          <option name="formFactor" value="Tablet" />
+          <option name="id" value="gts8wifi" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy Tab S8" />
+          <option name="screenDensity" value="274" />
+          <option name="screenX" value="1600" />
+          <option name="screenY" value="2560" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="gts9fe" />
+          <option name="id" value="gts9fe" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy Tab S9 FE 5G" />
+          <option name="screenDensity" value="280" />
+          <option name="screenX" value="1440" />
+          <option name="screenY" value="2304" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="husky" />
+          <option name="id" value="husky" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 8 Pro" />
+          <option name="screenDensity" value="390" />
+          <option name="screenX" value="1008" />
+          <option name="screenY" value="2244" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="30" />
+          <option name="brand" value="motorola" />
+          <option name="codename" value="java" />
+          <option name="id" value="java" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Motorola" />
+          <option name="name" value="G20" />
+          <option name="screenDensity" value="280" />
+          <option name="screenX" value="720" />
+          <option name="screenY" value="1600" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="komodo" />
+          <option name="id" value="komodo" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9 Pro XL" />
+          <option name="screenDensity" value="360" />
+          <option name="screenX" value="1008" />
+          <option name="screenY" value="2244" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="35" />
+          <option name="brand" value="google" />
+          <option name="codename" value="komodo" />
+          <option name="id" value="komodo" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9 Pro XL" />
+          <option name="screenDensity" value="360" />
+          <option name="screenX" value="1008" />
+          <option name="screenY" value="2244" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="google" />
+          <option name="codename" value="lynx" />
+          <option name="id" value="lynx" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 7a" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="motorola" />
+          <option name="codename" value="maui" />
+          <option name="id" value="maui" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Motorola" />
+          <option name="name" value="moto g play - 2023" />
+          <option name="screenDensity" value="280" />
+          <option name="screenX" value="720" />
+          <option name="screenY" value="1600" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="o1q" />
+          <option name="id" value="o1q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy S21" />
+          <option name="screenDensity" value="421" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="31" />
+          <option name="brand" value="google" />
+          <option name="codename" value="oriole" />
+          <option name="id" value="oriole" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 6" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="google" />
+          <option name="codename" value="panther" />
+          <option name="id" value="panther" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 7" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="q5q" />
+          <option name="id" value="q5q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy Z Fold5" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1812" />
+          <option name="screenY" value="2176" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="q6q" />
+          <option name="id" value="q6q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy Z Fold6" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1856" />
+          <option name="screenY" value="2160" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="30" />
+          <option name="brand" value="google" />
+          <option name="codename" value="r11" />
+          <option name="formFactor" value="Wear OS" />
+          <option name="id" value="r11" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel Watch" />
+          <option name="screenDensity" value="320" />
+          <option name="screenX" value="384" />
+          <option name="screenY" value="384" />
+          <option name="type" value="WEAR_OS" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="r11q" />
+          <option name="id" value="r11q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="SM-S711U" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="30" />
+          <option name="brand" value="google" />
+          <option name="codename" value="redfin" />
+          <option name="id" value="redfin" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 5" />
+          <option name="screenDensity" value="440" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2340" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="shiba" />
+          <option name="id" value="shiba" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 8" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="t2q" />
+          <option name="id" value="t2q" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="Galaxy S21 Plus" />
+          <option name="screenDensity" value="394" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2400" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="33" />
+          <option name="brand" value="google" />
+          <option name="codename" value="tangorpro" />
+          <option name="formFactor" value="Tablet" />
+          <option name="id" value="tangorpro" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel Tablet" />
+          <option name="screenDensity" value="320" />
+          <option name="screenX" value="1600" />
+          <option name="screenY" value="2560" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="35" />
+          <option name="brand" value="google" />
+          <option name="codename" value="tegu" />
+          <option name="id" value="tegu" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9a" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2424" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="google" />
+          <option name="codename" value="tokay" />
+          <option name="default" value="true" />
+          <option name="id" value="tokay" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2424" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="35" />
+          <option name="brand" value="google" />
+          <option name="codename" value="tokay" />
+          <option name="default" value="true" />
+          <option name="id" value="tokay" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Google" />
+          <option name="name" value="Pixel 9" />
+          <option name="screenDensity" value="420" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2424" />
+        </PersistentDeviceSelectionData>
+        <PersistentDeviceSelectionData>
+          <option name="api" value="34" />
+          <option name="brand" value="samsung" />
+          <option name="codename" value="xcover7" />
+          <option name="id" value="xcover7" />
+          <option name="labId" value="google" />
+          <option name="manufacturer" value="Samsung" />
+          <option name="name" value="SM-G556B" />
+          <option name="screenDensity" value="450" />
+          <option name="screenX" value="1080" />
+          <option name="screenY" value="2408" />
+        </PersistentDeviceSelectionData>
+      </list>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Dart_SDK.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Dart_SDK.xml b/.idea/libraries/Dart_SDK.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Dart_SDK.xml	
@@ -0,0 +1,31 @@
+<component name="libraryTable">
+  <library name="Dart SDK">
+    <CLASSES>
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/_internal" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/async" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/cli" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/collection" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/concurrent" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/convert" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/core" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/developer" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/ffi" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/html" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/indexed_db" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/io" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/isolate" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/js" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/js_interop" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/js_interop_unsafe" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/js_util" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/math" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/mirrors" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/svg" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/typed_data" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/web_audio" />
+      <root url="file://C:/flutter/bin/cache/dart-sdk/lib/web_gl" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Dart_Packages.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Dart_Packages.xml b/.idea/libraries/Dart_Packages.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Dart_Packages.xml	
@@ -0,0 +1,1508 @@
+<component name="libraryTable">
+  <library name="Dart Packages" type="DartPackagesLibraryType">
+    <properties>
+      <option name="packageNameToDirsMap">
+        <entry key="_fe_analyzer_shared">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/_fe_analyzer_shared-47.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="_flutterfire_internals">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/_flutterfire_internals-1.3.54/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="analyzer">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/analyzer-4.7.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="archive">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/archive-3.6.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="args">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/args-2.7.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="async">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/async-2.12.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="boolean_selector">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/boolean_selector-2.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="build">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build-2.4.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="build_config">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_config-1.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="build_daemon">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_daemon-4.0.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="build_resolvers">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_resolvers-2.0.10/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="build_runner">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_runner-2.4.13/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="build_runner_core">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_runner_core-7.2.10/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="built_collection">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/built_collection-5.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="built_value">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/built_value-8.9.5/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cached_network_image">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cached_network_image-3.3.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cached_network_image_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cached_network_image_platform_interface-4.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cached_network_image_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cached_network_image_web-1.2.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="characters">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/characters-1.4.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="checked_yaml">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/checked_yaml-2.0.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="clock">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/clock-1.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cloud_firestore">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cloud_firestore-5.6.5/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cloud_firestore_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cloud_firestore_platform_interface-6.6.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cloud_firestore_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cloud_firestore_web-4.4.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="code_builder">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/code_builder-4.10.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="collection">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/collection-1.19.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="convert">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/convert-3.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cross_file">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cross_file-0.3.4+2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="crypto">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/crypto-3.0.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="csslib">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/csslib-1.0.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="cupertino_icons">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cupertino_icons-1.0.8/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="dart_style">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dart_style-2.2.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="dash_chat_2">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dash_chat_2-0.0.21/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="dio">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dio-5.8.0+1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="dio_web_adapter">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dio_web_adapter-2.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="equatable">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/equatable-2.0.7/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="fake_async">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/fake_async-1.3.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="ffi">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/ffi-2.1.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="file">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file-7.0.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="file_selector_linux">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_linux-0.9.3+2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="file_selector_macos">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_macos-0.9.4+2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="file_selector_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_platform_interface-2.6.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="file_selector_windows">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_windows-0.9.3+4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="firebase_auth">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_auth-5.5.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="firebase_auth_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_auth_platform_interface-7.6.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="firebase_auth_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_auth_web-5.14.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="firebase_core">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_core-3.13.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="firebase_core_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_core_platform_interface-5.4.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="firebase_core_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_core_web-2.22.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="fixnum">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/fixnum-1.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="fl_chart">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/fl_chart-0.65.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter">
+          <value>
+            <list>
+              <option value="C:/flutter/packages/flutter/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_cache_manager">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_cache_manager-3.3.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_gemini">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_gemini-3.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview-6.1.5/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_android-1.1.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview_internal_annotations">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_internal_annotations-1.2.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview_ios">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_ios-1.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview_macos">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_macos-1.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_platform_interface-1.3.0+1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_web-1.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_inappwebview_windows">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_windows-0.6.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_lints">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_lints-5.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_localization">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_localization-0.3.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_localizations">
+          <value>
+            <list>
+              <option value="C:/flutter/packages/flutter_localizations/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_markdown">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_markdown-0.7.7/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_parsed_text">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_parsed_text-2.2.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_plugin_android_lifecycle">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_plugin_android_lifecycle-2.0.27/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_slidable">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_slidable-3.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_test">
+          <value>
+            <list>
+              <option value="C:/flutter/packages/flutter_test/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_tts">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_tts-4.2.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="flutter_web_plugins">
+          <value>
+            <list>
+              <option value="C:/flutter/packages/flutter_web_plugins/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="frontend_server_client">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/frontend_server_client-4.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="glob">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/glob-2.1.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_fonts">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_fonts-4.0.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_identity_services_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_identity_services_web-0.3.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_nav_bar">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_nav_bar-5.0.7/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_sign_in">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in-6.3.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_sign_in_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_android-6.2.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_sign_in_ios">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_ios-5.8.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_sign_in_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_platform_interface-2.5.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="google_sign_in_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_web-0.12.4+4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="graphs">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/graphs-2.3.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="hive">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive-2.2.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="hive_flutter">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive_flutter-1.1.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="hive_generator">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive_generator-1.1.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="hive_ui">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive_ui-1.0.14/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="html">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/html-0.15.5+1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="http">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/http-0.13.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="http_multi_server">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/http_multi_server-3.2.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="http_parser">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/http_parser-4.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker-1.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_android-0.8.12+22/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker_for_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_for_web-3.0.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker_ios">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_ios-0.8.12+2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker_linux">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_linux-0.2.1+2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker_macos">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_macos-0.2.1+2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_platform_interface-2.10.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="image_picker_windows">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_windows-0.2.1+1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="internet_connection_checker">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/internet_connection_checker-1.0.0+1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="intl">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/intl-0.19.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="io">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/io-1.0.5/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="js">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/js-0.6.7/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="json_annotation">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/json_annotation-4.9.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="leak_tracker">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker-10.0.8/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="leak_tracker_flutter_testing">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_flutter_testing-3.0.9/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="leak_tracker_testing">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_testing-3.0.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="lints">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/lints-5.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="logging">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/logging-1.3.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="lottie">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/lottie-3.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="lucide_icons">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/lucide_icons-0.257.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="markdown">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/markdown-7.3.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="matcher">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/matcher-0.12.17/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="material_color_utilities">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/material_color_utilities-0.11.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="meta">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/meta-1.16.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="mime">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/mime-2.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="octo_image">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/octo_image-2.1.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="package_config">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/package_config-2.2.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="path">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path-1.9.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="path_provider">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider-2.1.5/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="path_provider_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_android-2.2.16/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="path_provider_foundation">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_foundation-2.4.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="path_provider_linux">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_linux-2.2.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="path_provider_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="path_provider_windows">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_windows-2.3.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="pedantic">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pedantic-1.11.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="platform">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/platform-3.1.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="plugin_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/plugin_platform_interface-2.1.8/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="pool">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pool-1.5.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="pub_semver">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pub_semver-2.2.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="pubspec_parse">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pubspec_parse-1.5.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="rxdart">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/rxdart-0.27.7/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shared_preferences">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences-2.5.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shared_preferences_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shared_preferences_foundation">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shared_preferences_linux">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_linux-2.4.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shared_preferences_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shared_preferences_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_web-2.4.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shared_preferences_windows">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_windows-2.4.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shelf">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shelf-1.4.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="shelf_web_socket">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shelf_web_socket-2.0.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="sky_engine">
+          <value>
+            <list>
+              <option value="C:/flutter/bin/cache/pkg/sky_engine/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="source_gen">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/source_gen-1.2.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="source_helper">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/source_helper-1.3.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="source_span">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/source_span-1.10.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="speech_to_text">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/speech_to_text-7.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="speech_to_text_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/speech_to_text_platform_interface-2.3.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="sprintf">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sprintf-7.0.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="sqflite">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite-2.4.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="sqflite_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_android-2.4.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="sqflite_common">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_common-2.5.5/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="sqflite_darwin">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_darwin-2.4.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="sqflite_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_platform_interface-2.4.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="stack_trace">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/stack_trace-1.12.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="stream_channel">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/stream_channel-2.1.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="stream_transform">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/stream_transform-2.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="string_scanner">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/string_scanner-1.4.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="synchronized">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/synchronized-3.3.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="term_glyph">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/term_glyph-1.2.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="test_api">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/test_api-0.7.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="timing">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/timing-1.0.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="translator">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/translator-0.1.7/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="typed_data">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/typed_data-1.4.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="universal_io">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/universal_io-2.2.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher-6.3.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_android-6.3.15/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher_ios">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_ios-6.3.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher_linux">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_linux-3.2.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher_macos">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_macos-3.2.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_web-2.4.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="url_launcher_windows">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_windows-3.1.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="uuid">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/uuid-3.0.7/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="vector_math">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/vector_math-2.1.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="video_player">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player-2.9.5/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="video_player_android">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_android-2.8.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="video_player_avfoundation">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_avfoundation-2.7.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="video_player_platform_interface">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_platform_interface-6.3.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="video_player_web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_web-2.3.4/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="vm_service">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/vm_service-14.3.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="watcher">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/watcher-1.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="web">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/web-1.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="web_socket">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/web_socket-0.1.6/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="web_socket_channel">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/web_socket_channel-3.0.2/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="xdg_directories">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/xdg_directories-1.1.0/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="yaml">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/yaml-3.1.3/lib" />
+            </list>
+          </value>
+        </entry>
+        <entry key="youtube_player_flutter">
+          <value>
+            <list>
+              <option value="$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/youtube_player_flutter-9.1.1/lib" />
+            </list>
+          </value>
+        </entry>
+      </option>
+    </properties>
+    <CLASSES>
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/_fe_analyzer_shared-47.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/_flutterfire_internals-1.3.54/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/analyzer-4.7.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/archive-3.6.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/args-2.7.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/async-2.12.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/boolean_selector-2.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build-2.4.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_config-1.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_daemon-4.0.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_resolvers-2.0.10/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_runner-2.4.13/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/build_runner_core-7.2.10/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/built_collection-5.1.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/built_value-8.9.5/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cached_network_image-3.3.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cached_network_image_platform_interface-4.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cached_network_image_web-1.2.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/characters-1.4.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/checked_yaml-2.0.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/clock-1.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cloud_firestore-5.6.5/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cloud_firestore_platform_interface-6.6.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cloud_firestore_web-4.4.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/code_builder-4.10.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/collection-1.19.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/convert-3.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cross_file-0.3.4+2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/crypto-3.0.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/csslib-1.0.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/cupertino_icons-1.0.8/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dart_style-2.2.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dash_chat_2-0.0.21/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dio-5.8.0+1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/dio_web_adapter-2.1.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/equatable-2.0.7/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/fake_async-1.3.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/ffi-2.1.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file-7.0.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_linux-0.9.3+2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_macos-0.9.4+2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_platform_interface-2.6.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/file_selector_windows-0.9.3+4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_auth-5.5.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_auth_platform_interface-7.6.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_auth_web-5.14.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_core-3.13.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_core_platform_interface-5.4.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/firebase_core_web-2.22.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/fixnum-1.1.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/fl_chart-0.65.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_cache_manager-3.3.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_gemini-3.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview-6.1.5/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_android-1.1.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_internal_annotations-1.2.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_ios-1.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_macos-1.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_platform_interface-1.3.0+1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_web-1.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_inappwebview_windows-0.6.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_lints-5.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_localization-0.3.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_markdown-0.7.7/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_parsed_text-2.2.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_plugin_android_lifecycle-2.0.27/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_slidable-3.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/flutter_tts-4.2.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/frontend_server_client-4.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/glob-2.1.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_fonts-4.0.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_identity_services_web-0.3.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_nav_bar-5.0.7/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in-6.3.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_android-6.2.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_ios-5.8.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_platform_interface-2.5.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/google_sign_in_web-0.12.4+4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/graphs-2.3.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive-2.2.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive_flutter-1.1.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive_generator-1.1.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/hive_ui-1.0.14/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/html-0.15.5+1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/http-0.13.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/http_multi_server-3.2.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/http_parser-4.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker-1.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_android-0.8.12+22/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_for_web-3.0.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_ios-0.8.12+2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_linux-0.2.1+2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_macos-0.2.1+2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_platform_interface-2.10.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/image_picker_windows-0.2.1+1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/internet_connection_checker-1.0.0+1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/intl-0.19.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/io-1.0.5/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/js-0.6.7/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/json_annotation-4.9.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker-10.0.8/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_flutter_testing-3.0.9/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/leak_tracker_testing-3.0.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/lints-5.1.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/logging-1.3.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/lottie-3.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/lucide_icons-0.257.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/markdown-7.3.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/matcher-0.12.17/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/material_color_utilities-0.11.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/meta-1.16.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/mime-2.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/octo_image-2.1.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/package_config-2.2.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path-1.9.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider-2.1.5/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_android-2.2.16/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_foundation-2.4.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_linux-2.2.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_platform_interface-2.1.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/path_provider_windows-2.3.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pedantic-1.11.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/platform-3.1.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/plugin_platform_interface-2.1.8/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pool-1.5.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pub_semver-2.2.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/pubspec_parse-1.5.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/rxdart-0.27.7/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences-2.5.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_android-2.4.10/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_foundation-2.5.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_linux-2.4.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_platform_interface-2.4.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_web-2.4.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shared_preferences_windows-2.4.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shelf-1.4.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/shelf_web_socket-2.0.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/source_gen-1.2.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/source_helper-1.3.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/source_span-1.10.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/speech_to_text-7.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/speech_to_text_platform_interface-2.3.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sprintf-7.0.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite-2.4.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_android-2.4.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_common-2.5.5/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_darwin-2.4.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/sqflite_platform_interface-2.4.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/stack_trace-1.12.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/stream_channel-2.1.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/stream_transform-2.1.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/string_scanner-1.4.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/synchronized-3.3.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/term_glyph-1.2.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/test_api-0.7.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/timing-1.0.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/translator-0.1.7/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/typed_data-1.4.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/universal_io-2.2.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher-6.3.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_android-6.3.15/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_ios-6.3.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_linux-3.2.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_macos-3.2.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_platform_interface-2.3.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_web-2.4.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/url_launcher_windows-3.1.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/uuid-3.0.7/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/vector_math-2.1.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player-2.9.5/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_android-2.8.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_avfoundation-2.7.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_platform_interface-6.3.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/video_player_web-2.3.4/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/vm_service-14.3.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/watcher-1.1.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/web-1.1.1/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/web_socket-0.1.6/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/web_socket_channel-3.0.2/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/xdg_directories-1.1.0/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/yaml-3.1.3/lib" />
+      <root url="file://$USER_HOME$/AppData/Local/Pub/Cache/hosted/pub.dev/youtube_player_flutter-9.1.1/lib" />
+      <root url="file://C:/flutter/bin/cache/pkg/sky_engine/lib" />
+      <root url="file://C:/flutter/packages/flutter/lib" />
+      <root url="file://C:/flutter/packages/flutter_localizations/lib" />
+      <root url="file://C:/flutter/packages/flutter_test/lib" />
+      <root url="file://C:/flutter/packages/flutter_web_plugins/lib" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.idea/.gitignore	
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/modules.xml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Prototype.iml" filepath="$PROJECT_DIR$/.idea/Prototype.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/Prototype.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Prototype.iml b/.idea/Prototype.iml
new file mode 100644
--- /dev/null	
+++ b/.idea/Prototype.iml	
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.dart_tool" />
+      <excludeFolder url="file://$MODULE_DIR$/.pub" />
+      <excludeFolder url="file://$MODULE_DIR$/build" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Dart SDK" level="project" />
+    <orderEntry type="library" name="Dart Packages" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: linux/runner/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/runner/CMakeLists.txt b/linux/runner/CMakeLists.txt
new file mode 100644
--- /dev/null	
+++ b/linux/runner/CMakeLists.txt	
@@ -0,0 +1,26 @@
+cmake_minimum_required(VERSION 3.13)
+project(runner LANGUAGES CXX)
+
+# Define the application target. To change its name, change BINARY_NAME in the
+# top-level CMakeLists.txt, not the value here, or `flutter run` will no longer
+# work.
+#
+# Any new source files that you add to the application should be added here.
+add_executable(${BINARY_NAME}
+  "main.cc"
+  "my_application.cc"
+  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
+)
+
+# Apply the standard set of build settings. This can be removed for applications
+# that need different build settings.
+apply_standard_settings(${BINARY_NAME})
+
+# Add preprocessor definitions for the application ID.
+add_definitions(-DAPPLICATION_ID="${APPLICATION_ID}")
+
+# Add dependency libraries. Add any application-specific dependencies here.
+target_link_libraries(${BINARY_NAME} PRIVATE flutter)
+target_link_libraries(${BINARY_NAME} PRIVATE PkgConfig::GTK)
+
+target_include_directories(${BINARY_NAME} PRIVATE "${CMAKE_SOURCE_DIR}")
Index: linux/runner/my_application.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/runner/my_application.cc b/linux/runner/my_application.cc
new file mode 100644
--- /dev/null	
+++ b/linux/runner/my_application.cc	
@@ -0,0 +1,130 @@
+#include "my_application.h"
+
+#include <flutter_linux/flutter_linux.h>
+#ifdef GDK_WINDOWING_X11
+#include <gdk/gdkx.h>
+#endif
+
+#include "flutter/generated_plugin_registrant.h"
+
+struct _MyApplication {
+  GtkApplication parent_instance;
+  char** dart_entrypoint_arguments;
+};
+
+G_DEFINE_TYPE(MyApplication, my_application, GTK_TYPE_APPLICATION)
+
+// Implements GApplication::activate.
+static void my_application_activate(GApplication* application) {
+  MyApplication* self = MY_APPLICATION(application);
+  GtkWindow* window =
+      GTK_WINDOW(gtk_application_window_new(GTK_APPLICATION(application)));
+
+  // Use a header bar when running in GNOME as this is the common style used
+  // by applications and is the setup most users will be using (e.g. Ubuntu
+  // desktop).
+  // If running on X and not using GNOME then just use a traditional title bar
+  // in case the window manager does more exotic layout, e.g. tiling.
+  // If running on Wayland assume the header bar will work (may need changing
+  // if future cases occur).
+  gboolean use_header_bar = TRUE;
+#ifdef GDK_WINDOWING_X11
+  GdkScreen* screen = gtk_window_get_screen(window);
+  if (GDK_IS_X11_SCREEN(screen)) {
+    const gchar* wm_name = gdk_x11_screen_get_window_manager_name(screen);
+    if (g_strcmp0(wm_name, "GNOME Shell") != 0) {
+      use_header_bar = FALSE;
+    }
+  }
+#endif
+  if (use_header_bar) {
+    GtkHeaderBar* header_bar = GTK_HEADER_BAR(gtk_header_bar_new());
+    gtk_widget_show(GTK_WIDGET(header_bar));
+    gtk_header_bar_set_title(header_bar, "finney");
+    gtk_header_bar_set_show_close_button(header_bar, TRUE);
+    gtk_window_set_titlebar(window, GTK_WIDGET(header_bar));
+  } else {
+    gtk_window_set_title(window, "finney");
+  }
+
+  gtk_window_set_default_size(window, 1280, 720);
+  gtk_widget_show(GTK_WIDGET(window));
+
+  g_autoptr(FlDartProject) project = fl_dart_project_new();
+  fl_dart_project_set_dart_entrypoint_arguments(project, self->dart_entrypoint_arguments);
+
+  FlView* view = fl_view_new(project);
+  gtk_widget_show(GTK_WIDGET(view));
+  gtk_container_add(GTK_CONTAINER(window), GTK_WIDGET(view));
+
+  fl_register_plugins(FL_PLUGIN_REGISTRY(view));
+
+  gtk_widget_grab_focus(GTK_WIDGET(view));
+}
+
+// Implements GApplication::local_command_line.
+static gboolean my_application_local_command_line(GApplication* application, gchar*** arguments, int* exit_status) {
+  MyApplication* self = MY_APPLICATION(application);
+  // Strip out the first argument as it is the binary name.
+  self->dart_entrypoint_arguments = g_strdupv(*arguments + 1);
+
+  g_autoptr(GError) error = nullptr;
+  if (!g_application_register(application, nullptr, &error)) {
+     g_warning("Failed to register: %s", error->message);
+     *exit_status = 1;
+     return TRUE;
+  }
+
+  g_application_activate(application);
+  *exit_status = 0;
+
+  return TRUE;
+}
+
+// Implements GApplication::startup.
+static void my_application_startup(GApplication* application) {
+  //MyApplication* self = MY_APPLICATION(object);
+
+  // Perform any actions required at application startup.
+
+  G_APPLICATION_CLASS(my_application_parent_class)->startup(application);
+}
+
+// Implements GApplication::shutdown.
+static void my_application_shutdown(GApplication* application) {
+  //MyApplication* self = MY_APPLICATION(object);
+
+  // Perform any actions required at application shutdown.
+
+  G_APPLICATION_CLASS(my_application_parent_class)->shutdown(application);
+}
+
+// Implements GObject::dispose.
+static void my_application_dispose(GObject* object) {
+  MyApplication* self = MY_APPLICATION(object);
+  g_clear_pointer(&self->dart_entrypoint_arguments, g_strfreev);
+  G_OBJECT_CLASS(my_application_parent_class)->dispose(object);
+}
+
+static void my_application_class_init(MyApplicationClass* klass) {
+  G_APPLICATION_CLASS(klass)->activate = my_application_activate;
+  G_APPLICATION_CLASS(klass)->local_command_line = my_application_local_command_line;
+  G_APPLICATION_CLASS(klass)->startup = my_application_startup;
+  G_APPLICATION_CLASS(klass)->shutdown = my_application_shutdown;
+  G_OBJECT_CLASS(klass)->dispose = my_application_dispose;
+}
+
+static void my_application_init(MyApplication* self) {}
+
+MyApplication* my_application_new() {
+  // Set the program name to the application ID, which helps various systems
+  // like GTK and desktop environments map this running application to its
+  // corresponding .desktop file. This ensures better integration by allowing
+  // the application to be recognized beyond its binary name.
+  g_set_prgname(APPLICATION_ID);
+
+  return MY_APPLICATION(g_object_new(my_application_get_type(),
+                                     "application-id", APPLICATION_ID,
+                                     "flags", G_APPLICATION_NON_UNIQUE,
+                                     nullptr));
+}
Index: linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,245 @@
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() {
+  ++g_active_window_count;
+}
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title,
+                                const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window,
+                                      UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd,
+                            UINT const message,
+                            WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() {
+  return window_handle_;
+}
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: linux/flutter/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/flutter/CMakeLists.txt b/linux/flutter/CMakeLists.txt
new file mode 100644
--- /dev/null	
+++ b/linux/flutter/CMakeLists.txt	
@@ -0,0 +1,88 @@
+# This file controls Flutter-level build steps. It should not be edited.
+cmake_minimum_required(VERSION 3.10)
+
+set(EPHEMERAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ephemeral")
+
+# Configuration provided via flutter tool.
+include(${EPHEMERAL_DIR}/generated_config.cmake)
+
+# TODO: Move the rest of this into files in ephemeral. See
+# https://github.com/flutter/flutter/issues/57146.
+
+# Serves the same purpose as list(TRANSFORM ... PREPEND ...),
+# which isn't available in 3.10.
+function(list_prepend LIST_NAME PREFIX)
+    set(NEW_LIST "")
+    foreach(element ${${LIST_NAME}})
+        list(APPEND NEW_LIST "${PREFIX}${element}")
+    endforeach(element)
+    set(${LIST_NAME} "${NEW_LIST}" PARENT_SCOPE)
+endfunction()
+
+# === Flutter Library ===
+# System-level dependencies.
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)
+pkg_check_modules(GLIB REQUIRED IMPORTED_TARGET glib-2.0)
+pkg_check_modules(GIO REQUIRED IMPORTED_TARGET gio-2.0)
+
+set(FLUTTER_LIBRARY "${EPHEMERAL_DIR}/libflutter_linux_gtk.so")
+
+# Published to parent scope for install step.
+set(FLUTTER_LIBRARY ${FLUTTER_LIBRARY} PARENT_SCOPE)
+set(FLUTTER_ICU_DATA_FILE "${EPHEMERAL_DIR}/icudtl.dat" PARENT_SCOPE)
+set(PROJECT_BUILD_DIR "${PROJECT_DIR}/build/" PARENT_SCOPE)
+set(AOT_LIBRARY "${PROJECT_DIR}/build/lib/libapp.so" PARENT_SCOPE)
+
+list(APPEND FLUTTER_LIBRARY_HEADERS
+  "fl_basic_message_channel.h"
+  "fl_binary_codec.h"
+  "fl_binary_messenger.h"
+  "fl_dart_project.h"
+  "fl_engine.h"
+  "fl_json_message_codec.h"
+  "fl_json_method_codec.h"
+  "fl_message_codec.h"
+  "fl_method_call.h"
+  "fl_method_channel.h"
+  "fl_method_codec.h"
+  "fl_method_response.h"
+  "fl_plugin_registrar.h"
+  "fl_plugin_registry.h"
+  "fl_standard_message_codec.h"
+  "fl_standard_method_codec.h"
+  "fl_string_codec.h"
+  "fl_value.h"
+  "fl_view.h"
+  "flutter_linux.h"
+)
+list_prepend(FLUTTER_LIBRARY_HEADERS "${EPHEMERAL_DIR}/flutter_linux/")
+add_library(flutter INTERFACE)
+target_include_directories(flutter INTERFACE
+  "${EPHEMERAL_DIR}"
+)
+target_link_libraries(flutter INTERFACE "${FLUTTER_LIBRARY}")
+target_link_libraries(flutter INTERFACE
+  PkgConfig::GTK
+  PkgConfig::GLIB
+  PkgConfig::GIO
+)
+add_dependencies(flutter flutter_assemble)
+
+# === Flutter tool backend ===
+# _phony_ is a non-existent file to force this command to run every time,
+# since currently there's no way to get a full input/output list from the
+# flutter tool.
+add_custom_command(
+  OUTPUT ${FLUTTER_LIBRARY} ${FLUTTER_LIBRARY_HEADERS}
+    ${CMAKE_CURRENT_BINARY_DIR}/_phony_
+  COMMAND ${CMAKE_COMMAND} -E env
+    ${FLUTTER_TOOL_ENVIRONMENT}
+    "${FLUTTER_ROOT}/packages/flutter_tools/bin/tool_backend.sh"
+      ${FLUTTER_TARGET_PLATFORM} ${CMAKE_BUILD_TYPE}
+  VERBATIM
+)
+add_custom_target(flutter_assemble DEPENDS
+  "${FLUTTER_LIBRARY}"
+  ${FLUTTER_LIBRARY_HEADERS}
+)
Index: linux/flutter/generated_plugins.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/flutter/generated_plugins.cmake b/linux/flutter/generated_plugins.cmake
new file mode 100644
--- /dev/null	
+++ b/linux/flutter/generated_plugins.cmake	
@@ -0,0 +1,26 @@
+#
+# Generated file, do not edit.
+#
+
+list(APPEND FLUTTER_PLUGIN_LIST
+  file_selector_linux
+  flutter_localization
+  url_launcher_linux
+)
+
+list(APPEND FLUTTER_FFI_PLUGIN_LIST
+)
+
+set(PLUGIN_BUNDLED_LIBRARIES)
+
+foreach(plugin ${FLUTTER_PLUGIN_LIST})
+  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${plugin}/linux plugins/${plugin})
+  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)
+  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)
+  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})
+endforeach(plugin)
+
+foreach(ffi_plugin ${FLUTTER_FFI_PLUGIN_LIST})
+  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${ffi_plugin}/linux plugins/${ffi_plugin})
+  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${ffi_plugin}_bundled_libraries})
+endforeach(ffi_plugin)
Index: linux/flutter/generated_plugin_registrant.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/flutter/generated_plugin_registrant.cc b/linux/flutter/generated_plugin_registrant.cc
new file mode 100644
--- /dev/null	
+++ b/linux/flutter/generated_plugin_registrant.cc	
@@ -0,0 +1,23 @@
+//
+//  Generated file. Do not edit.
+//
+
+// clang-format off
+
+#include "generated_plugin_registrant.h"
+
+#include <file_selector_linux/file_selector_plugin.h>
+#include <flutter_localization/flutter_localization_plugin.h>
+#include <url_launcher_linux/url_launcher_plugin.h>
+
+void fl_register_plugins(FlPluginRegistry* registry) {
+  g_autoptr(FlPluginRegistrar) file_selector_linux_registrar =
+      fl_plugin_registry_get_registrar_for_plugin(registry, "FileSelectorPlugin");
+  file_selector_plugin_register_with_registrar(file_selector_linux_registrar);
+  g_autoptr(FlPluginRegistrar) flutter_localization_registrar =
+      fl_plugin_registry_get_registrar_for_plugin(registry, "FlutterLocalizationPlugin");
+  flutter_localization_plugin_register_with_registrar(flutter_localization_registrar);
+  g_autoptr(FlPluginRegistrar) url_launcher_linux_registrar =
+      fl_plugin_registry_get_registrar_for_plugin(registry, "UrlLauncherPlugin");
+  url_launcher_plugin_register_with_registrar(url_launcher_linux_registrar);
+}
Index: linux/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/.gitignore b/linux/.gitignore
new file mode 100644
--- /dev/null	
+++ b/linux/.gitignore	
@@ -0,0 +1,1 @@
+flutter/ephemeral
Index: linux/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/linux/CMakeLists.txt b/linux/CMakeLists.txt
new file mode 100644
--- /dev/null	
+++ b/linux/CMakeLists.txt	
@@ -0,0 +1,128 @@
+# Project-level configuration.
+cmake_minimum_required(VERSION 3.13)
+project(runner LANGUAGES CXX)
+
+# The name of the executable created for the application. Change this to change
+# the on-disk name of your application.
+set(BINARY_NAME "finney")
+# The unique GTK application identifier for this application. See:
+# https://wiki.gnome.org/HowDoI/ChooseApplicationID
+set(APPLICATION_ID "com.example.finney")
+
+# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
+# versions of CMake.
+cmake_policy(SET CMP0063 NEW)
+
+# Load bundled libraries from the lib/ directory relative to the binary.
+set(CMAKE_INSTALL_RPATH "$ORIGIN/lib")
+
+# Root filesystem for cross-building.
+if(FLUTTER_TARGET_PLATFORM_SYSROOT)
+  set(CMAKE_SYSROOT ${FLUTTER_TARGET_PLATFORM_SYSROOT})
+  set(CMAKE_FIND_ROOT_PATH ${CMAKE_SYSROOT})
+  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
+  set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
+  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
+  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
+endif()
+
+# Define build configuration options.
+if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
+  set(CMAKE_BUILD_TYPE "Debug" CACHE
+    STRING "Flutter build mode" FORCE)
+  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
+    "Debug" "Profile" "Release")
+endif()
+
+# Compilation settings that should be applied to most targets.
+#
+# Be cautious about adding new options here, as plugins use this function by
+# default. In most cases, you should add new options to specific targets instead
+# of modifying this function.
+function(APPLY_STANDARD_SETTINGS TARGET)
+  target_compile_features(${TARGET} PUBLIC cxx_std_14)
+  target_compile_options(${TARGET} PRIVATE -Wall -Werror)
+  target_compile_options(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:-O3>")
+  target_compile_definitions(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:NDEBUG>")
+endfunction()
+
+# Flutter library and tool build rules.
+set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
+add_subdirectory(${FLUTTER_MANAGED_DIR})
+
+# System-level dependencies.
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)
+
+# Application build; see runner/CMakeLists.txt.
+add_subdirectory("runner")
+
+# Run the Flutter tool portions of the build. This must not be removed.
+add_dependencies(${BINARY_NAME} flutter_assemble)
+
+# Only the install-generated bundle's copy of the executable will launch
+# correctly, since the resources must in the right relative locations. To avoid
+# people trying to run the unbundled copy, put it in a subdirectory instead of
+# the default top-level location.
+set_target_properties(${BINARY_NAME}
+  PROPERTIES
+  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/intermediates_do_not_run"
+)
+
+
+# Generated plugin build rules, which manage building the plugins and adding
+# them to the application.
+include(flutter/generated_plugins.cmake)
+
+
+# === Installation ===
+# By default, "installing" just makes a relocatable bundle in the build
+# directory.
+set(BUILD_BUNDLE_DIR "${PROJECT_BINARY_DIR}/bundle")
+if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
+  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
+endif()
+
+# Start with a clean build bundle directory every time.
+install(CODE "
+  file(REMOVE_RECURSE \"${BUILD_BUNDLE_DIR}/\")
+  " COMPONENT Runtime)
+
+set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
+set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib")
+
+install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+  COMPONENT Runtime)
+
+foreach(bundled_library ${PLUGIN_BUNDLED_LIBRARIES})
+  install(FILES "${bundled_library}"
+    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+    COMPONENT Runtime)
+endforeach(bundled_library)
+
+# Copy the native assets provided by the build.dart from all packages.
+set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/linux/")
+install(DIRECTORY "${NATIVE_ASSETS_DIR}"
+   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+   COMPONENT Runtime)
+
+# Fully re-copy the assets directory on each build to avoid having stale files
+# from a previous install.
+set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
+install(CODE "
+  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
+  " COMPONENT Runtime)
+install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
+  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)
+
+# Install the AOT library on non-Debug builds only.
+if(NOT CMAKE_BUILD_TYPE MATCHES "Debug")
+  install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+    COMPONENT Runtime)
+endif()
Index: macos/Runner/Configs/AppInfo.xcconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/Runner/Configs/AppInfo.xcconfig b/macos/Runner/Configs/AppInfo.xcconfig
new file mode 100644
--- /dev/null	
+++ b/macos/Runner/Configs/AppInfo.xcconfig	
@@ -0,0 +1,14 @@
+// Application-level settings for the Runner target.
+//
+// This may be replaced with something auto-generated from metadata (e.g., pubspec.yaml) in the
+// future. If not, the values below would default to using the project name when this becomes a
+// 'flutter create' template.
+
+// The application's name. By default this is also the title of the Flutter window.
+PRODUCT_NAME = finney
+
+// The application's bundle identifier
+PRODUCT_BUNDLE_IDENTIFIER = com.example.finney
+
+// The copyright displayed in application information
+PRODUCT_COPYRIGHT = Copyright © 2025 com.example. All rights reserved.
Index: macos/Runner/Configs/Warnings.xcconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/Runner/Configs/Warnings.xcconfig b/macos/Runner/Configs/Warnings.xcconfig
new file mode 100644
--- /dev/null	
+++ b/macos/Runner/Configs/Warnings.xcconfig	
@@ -0,0 +1,13 @@
+WARNING_CFLAGS = -Wall -Wconditional-uninitialized -Wnullable-to-nonnull-conversion -Wmissing-method-return-type -Woverlength-strings
+GCC_WARN_UNDECLARED_SELECTOR = YES
+CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY = YES
+CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE
+CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
+CLANG_WARN_PRAGMA_PACK = YES
+CLANG_WARN_STRICT_PROTOTYPES = YES
+CLANG_WARN_COMMA = YES
+GCC_WARN_STRICT_SELECTOR_MATCH = YES
+CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK = YES
+CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES
+GCC_WARN_SHADOW = YES
+CLANG_WARN_UNREACHABLE_CODE = YES
Index: macos/Runner/Base.lproj/MainMenu.xib
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/Runner/Base.lproj/MainMenu.xib b/macos/Runner/Base.lproj/MainMenu.xib
new file mode 100644
--- /dev/null	
+++ b/macos/Runner/Base.lproj/MainMenu.xib	
@@ -0,0 +1,343 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<document type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="MacOSX.Cocoa" propertyAccessControl="none" useAutolayout="YES" customObjectInstantitationMethod="direct">
+    <dependencies>
+        <deployment identifier="macosx"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.CocoaPlugin" version="14490.70"/>
+        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
+    </dependencies>
+    <objects>
+        <customObject id="-2" userLabel="File's Owner" customClass="NSApplication">
+            <connections>
+                <outlet property="delegate" destination="Voe-Tx-rLC" id="GzC-gU-4Uq"/>
+            </connections>
+        </customObject>
+        <customObject id="-1" userLabel="First Responder" customClass="FirstResponder"/>
+        <customObject id="-3" userLabel="Application" customClass="NSObject"/>
+        <customObject id="Voe-Tx-rLC" customClass="AppDelegate" customModule="Runner" customModuleProvider="target">
+            <connections>
+                <outlet property="applicationMenu" destination="uQy-DD-JDr" id="XBo-yE-nKs"/>
+                <outlet property="mainFlutterWindow" destination="QvC-M9-y7g" id="gIp-Ho-8D9"/>
+            </connections>
+        </customObject>
+        <customObject id="YLy-65-1bz" customClass="NSFontManager"/>
+        <menu title="Main Menu" systemMenu="main" id="AYu-sK-qS6">
+            <items>
+                <menuItem title="APP_NAME" id="1Xt-HY-uBw">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="APP_NAME" systemMenu="apple" id="uQy-DD-JDr">
+                        <items>
+                            <menuItem title="About APP_NAME" id="5kV-Vb-QxS">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="orderFrontStandardAboutPanel:" target="-1" id="Exp-CZ-Vem"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="VOq-y0-SEH"/>
+                            <menuItem title="Preferences…" keyEquivalent="," id="BOF-NM-1cW"/>
+                            <menuItem isSeparatorItem="YES" id="wFC-TO-SCJ"/>
+                            <menuItem title="Services" id="NMo-om-nkz">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Services" systemMenu="services" id="hz9-B4-Xy5"/>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="4je-JR-u6R"/>
+                            <menuItem title="Hide APP_NAME" keyEquivalent="h" id="Olw-nP-bQN">
+                                <connections>
+                                    <action selector="hide:" target="-1" id="PnN-Uc-m68"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Hide Others" keyEquivalent="h" id="Vdr-fp-XzO">
+                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
+                                <connections>
+                                    <action selector="hideOtherApplications:" target="-1" id="VT4-aY-XCT"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Show All" id="Kd2-mp-pUS">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="unhideAllApplications:" target="-1" id="Dhg-Le-xox"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="kCx-OE-vgT"/>
+                            <menuItem title="Quit APP_NAME" keyEquivalent="q" id="4sb-4s-VLi">
+                                <connections>
+                                    <action selector="terminate:" target="-1" id="Te7-pn-YzF"/>
+                                </connections>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="Edit" id="5QF-Oa-p0T">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="Edit" id="W48-6f-4Dl">
+                        <items>
+                            <menuItem title="Undo" keyEquivalent="z" id="dRJ-4n-Yzg">
+                                <connections>
+                                    <action selector="undo:" target="-1" id="M6e-cu-g7V"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Redo" keyEquivalent="Z" id="6dh-zS-Vam">
+                                <connections>
+                                    <action selector="redo:" target="-1" id="oIA-Rs-6OD"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="WRV-NI-Exz"/>
+                            <menuItem title="Cut" keyEquivalent="x" id="uRl-iY-unG">
+                                <connections>
+                                    <action selector="cut:" target="-1" id="YJe-68-I9s"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Copy" keyEquivalent="c" id="x3v-GG-iWU">
+                                <connections>
+                                    <action selector="copy:" target="-1" id="G1f-GL-Joy"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Paste" keyEquivalent="v" id="gVA-U4-sdL">
+                                <connections>
+                                    <action selector="paste:" target="-1" id="UvS-8e-Qdg"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Paste and Match Style" keyEquivalent="V" id="WeT-3V-zwk">
+                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
+                                <connections>
+                                    <action selector="pasteAsPlainText:" target="-1" id="cEh-KX-wJQ"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Delete" id="pa3-QI-u2k">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="delete:" target="-1" id="0Mk-Ml-PaM"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Select All" keyEquivalent="a" id="Ruw-6m-B2m">
+                                <connections>
+                                    <action selector="selectAll:" target="-1" id="VNm-Mi-diN"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="uyl-h8-XO2"/>
+                            <menuItem title="Find" id="4EN-yA-p0u">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Find" id="1b7-l0-nxx">
+                                    <items>
+                                        <menuItem title="Find…" tag="1" keyEquivalent="f" id="Xz5-n4-O0W">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="cD7-Qs-BN4"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Find and Replace…" tag="12" keyEquivalent="f" id="YEy-JH-Tfz">
+                                            <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="WD3-Gg-5AJ"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Find Next" tag="2" keyEquivalent="g" id="q09-fT-Sye">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="NDo-RZ-v9R"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Find Previous" tag="3" keyEquivalent="G" id="OwM-mh-QMV">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="HOh-sY-3ay"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Use Selection for Find" tag="7" keyEquivalent="e" id="buJ-ug-pKt">
+                                            <connections>
+                                                <action selector="performFindPanelAction:" target="-1" id="U76-nv-p5D"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Jump to Selection" keyEquivalent="j" id="S0p-oC-mLd">
+                                            <connections>
+                                                <action selector="centerSelectionInVisibleArea:" target="-1" id="IOG-6D-g5B"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Spelling and Grammar" id="Dv1-io-Yv7">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Spelling" id="3IN-sU-3Bg">
+                                    <items>
+                                        <menuItem title="Show Spelling and Grammar" keyEquivalent=":" id="HFo-cy-zxI">
+                                            <connections>
+                                                <action selector="showGuessPanel:" target="-1" id="vFj-Ks-hy3"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Check Document Now" keyEquivalent=";" id="hz2-CU-CR7">
+                                            <connections>
+                                                <action selector="checkSpelling:" target="-1" id="fz7-VC-reM"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem isSeparatorItem="YES" id="bNw-od-mp5"/>
+                                        <menuItem title="Check Spelling While Typing" id="rbD-Rh-wIN">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleContinuousSpellChecking:" target="-1" id="7w6-Qz-0kB"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Check Grammar With Spelling" id="mK6-2p-4JG">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleGrammarChecking:" target="-1" id="muD-Qn-j4w"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Correct Spelling Automatically" id="78Y-hA-62v">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticSpellingCorrection:" target="-1" id="2lM-Qi-WAP"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Substitutions" id="9ic-FL-obx">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Substitutions" id="FeM-D8-WVr">
+                                    <items>
+                                        <menuItem title="Show Substitutions" id="z6F-FW-3nz">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="orderFrontSubstitutionsPanel:" target="-1" id="oku-mr-iSq"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem isSeparatorItem="YES" id="gPx-C9-uUO"/>
+                                        <menuItem title="Smart Copy/Paste" id="9yt-4B-nSM">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleSmartInsertDelete:" target="-1" id="3IJ-Se-DZD"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Smart Quotes" id="hQb-2v-fYv">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticQuoteSubstitution:" target="-1" id="ptq-xd-QOA"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Smart Dashes" id="rgM-f4-ycn">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticDashSubstitution:" target="-1" id="oCt-pO-9gS"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Smart Links" id="cwL-P1-jid">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticLinkDetection:" target="-1" id="Gip-E3-Fov"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Data Detectors" id="tRr-pd-1PS">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticDataDetection:" target="-1" id="R1I-Nq-Kbl"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Text Replacement" id="HFQ-gK-NFA">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="toggleAutomaticTextReplacement:" target="-1" id="DvP-Fe-Py6"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Transformations" id="2oI-Rn-ZJC">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Transformations" id="c8a-y6-VQd">
+                                    <items>
+                                        <menuItem title="Make Upper Case" id="vmV-6d-7jI">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="uppercaseWord:" target="-1" id="sPh-Tk-edu"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Make Lower Case" id="d9M-CD-aMd">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="lowercaseWord:" target="-1" id="iUZ-b5-hil"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Capitalize" id="UEZ-Bs-lqG">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="capitalizeWord:" target="-1" id="26H-TL-nsh"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                            <menuItem title="Speech" id="xrE-MZ-jX0">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <menu key="submenu" title="Speech" id="3rS-ZA-NoH">
+                                    <items>
+                                        <menuItem title="Start Speaking" id="Ynk-f8-cLZ">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="startSpeaking:" target="-1" id="654-Ng-kyl"/>
+                                            </connections>
+                                        </menuItem>
+                                        <menuItem title="Stop Speaking" id="Oyz-dy-DGm">
+                                            <modifierMask key="keyEquivalentModifierMask"/>
+                                            <connections>
+                                                <action selector="stopSpeaking:" target="-1" id="dX8-6p-jy9"/>
+                                            </connections>
+                                        </menuItem>
+                                    </items>
+                                </menu>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="View" id="H8h-7b-M4v">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="View" id="HyV-fh-RgO">
+                        <items>
+                            <menuItem title="Enter Full Screen" keyEquivalent="f" id="4J7-dP-txa">
+                                <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
+                                <connections>
+                                    <action selector="toggleFullScreen:" target="-1" id="dU3-MA-1Rq"/>
+                                </connections>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="Window" id="aUF-d1-5bR">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="Window" systemMenu="window" id="Td7-aD-5lo">
+                        <items>
+                            <menuItem title="Minimize" keyEquivalent="m" id="OY7-WF-poV">
+                                <connections>
+                                    <action selector="performMiniaturize:" target="-1" id="VwT-WD-YPe"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem title="Zoom" id="R4o-n2-Eq4">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="performZoom:" target="-1" id="DIl-cC-cCs"/>
+                                </connections>
+                            </menuItem>
+                            <menuItem isSeparatorItem="YES" id="eu3-7i-yIM"/>
+                            <menuItem title="Bring All to Front" id="LE2-aR-0XJ">
+                                <modifierMask key="keyEquivalentModifierMask"/>
+                                <connections>
+                                    <action selector="arrangeInFront:" target="-1" id="DRN-fu-gQh"/>
+                                </connections>
+                            </menuItem>
+                        </items>
+                    </menu>
+                </menuItem>
+                <menuItem title="Help" id="EPT-qC-fAb">
+                    <modifierMask key="keyEquivalentModifierMask"/>
+                    <menu key="submenu" title="Help" systemMenu="help" id="rJ0-wn-3NY"/>
+                </menuItem>
+            </items>
+            <point key="canvasLocation" x="142" y="-258"/>
+        </menu>
+        <window title="APP_NAME" allowsToolTipsWhenApplicationIsInactive="NO" autorecalculatesKeyViewLoop="NO" releasedWhenClosed="NO" animationBehavior="default" id="QvC-M9-y7g" customClass="MainFlutterWindow" customModule="Runner" customModuleProvider="target">
+            <windowStyleMask key="styleMask" titled="YES" closable="YES" miniaturizable="YES" resizable="YES"/>
+            <rect key="contentRect" x="335" y="390" width="800" height="600"/>
+            <rect key="screenRect" x="0.0" y="0.0" width="2560" height="1577"/>
+            <view key="contentView" wantsLayer="YES" id="EiT-Mj-1SZ">
+                <rect key="frame" x="0.0" y="0.0" width="800" height="600"/>
+                <autoresizingMask key="autoresizingMask"/>
+            </view>
+        </window>
+    </objects>
+</document>
Index: macos/Flutter/GeneratedPluginRegistrant.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
new file mode 100644
--- /dev/null	
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift	
@@ -0,0 +1,38 @@
+//
+//  Generated file. Do not edit.
+//
+
+import FlutterMacOS
+import Foundation
+
+import cloud_firestore
+import file_selector_macos
+import firebase_auth
+import firebase_core
+import flutter_inappwebview_macos
+import flutter_localization
+import flutter_tts
+import google_sign_in_ios
+import path_provider_foundation
+import shared_preferences_foundation
+import speech_to_text
+import sqflite_darwin
+import url_launcher_macos
+import video_player_avfoundation
+
+func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
+  FLTFirebaseFirestorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseFirestorePlugin"))
+  FileSelectorPlugin.register(with: registry.registrar(forPlugin: "FileSelectorPlugin"))
+  FLTFirebaseAuthPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseAuthPlugin"))
+  FLTFirebaseCorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseCorePlugin"))
+  InAppWebViewFlutterPlugin.register(with: registry.registrar(forPlugin: "InAppWebViewFlutterPlugin"))
+  FlutterLocalizationPlugin.register(with: registry.registrar(forPlugin: "FlutterLocalizationPlugin"))
+  FlutterTtsPlugin.register(with: registry.registrar(forPlugin: "FlutterTtsPlugin"))
+  FLTGoogleSignInPlugin.register(with: registry.registrar(forPlugin: "FLTGoogleSignInPlugin"))
+  PathProviderPlugin.register(with: registry.registrar(forPlugin: "PathProviderPlugin"))
+  SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: "SharedPreferencesPlugin"))
+  SpeechToTextPlugin.register(with: registry.registrar(forPlugin: "SpeechToTextPlugin"))
+  SqflitePlugin.register(with: registry.registrar(forPlugin: "SqflitePlugin"))
+  UrlLauncherPlugin.register(with: registry.registrar(forPlugin: "UrlLauncherPlugin"))
+  FVPVideoPlayerPlugin.register(with: registry.registrar(forPlugin: "FVPVideoPlayerPlugin"))
+}
Index: macos/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/.gitignore b/macos/.gitignore
new file mode 100644
--- /dev/null	
+++ b/macos/.gitignore	
@@ -0,0 +1,7 @@
+# Flutter-related
+**/Flutter/ephemeral/
+**/Pods/
+
+# Xcode-related
+**/dgph
+**/xcuserdata/
Index: macos/Runner.xcodeproj/project.pbxproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/macos/Runner.xcodeproj/project.pbxproj b/macos/Runner.xcodeproj/project.pbxproj
new file mode 100644
--- /dev/null	
+++ b/macos/Runner.xcodeproj/project.pbxproj	
@@ -0,0 +1,705 @@
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 54;
+	objects = {
+
+/* Begin PBXAggregateTarget section */
+		33CC111A2044C6BA0003C045 /* Flutter Assemble */ = {
+			isa = PBXAggregateTarget;
+			buildConfigurationList = 33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */;
+			buildPhases = (
+				33CC111E2044C6BF0003C045 /* ShellScript */,
+			);
+			dependencies = (
+			);
+			name = "Flutter Assemble";
+			productName = FLX;
+		};
+/* End PBXAggregateTarget section */
+
+/* Begin PBXBuildFile section */
+		331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C80D7294CF71000263BE5 /* RunnerTests.swift */; };
+		335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */ = {isa = PBXBuildFile; fileRef = 335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */; };
+		33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC10F02044A3C60003C045 /* AppDelegate.swift */; };
+		33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F22044A3C60003C045 /* Assets.xcassets */; };
+		33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F42044A3C60003C045 /* MainMenu.xib */; };
+		33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC11122044BFA00003C045 /* MainFlutterWindow.swift */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXContainerItemProxy section */
+		331C80D9294CF71000263BE5 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 33CC10EC2044A3C60003C045;
+			remoteInfo = Runner;
+		};
+		33CC111F2044C79F0003C045 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 33CC111A2044C6BA0003C045;
+			remoteInfo = FLX;
+		};
+/* End PBXContainerItemProxy section */
+
+/* Begin PBXCopyFilesBuildPhase section */
+		33CC110E2044A8840003C045 /* Bundle Framework */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 10;
+			files = (
+			);
+			name = "Bundle Framework";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
+/* Begin PBXFileReference section */
+		331C80D5294CF71000263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
+		331C80D7294CF71000263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
+		333000ED22D3DE5D00554162 /* Warnings.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Warnings.xcconfig; sourceTree = "<group>"; };
+		335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = GeneratedPluginRegistrant.swift; sourceTree = "<group>"; };
+		33CC10ED2044A3C60003C045 /* finney.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "finney.app"; sourceTree = BUILT_PRODUCTS_DIR; };
+		33CC10F02044A3C60003C045 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
+		33CC10F22044A3C60003C045 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Assets.xcassets; path = Runner/Assets.xcassets; sourceTree = "<group>"; };
+		33CC10F52044A3C60003C045 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/MainMenu.xib; sourceTree = "<group>"; };
+		33CC10F72044A3C60003C045 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = Info.plist; path = Runner/Info.plist; sourceTree = "<group>"; };
+		33CC11122044BFA00003C045 /* MainFlutterWindow.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MainFlutterWindow.swift; sourceTree = "<group>"; };
+		33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Debug.xcconfig"; sourceTree = "<group>"; };
+		33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Release.xcconfig"; sourceTree = "<group>"; };
+		33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = "Flutter-Generated.xcconfig"; path = "ephemeral/Flutter-Generated.xcconfig"; sourceTree = "<group>"; };
+		33E51913231747F40026EE4D /* DebugProfile.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = DebugProfile.entitlements; sourceTree = "<group>"; };
+		33E51914231749380026EE4D /* Release.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = Release.entitlements; sourceTree = "<group>"; };
+		33E5194F232828860026EE4D /* AppInfo.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = AppInfo.xcconfig; sourceTree = "<group>"; };
+		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Release.xcconfig; sourceTree = "<group>"; };
+		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; path = Debug.xcconfig; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		331C80D2294CF70F00263BE5 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		33CC10EA2044A3C60003C045 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		331C80D6294CF71000263BE5 /* RunnerTests */ = {
+			isa = PBXGroup;
+			children = (
+				331C80D7294CF71000263BE5 /* RunnerTests.swift */,
+			);
+			path = RunnerTests;
+			sourceTree = "<group>";
+		};
+		33BA886A226E78AF003329D5 /* Configs */ = {
+			isa = PBXGroup;
+			children = (
+				33E5194F232828860026EE4D /* AppInfo.xcconfig */,
+				9740EEB21CF90195004384FC /* Debug.xcconfig */,
+				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
+				333000ED22D3DE5D00554162 /* Warnings.xcconfig */,
+			);
+			path = Configs;
+			sourceTree = "<group>";
+		};
+		33CC10E42044A3C60003C045 = {
+			isa = PBXGroup;
+			children = (
+				33FAB671232836740065AC1E /* Runner */,
+				33CEB47122A05771004F2AC0 /* Flutter */,
+				331C80D6294CF71000263BE5 /* RunnerTests */,
+				33CC10EE2044A3C60003C045 /* Products */,
+				D73912EC22F37F3D000D13A0 /* Frameworks */,
+			);
+			sourceTree = "<group>";
+		};
+		33CC10EE2044A3C60003C045 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				33CC10ED2044A3C60003C045 /* finney.app */,
+				331C80D5294CF71000263BE5 /* RunnerTests.xctest */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		33CC11242044D66E0003C045 /* Resources */ = {
+			isa = PBXGroup;
+			children = (
+				33CC10F22044A3C60003C045 /* Assets.xcassets */,
+				33CC10F42044A3C60003C045 /* MainMenu.xib */,
+				33CC10F72044A3C60003C045 /* Info.plist */,
+			);
+			name = Resources;
+			path = ..;
+			sourceTree = "<group>";
+		};
+		33CEB47122A05771004F2AC0 /* Flutter */ = {
+			isa = PBXGroup;
+			children = (
+				335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */,
+				33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */,
+				33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */,
+				33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */,
+			);
+			path = Flutter;
+			sourceTree = "<group>";
+		};
+		33FAB671232836740065AC1E /* Runner */ = {
+			isa = PBXGroup;
+			children = (
+				33CC10F02044A3C60003C045 /* AppDelegate.swift */,
+				33CC11122044BFA00003C045 /* MainFlutterWindow.swift */,
+				33E51913231747F40026EE4D /* DebugProfile.entitlements */,
+				33E51914231749380026EE4D /* Release.entitlements */,
+				33CC11242044D66E0003C045 /* Resources */,
+				33BA886A226E78AF003329D5 /* Configs */,
+			);
+			path = Runner;
+			sourceTree = "<group>";
+		};
+		D73912EC22F37F3D000D13A0 /* Frameworks */ = {
+			isa = PBXGroup;
+			children = (
+			);
+			name = Frameworks;
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXNativeTarget section */
+		331C80D4294CF70F00263BE5 /* RunnerTests */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
+			buildPhases = (
+				331C80D1294CF70F00263BE5 /* Sources */,
+				331C80D2294CF70F00263BE5 /* Frameworks */,
+				331C80D3294CF70F00263BE5 /* Resources */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				331C80DA294CF71000263BE5 /* PBXTargetDependency */,
+			);
+			name = RunnerTests;
+			productName = RunnerTests;
+			productReference = 331C80D5294CF71000263BE5 /* RunnerTests.xctest */;
+			productType = "com.apple.product-type.bundle.unit-test";
+		};
+		33CC10EC2044A3C60003C045 /* Runner */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */;
+			buildPhases = (
+				33CC10E92044A3C60003C045 /* Sources */,
+				33CC10EA2044A3C60003C045 /* Frameworks */,
+				33CC10EB2044A3C60003C045 /* Resources */,
+				33CC110E2044A8840003C045 /* Bundle Framework */,
+				3399D490228B24CF009A79C7 /* ShellScript */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				33CC11202044C79F0003C045 /* PBXTargetDependency */,
+			);
+			name = Runner;
+			productName = Runner;
+			productReference = 33CC10ED2044A3C60003C045 /* finney.app */;
+			productType = "com.apple.product-type.application";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		33CC10E52044A3C60003C045 /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				BuildIndependentTargetsInParallel = YES;
+				LastSwiftUpdateCheck = 0920;
+				LastUpgradeCheck = 1510;
+				ORGANIZATIONNAME = "";
+				TargetAttributes = {
+					331C80D4294CF70F00263BE5 = {
+						CreatedOnToolsVersion = 14.0;
+						TestTargetID = 33CC10EC2044A3C60003C045;
+					};
+					33CC10EC2044A3C60003C045 = {
+						CreatedOnToolsVersion = 9.2;
+						LastSwiftMigration = 1100;
+						ProvisioningStyle = Automatic;
+						SystemCapabilities = {
+							com.apple.Sandbox = {
+								enabled = 1;
+							};
+						};
+					};
+					33CC111A2044C6BA0003C045 = {
+						CreatedOnToolsVersion = 9.2;
+						ProvisioningStyle = Manual;
+					};
+				};
+			};
+			buildConfigurationList = 33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */;
+			compatibilityVersion = "Xcode 9.3";
+			developmentRegion = en;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+				Base,
+			);
+			mainGroup = 33CC10E42044A3C60003C045;
+			productRefGroup = 33CC10EE2044A3C60003C045 /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				33CC10EC2044A3C60003C045 /* Runner */,
+				331C80D4294CF70F00263BE5 /* RunnerTests */,
+				33CC111A2044C6BA0003C045 /* Flutter Assemble */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXResourcesBuildPhase section */
+		331C80D3294CF70F00263BE5 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		33CC10EB2044A3C60003C045 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */,
+				33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXResourcesBuildPhase section */
+
+/* Begin PBXShellScriptBuildPhase section */
+		3399D490228B24CF009A79C7 /* ShellScript */ = {
+			isa = PBXShellScriptBuildPhase;
+			alwaysOutOfDate = 1;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+			);
+			outputFileListPaths = (
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "echo \"$PRODUCT_NAME.app\" > \"$PROJECT_DIR\"/Flutter/ephemeral/.app_filename && \"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh embed\n";
+		};
+		33CC111E2044C6BF0003C045 /* ShellScript */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+				Flutter/ephemeral/FlutterInputs.xcfilelist,
+			);
+			inputPaths = (
+				Flutter/ephemeral/tripwire,
+			);
+			outputFileListPaths = (
+				Flutter/ephemeral/FlutterOutputs.xcfilelist,
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh && touch Flutter/ephemeral/tripwire";
+		};
+/* End PBXShellScriptBuildPhase section */
+
+/* Begin PBXSourcesBuildPhase section */
+		331C80D1294CF70F00263BE5 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+		33CC10E92044A3C60003C045 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */,
+				33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */,
+				335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin PBXTargetDependency section */
+		331C80DA294CF71000263BE5 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 33CC10EC2044A3C60003C045 /* Runner */;
+			targetProxy = 331C80D9294CF71000263BE5 /* PBXContainerItemProxy */;
+		};
+		33CC11202044C79F0003C045 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 33CC111A2044C6BA0003C045 /* Flutter Assemble */;
+			targetProxy = 33CC111F2044C79F0003C045 /* PBXContainerItemProxy */;
+		};
+/* End PBXTargetDependency section */
+
+/* Begin PBXVariantGroup section */
+		33CC10F42044A3C60003C045 /* MainMenu.xib */ = {
+			isa = PBXVariantGroup;
+			children = (
+				33CC10F52044A3C60003C045 /* Base */,
+			);
+			name = MainMenu.xib;
+			path = Runner;
+			sourceTree = "<group>";
+		};
+/* End PBXVariantGroup section */
+
+/* Begin XCBuildConfiguration section */
+		331C80DB294CF71000263BE5 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/finney.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/finney";
+			};
+			name = Debug;
+		};
+		331C80DC294CF71000263BE5 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/finney.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/finney";
+			};
+			name = Release;
+		};
+		331C80DD294CF71000263BE5 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				BUNDLE_LOADER = "$(TEST_HOST)";
+				CURRENT_PROJECT_VERSION = 1;
+				GENERATE_INFOPLIST_FILE = YES;
+				MARKETING_VERSION = 1.0;
+				PRODUCT_BUNDLE_IDENTIFIER = com.example.finney.RunnerTests;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				SWIFT_VERSION = 5.0;
+				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/finney.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/finney";
+			};
+			name = Profile;
+		};
+		338D0CE9231458BD00FA5F75 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CODE_SIGN_IDENTITY = "-";
+				COPY_PHASE_STRIP = NO;
+				DEAD_CODE_STRIPPING = YES;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 10.14;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = macosx;
+				SWIFT_COMPILATION_MODE = wholemodule;
+				SWIFT_OPTIMIZATION_LEVEL = "-O";
+			};
+			name = Profile;
+		};
+		338D0CEA231458BD00FA5F75 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SWIFT_VERSION = 5.0;
+			};
+			name = Profile;
+		};
+		338D0CEB231458BD00FA5F75 /* Profile */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				CODE_SIGN_STYLE = Manual;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+			};
+			name = Profile;
+		};
+		33CC10F92044A3C60003C045 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CODE_SIGN_IDENTITY = "-";
+				COPY_PHASE_STRIP = NO;
+				DEAD_CODE_STRIPPING = YES;
+				DEBUG_INFORMATION_FORMAT = dwarf;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 10.14;
+				MTL_ENABLE_DEBUG_INFO = YES;
+				ONLY_ACTIVE_ARCH = YES;
+				SDKROOT = macosx;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+			};
+			name = Debug;
+		};
+		33CC10FA2044A3C60003C045 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				ASSETCATALOG_COMPILER_GENERATE_SWIFT_ASSET_SYMBOL_EXTENSIONS = YES;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CODE_SIGN_IDENTITY = "-";
+				COPY_PHASE_STRIP = NO;
+				DEAD_CODE_STRIPPING = YES;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_USER_SCRIPT_SANDBOXING = NO;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				MACOSX_DEPLOYMENT_TARGET = 10.14;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				SDKROOT = macosx;
+				SWIFT_COMPILATION_MODE = wholemodule;
+				SWIFT_OPTIMIZATION_LEVEL = "-O";
+			};
+			name = Release;
+		};
+		33CC10FC2044A3C60003C045 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
+			};
+			name = Debug;
+		};
+		33CC10FD2044A3C60003C045 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
+			buildSettings = {
+				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
+				CLANG_ENABLE_MODULES = YES;
+				CODE_SIGN_ENTITLEMENTS = Runner/Release.entitlements;
+				CODE_SIGN_STYLE = Automatic;
+				COMBINE_HIDPI_IMAGES = YES;
+				INFOPLIST_FILE = Runner/Info.plist;
+				LD_RUNPATH_SEARCH_PATHS = (
+					"$(inherited)",
+					"@executable_path/../Frameworks",
+				);
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SWIFT_VERSION = 5.0;
+			};
+			name = Release;
+		};
+		33CC111C2044C6BA0003C045 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				CODE_SIGN_STYLE = Manual;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+			};
+			name = Debug;
+		};
+		33CC111D2044C6BA0003C045 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				CODE_SIGN_STYLE = Automatic;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				331C80DB294CF71000263BE5 /* Debug */,
+				331C80DC294CF71000263BE5 /* Release */,
+				331C80DD294CF71000263BE5 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				33CC10F92044A3C60003C045 /* Debug */,
+				33CC10FA2044A3C60003C045 /* Release */,
+				338D0CE9231458BD00FA5F75 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				33CC10FC2044A3C60003C045 /* Debug */,
+				33CC10FD2044A3C60003C045 /* Release */,
+				338D0CEA231458BD00FA5F75 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				33CC111C2044C6BA0003C045 /* Debug */,
+				33CC111D2044C6BA0003C045 /* Release */,
+				338D0CEB231458BD00FA5F75 /* Profile */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = 33CC10E52044A3C60003C045 /* Project object */;
+}
Index: android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java b/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java
new file mode 100644
--- /dev/null	
+++ b/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java	
@@ -0,0 +1,94 @@
+package io.flutter.plugins;
+
+import androidx.annotation.Keep;
+import androidx.annotation.NonNull;
+import io.flutter.Log;
+
+import io.flutter.embedding.engine.FlutterEngine;
+
+/**
+ * Generated file. Do not edit.
+ * This file is generated by the Flutter tool based on the
+ * plugins that support the Android platform.
+ */
+@Keep
+public final class GeneratedPluginRegistrant {
+  private static final String TAG = "GeneratedPluginRegistrant";
+  public static void registerWith(@NonNull FlutterEngine flutterEngine) {
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin cloud_firestore, io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin firebase_auth, io.flutter.plugins.firebase.auth.FlutterFirebaseAuthPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin firebase_core, io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin flutter_inappwebview_android, com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new com.mastertipsy.flutter_localization.FlutterLocalizationPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin flutter_localization, com.mastertipsy.flutter_localization.FlutterLocalizationPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin flutter_plugin_android_lifecycle, io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new com.tundralabs.fluttertts.FlutterTtsPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin flutter_tts, com.tundralabs.fluttertts.FlutterTtsPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.googlesignin.GoogleSignInPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin google_sign_in_android, io.flutter.plugins.googlesignin.GoogleSignInPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.imagepicker.ImagePickerPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin image_picker_android, io.flutter.plugins.imagepicker.ImagePickerPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.pathprovider.PathProviderPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin path_provider_android, io.flutter.plugins.pathprovider.PathProviderPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin shared_preferences_android, io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new com.csdcorp.speech_to_text.SpeechToTextPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin speech_to_text, com.csdcorp.speech_to_text.SpeechToTextPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new com.tekartik.sqflite.SqflitePlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin sqflite_android, com.tekartik.sqflite.SqflitePlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.urllauncher.UrlLauncherPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin url_launcher_android, io.flutter.plugins.urllauncher.UrlLauncherPlugin", e);
+    }
+    try {
+      flutterEngine.getPlugins().add(new io.flutter.plugins.videoplayer.VideoPlayerPlugin());
+    } catch (Exception e) {
+      Log.e(TAG, "Error registering plugin video_player_android, io.flutter.plugins.videoplayer.VideoPlayerPlugin", e);
+    }
+  }
+}
Index: android/app/src/main/kotlin/com/example/finney_financial_management_app_main/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/src/main/kotlin/com/example/finney_financial_management_app_main/MainActivity.kt b/android/app/src/main/kotlin/com/example/finney_financial_management_app_main/MainActivity.kt
new file mode 100644
--- /dev/null	
+++ b/android/app/src/main/kotlin/com/example/finney_financial_management_app_main/MainActivity.kt	
@@ -0,0 +1,5 @@
+package com.example.finney_financial_management_app_main
+
+import io.flutter.embedding.android.FlutterActivity
+
+class MainActivity : FlutterActivity()
Index: android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
new file mode 100644
--- /dev/null	
+++ b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake	
@@ -0,0 +1,83 @@
+set(CMAKE_CXX_COMPILER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "Clang")
+set(CMAKE_CXX_COMPILER_VERSION "18.0.1")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")
+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
+set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
+
+set(CMAKE_CXX_PLATFORM_ID "Linux")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_CXX_COMPILER_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_CXX_COMPILER_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_LINKER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/ld.lld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCXX )
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+
+foreach (lang C OBJC OBJCXX)
+  if (CMAKE_${lang}_COMPILER_ID_RUN)
+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
+    endforeach()
+  endif()
+endforeach()
+
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "4")
+set(CMAKE_CXX_COMPILER_ABI "ELF")
+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/c++/v1;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/include;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/i686-linux-android;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include")
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++;m;-l:libunwind.a;dl;c;-l:libunwind.a;dl")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/lib/linux/i386;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/i686-linux-android/23;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/i686-linux-android;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
Index: android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
new file mode 100644
--- /dev/null	
+++ b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake	
@@ -0,0 +1,83 @@
+set(CMAKE_CXX_COMPILER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "Clang")
+set(CMAKE_CXX_COMPILER_VERSION "18.0.1")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")
+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
+set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
+
+set(CMAKE_CXX_PLATFORM_ID "Linux")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_CXX_COMPILER_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_CXX_COMPILER_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_LINKER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/ld.lld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCXX )
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+
+foreach (lang C OBJC OBJCXX)
+  if (CMAKE_${lang}_COMPILER_ID_RUN)
+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
+    endforeach()
+  endif()
+endforeach()
+
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
+set(CMAKE_CXX_COMPILER_ABI "ELF")
+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/c++/v1;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/include;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/x86_64-linux-android;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include")
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++;m;-l:libunwind.a;dl;c;-l:libunwind.a;dl")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/lib/linux/x86_64;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/x86_64-linux-android/23;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/x86_64-linux-android;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
Index: android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
new file mode 100644
--- /dev/null	
+++ b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake	
@@ -0,0 +1,83 @@
+set(CMAKE_CXX_COMPILER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "Clang")
+set(CMAKE_CXX_COMPILER_VERSION "18.0.1")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")
+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
+set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
+
+set(CMAKE_CXX_PLATFORM_ID "Linux")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_CXX_COMPILER_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_CXX_COMPILER_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_LINKER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/ld.lld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCXX )
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+
+foreach (lang C OBJC OBJCXX)
+  if (CMAKE_${lang}_COMPILER_ID_RUN)
+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
+    endforeach()
+  endif()
+endforeach()
+
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
+set(CMAKE_CXX_COMPILER_ABI "ELF")
+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/c++/v1;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/include;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/aarch64-linux-android;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include")
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++;m;-l:libunwind.a;dl;c;-l:libunwind.a;dl")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/lib/linux/aarch64;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/aarch64-linux-android/23;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/aarch64-linux-android;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
Index: android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake
new file mode 100644
--- /dev/null	
+++ b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCXXCompiler.cmake	
@@ -0,0 +1,83 @@
+set(CMAKE_CXX_COMPILER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/clang++.exe")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "Clang")
+set(CMAKE_CXX_COMPILER_VERSION "18.0.1")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")
+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
+set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
+
+set(CMAKE_CXX_PLATFORM_ID "Linux")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_CXX_COMPILER_AR "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ar.exe")
+set(CMAKE_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_CXX_COMPILER_RANLIB "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/llvm-ranlib.exe")
+set(CMAKE_LINKER "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/bin/ld.lld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCXX )
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+
+foreach (lang C OBJC OBJCXX)
+  if (CMAKE_${lang}_COMPILER_ID_RUN)
+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
+    endforeach()
+  endif()
+endforeach()
+
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "4")
+set(CMAKE_CXX_COMPILER_ABI "ELF")
+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/c++/v1;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/include;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include/arm-linux-androideabi;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/include")
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++;m;-l:libunwind.a;dl;c;-l:libunwind.a;dl")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/lib/clang/18/lib/linux/arm;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/arm-linux-androideabi/23;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib/arm-linux-androideabi;C:/Users/daher/AppData/Local/Android/Sdk/ndk/27.0.12077973/toolchains/llvm/prebuilt/windows-x86_64/sysroot/usr/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
Index: android/gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/gradlew b/android/gradlew
new file mode 100644
--- /dev/null	
+++ b/android/gradlew	
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: android/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/.gitignore b/android/.gitignore
new file mode 100644
--- /dev/null	
+++ b/android/.gitignore	
@@ -0,0 +1,14 @@
+gradle-wrapper.jar
+/.gradle
+/captures/
+/gradlew
+/gradlew.bat
+/local.properties
+GeneratedPluginRegistrant.java
+.cxx/
+
+# Remember to never publicly share your keystore.
+# See https://flutter.dev/to/reference-keystore
+key.properties
+**/*.keystore
+**/*.jks
Index: android/finney_android.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/finney_android.iml b/android/finney_android.iml
new file mode 100644
--- /dev/null	
+++ b/android/finney_android.iml	
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="GEN_FOLDER_RELATIVE_PATH_APT" value="/gen" />
+        <option name="GEN_FOLDER_RELATIVE_PATH_AIDL" value="/gen" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/app/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/app/src/main/res" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/app/src/main/assets" />
+        <option name="LIBS_FOLDER_RELATIVE_PATH" value="/app/src/main/libs" />
+        <option name="PROGUARD_LOGS_FOLDER_RELATIVE_PATH" value="/app/src/main/proguard_logs" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/app/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/app/src/main/kotlin" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/gen" isTestSource="false" generated="true" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 29 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Flutter for Android" level="project" />
+    <orderEntry type="library" name="KotlinJavaRuntime" level="project" />
+  </component>
+</module>
Index: android/settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/settings.gradle.kts b/android/settings.gradle.kts
new file mode 100644
--- /dev/null	
+++ b/android/settings.gradle.kts	
@@ -0,0 +1,28 @@
+pluginManagement {
+    val flutterSdkPath = run {
+        val properties = java.util.Properties()
+        file("local.properties").inputStream().use { properties.load(it) }
+        val flutterSdkPath = properties.getProperty("flutter.sdk")
+        require(flutterSdkPath != null) { "flutter.sdk not set in local.properties" }
+        flutterSdkPath
+    }
+
+    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")
+
+    repositories {
+        google()
+        mavenCentral()
+        gradlePluginPortal()
+    }
+}
+
+plugins {
+    id("dev.flutter.flutter-plugin-loader") version "1.0.0"
+    id("com.android.application") version "8.7.0" apply false
+    // START: FlutterFire Configuration
+    id("com.google.gms.google-services") version("4.3.15") apply false
+    // END: FlutterFire Configuration
+    id("org.jetbrains.kotlin.android") version "1.8.22" apply false
+}
+
+include(":app")
Index: android/finney_financial_management_app_main_android.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/android/finney_financial_management_app_main_android.iml b/android/finney_financial_management_app_main_android.iml
new file mode 100644
--- /dev/null	
+++ b/android/finney_financial_management_app_main_android.iml	
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="GEN_FOLDER_RELATIVE_PATH_APT" value="/gen" />
+        <option name="GEN_FOLDER_RELATIVE_PATH_AIDL" value="/gen" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/app/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/app/src/main/res" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/app/src/main/assets" />
+        <option name="LIBS_FOLDER_RELATIVE_PATH" value="/app/src/main/libs" />
+        <option name="PROGUARD_LOGS_FOLDER_RELATIVE_PATH" value="/app/src/main/proguard_logs" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/app/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/app/src/main/kotlin" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/gen" isTestSource="false" generated="true" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 29 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Flutter for Android" level="project" />
+    <orderEntry type="library" name="KotlinJavaRuntime" level="project" />
+  </component>
+</module>
Index: windows/runner/main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/runner/main.cpp b/windows/runner/main.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/runner/main.cpp	
@@ -0,0 +1,43 @@
+#include <flutter/dart_project.h>
+#include <flutter/flutter_view_controller.h>
+#include <windows.h>
+
+#include "flutter_window.h"
+#include "utils.h"
+
+int APIENTRY wWinMain(_In_ HINSTANCE instance, _In_opt_ HINSTANCE prev,
+                      _In_ wchar_t *command_line, _In_ int show_command) {
+  // Attach to console when present (e.g., 'flutter run') or create a
+  // new console when running with a debugger.
+  if (!::AttachConsole(ATTACH_PARENT_PROCESS) && ::IsDebuggerPresent()) {
+    CreateAndAttachConsole();
+  }
+
+  // Initialize COM, so that it is available for use in the library and/or
+  // plugins.
+  ::CoInitializeEx(nullptr, COINIT_APARTMENTTHREADED);
+
+  flutter::DartProject project(L"data");
+
+  std::vector<std::string> command_line_arguments =
+      GetCommandLineArguments();
+
+  project.set_dart_entrypoint_arguments(std::move(command_line_arguments));
+
+  FlutterWindow window(project);
+  Win32Window::Point origin(10, 10);
+  Win32Window::Size size(1280, 720);
+  if (!window.Create(L"finney", origin, size)) {
+    return EXIT_FAILURE;
+  }
+  window.SetQuitOnClose(true);
+
+  ::MSG msg;
+  while (::GetMessage(&msg, nullptr, 0, 0)) {
+    ::TranslateMessage(&msg);
+    ::DispatchMessage(&msg);
+  }
+
+  ::CoUninitialize();
+  return EXIT_SUCCESS;
+}
Index: windows/runner/Runner.rc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/runner/Runner.rc b/windows/runner/Runner.rc
new file mode 100644
--- /dev/null	
+++ b/windows/runner/Runner.rc	
@@ -0,0 +1,121 @@
+// Microsoft Visual C++ generated resource script.
+//
+#pragma code_page(65001)
+#include "resource.h"
+
+#define APSTUDIO_READONLY_SYMBOLS
+/////////////////////////////////////////////////////////////////////////////
+//
+// Generated from the TEXTINCLUDE 2 resource.
+//
+#include "winres.h"
+
+/////////////////////////////////////////////////////////////////////////////
+#undef APSTUDIO_READONLY_SYMBOLS
+
+/////////////////////////////////////////////////////////////////////////////
+// English (United States) resources
+
+#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
+LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
+
+#ifdef APSTUDIO_INVOKED
+/////////////////////////////////////////////////////////////////////////////
+//
+// TEXTINCLUDE
+//
+
+1 TEXTINCLUDE
+BEGIN
+    "resource.h\0"
+END
+
+2 TEXTINCLUDE
+BEGIN
+    "#include ""winres.h""\r\n"
+    "\0"
+END
+
+3 TEXTINCLUDE
+BEGIN
+    "\r\n"
+    "\0"
+END
+
+#endif    // APSTUDIO_INVOKED
+
+
+/////////////////////////////////////////////////////////////////////////////
+//
+// Icon
+//
+
+// Icon with lowest ID value placed first to ensure application icon
+// remains consistent on all systems.
+IDI_APP_ICON            ICON                    "resources\\app_icon.ico"
+
+
+/////////////////////////////////////////////////////////////////////////////
+//
+// Version
+//
+
+#if defined(FLUTTER_VERSION_MAJOR) && defined(FLUTTER_VERSION_MINOR) && defined(FLUTTER_VERSION_PATCH) && defined(FLUTTER_VERSION_BUILD)
+#define VERSION_AS_NUMBER FLUTTER_VERSION_MAJOR,FLUTTER_VERSION_MINOR,FLUTTER_VERSION_PATCH,FLUTTER_VERSION_BUILD
+#else
+#define VERSION_AS_NUMBER 1,0,0,0
+#endif
+
+#if defined(FLUTTER_VERSION)
+#define VERSION_AS_STRING FLUTTER_VERSION
+#else
+#define VERSION_AS_STRING "1.0.0"
+#endif
+
+VS_VERSION_INFO VERSIONINFO
+ FILEVERSION VERSION_AS_NUMBER
+ PRODUCTVERSION VERSION_AS_NUMBER
+ FILEFLAGSMASK VS_FFI_FILEFLAGSMASK
+#ifdef _DEBUG
+ FILEFLAGS VS_FF_DEBUG
+#else
+ FILEFLAGS 0x0L
+#endif
+ FILEOS VOS__WINDOWS32
+ FILETYPE VFT_APP
+ FILESUBTYPE 0x0L
+BEGIN
+    BLOCK "StringFileInfo"
+    BEGIN
+        BLOCK "040904e4"
+        BEGIN
+            VALUE "CompanyName", "com.example" "\0"
+            VALUE "FileDescription", "finney" "\0"
+            VALUE "FileVersion", VERSION_AS_STRING "\0"
+            VALUE "InternalName", "finney" "\0"
+            VALUE "LegalCopyright", "Copyright (C) 2025 com.example. All rights reserved." "\0"
+            VALUE "OriginalFilename", "finney.exe" "\0"
+            VALUE "ProductName", "finney" "\0"
+            VALUE "ProductVersion", VERSION_AS_STRING "\0"
+        END
+    END
+    BLOCK "VarFileInfo"
+    BEGIN
+        VALUE "Translation", 0x409, 1252
+    END
+END
+
+#endif    // English (United States) resources
+/////////////////////////////////////////////////////////////////////////////
+
+
+
+#ifndef APSTUDIO_INVOKED
+/////////////////////////////////////////////////////////////////////////////
+//
+// Generated from the TEXTINCLUDE 3 resource.
+//
+
+
+/////////////////////////////////////////////////////////////////////////////
+#endif    // not APSTUDIO_INVOKED
Index: windows/runner/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/runner/CMakeLists.txt b/windows/runner/CMakeLists.txt
new file mode 100644
--- /dev/null	
+++ b/windows/runner/CMakeLists.txt	
@@ -0,0 +1,40 @@
+cmake_minimum_required(VERSION 3.14)
+project(runner LANGUAGES CXX)
+
+# Define the application target. To change its name, change BINARY_NAME in the
+# top-level CMakeLists.txt, not the value here, or `flutter run` will no longer
+# work.
+#
+# Any new source files that you add to the application should be added here.
+add_executable(${BINARY_NAME} WIN32
+  "flutter_window.cpp"
+  "main.cpp"
+  "utils.cpp"
+  "win32_window.cpp"
+  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
+  "Runner.rc"
+  "runner.exe.manifest"
+)
+
+# Apply the standard set of build settings. This can be removed for applications
+# that need different build settings.
+apply_standard_settings(${BINARY_NAME})
+
+# Add preprocessor definitions for the build version.
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION=\"${FLUTTER_VERSION}\"")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MAJOR=${FLUTTER_VERSION_MAJOR}")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MINOR=${FLUTTER_VERSION_MINOR}")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_PATCH=${FLUTTER_VERSION_PATCH}")
+target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_BUILD=${FLUTTER_VERSION_BUILD}")
+
+# Disable Windows macros that collide with C++ standard library functions.
+target_compile_definitions(${BINARY_NAME} PRIVATE "NOMINMAX")
+
+# Add dependency libraries and include directories. Add any application-specific
+# dependencies here.
+target_link_libraries(${BINARY_NAME} PRIVATE flutter flutter_wrapper_app)
+target_link_libraries(${BINARY_NAME} PRIVATE "dwmapi.lib")
+target_include_directories(${BINARY_NAME} PRIVATE "${CMAKE_SOURCE_DIR}")
+
+# Run the Flutter tool portions of the build. This must not be removed.
+add_dependencies(${BINARY_NAME} flutter_assemble)
Index: windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/runner/win32_window.cpp b/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/runner/win32_window.cpp	
@@ -0,0 +1,288 @@
+#include "win32_window.h"
+
+#include <dwmapi.h>
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+/// Window attribute that enables dark mode window decorations.
+///
+/// Redefined in case the developer's machine has a Windows SDK older than
+/// version 10.0.22000.0.
+/// See: https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
+#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
+#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
+#endif
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+/// Registry key for app theme preference.
+///
+/// A value of 0 indicates apps should use dark mode. A non-zero or missing
+/// value indicates apps should use light mode.
+constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
+  L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
+constexpr const wchar_t kGetPreferredBrightnessRegValue[] = L"AppsUseLightTheme";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+  }
+  FreeLibrary(user32_module);
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registrar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() {
+  ++g_active_window_count;
+}
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::Create(const std::wstring& title,
+                         const Point& origin,
+                         const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  UpdateTheme(window);
+
+  return OnCreate();
+}
+
+bool Win32Window::Show() {
+  return ShowWindow(window_handle_, SW_SHOWNORMAL);
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window,
+                                      UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd,
+                            UINT const message,
+                            WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+
+    case WM_DWMCOLORIZATIONCOLORCHANGED:
+      UpdateTheme(hwnd);
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() {
+  return window_handle_;
+}
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
+
+void Win32Window::UpdateTheme(HWND const window) {
+  DWORD light_mode;
+  DWORD light_mode_size = sizeof(light_mode);
+  LSTATUS result = RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
+                               kGetPreferredBrightnessRegValue,
+                               RRF_RT_REG_DWORD, nullptr, &light_mode,
+                               &light_mode_size);
+
+  if (result == ERROR_SUCCESS) {
+    BOOL enable_dark_mode = light_mode == 0;
+    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
+                          &enable_dark_mode, sizeof(enable_dark_mode));
+  }
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,245 @@
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() {
+  ++g_active_window_count;
+}
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title,
+                                const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window,
+                                      UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd,
+                            UINT const message,
+                            WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() {
+  return window_handle_;
+}
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,284 @@
+// Copyright 2023, the Chromium project authors.  Please see the AUTHORS file
+// for details. All rights reserved. Use of this source code is governed by a
+// BSD-style license that can be found in the LICENSE file.
+
+#include "win32_window.h"
+
+#include <dwmapi.h>
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+/// Window attribute that enables dark mode window decorations.
+///
+/// Redefined in case the developer's machine has a Windows SDK older than
+/// version 10.0.22000.0.
+/// See:
+/// https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
+#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
+#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
+#endif
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+/// Registry key for app theme preference.
+///
+/// A value of 0 indicates apps should use dark mode. A non-zero or missing
+/// value indicates apps should use light mode.
+constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
+    L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
+constexpr const wchar_t kGetPreferredBrightnessRegValue[] =
+    L"AppsUseLightTheme";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+  }
+  FreeLibrary(user32_module);
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registrar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::Create(const std::wstring& title, const Point& origin,
+                         const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  UpdateTheme(window);
+
+  return OnCreate();
+}
+
+bool Win32Window::Show() { return ShowWindow(window_handle_, SW_SHOWNORMAL); }
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+
+    case WM_DWMCOLORIZATIONCOLORCHANGED:
+      UpdateTheme(hwnd);
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
+
+void Win32Window::UpdateTheme(HWND const window) {
+  DWORD light_mode;
+  DWORD light_mode_size = sizeof(light_mode);
+  LSTATUS result =
+      RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
+                  kGetPreferredBrightnessRegValue, RRF_RT_REG_DWORD, nullptr,
+                  &light_mode, &light_mode_size);
+
+  if (result == ERROR_SUCCESS) {
+    BOOL enable_dark_mode = light_mode == 0;
+    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
+                          &enable_dark_mode, sizeof(enable_dark_mode));
+  }
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,284 @@
+// Copyright 2023, the Chromium project authors.  Please see the AUTHORS file
+// for details. All rights reserved. Use of this source code is governed by a
+// BSD-style license that can be found in the LICENSE file.
+
+#include "win32_window.h"
+
+#include <dwmapi.h>
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+/// Window attribute that enables dark mode window decorations.
+///
+/// Redefined in case the developer's machine has a Windows SDK older than
+/// version 10.0.22000.0.
+/// See:
+/// https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
+#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
+#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
+#endif
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+/// Registry key for app theme preference.
+///
+/// A value of 0 indicates apps should use dark mode. A non-zero or missing
+/// value indicates apps should use light mode.
+constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
+    L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
+constexpr const wchar_t kGetPreferredBrightnessRegValue[] =
+    L"AppsUseLightTheme";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+  }
+  FreeLibrary(user32_module);
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::Create(const std::wstring& title, const Point& origin,
+                         const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  UpdateTheme(window);
+
+  return OnCreate();
+}
+
+bool Win32Window::Show() { return ShowWindow(window_handle_, SW_SHOWNORMAL); }
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+
+    case WM_DWMCOLORIZATIONCOLORCHANGED:
+      UpdateTheme(hwnd);
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
+
+void Win32Window::UpdateTheme(HWND const window) {
+  DWORD light_mode;
+  DWORD light_mode_size = sizeof(light_mode);
+  LSTATUS result =
+      RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
+                  kGetPreferredBrightnessRegValue, RRF_RT_REG_DWORD, nullptr,
+                  &light_mode, &light_mode_size);
+
+  if (result == ERROR_SUCCESS) {
+    BOOL enable_dark_mode = light_mode == 0;
+    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
+                          &enable_dark_mode, sizeof(enable_dark_mode));
+  }
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,284 @@
+// Copyright 2023, the Chromium project authors.  Please see the AUTHORS file
+// for details. All rights reserved. Use of this source code is governed by a
+// BSD-style license that can be found in the LICENSE file.
+
+#include "win32_window.h"
+
+#include <dwmapi.h>
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+/// Window attribute that enables dark mode window decorations.
+///
+/// Redefined in case the developer's machine has a Windows SDK older than
+/// version 10.0.22000.0.
+/// See:
+/// https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
+#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
+#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
+#endif
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+/// Registry key for app theme preference.
+///
+/// A value of 0 indicates apps should use dark mode. A non-zero or missing
+/// value indicates apps should use light mode.
+constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
+    L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
+constexpr const wchar_t kGetPreferredBrightnessRegValue[] =
+    L"AppsUseLightTheme";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+  }
+  FreeLibrary(user32_module);
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registrar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::Create(const std::wstring& title, const Point& origin,
+                         const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  UpdateTheme(window);
+
+  return OnCreate();
+}
+
+bool Win32Window::Show() { return ShowWindow(window_handle_, SW_SHOWNORMAL); }
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+
+    case WM_DWMCOLORIZATIONCOLORCHANGED:
+      UpdateTheme(hwnd);
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
+
+void Win32Window::UpdateTheme(HWND const window) {
+  DWORD light_mode;
+  DWORD light_mode_size = sizeof(light_mode);
+  LSTATUS result =
+      RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
+                  kGetPreferredBrightnessRegValue, RRF_RT_REG_DWORD, nullptr,
+                  &light_mode, &light_mode_size);
+
+  if (result == ERROR_SUCCESS) {
+    BOOL enable_dark_mode = light_mode == 0;
+    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
+                          &enable_dark_mode, sizeof(enable_dark_mode));
+  }
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,245 @@
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() {
+  ++g_active_window_count;
+}
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title,
+                                const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window,
+                                      UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd,
+                            UINT const message,
+                            WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() {
+  return window_handle_;
+}
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,241 @@
+// Copyright 2013 The Flutter Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title, const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,240 @@
+// Copyright 2013 The Flutter Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title, const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE:
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,240 @@
+// Copyright 2013 The Flutter Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title, const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,240 @@
+// Copyright 2013 The Flutter Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title, const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE:
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,240 @@
+// Copyright 2013 The Flutter Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "win32_window.h"
+
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+    FreeLibrary(user32_module);
+  }
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() { ++g_active_window_count; }
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::CreateAndShow(const std::wstring& title, const Point& origin,
+                                const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW | WS_VISIBLE,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  return OnCreate();
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window, UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd, UINT const message, WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE:
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() { return window_handle_; }
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/win32_window.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/win32_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/win32_window.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/win32_window.cpp	
@@ -0,0 +1,288 @@
+#include "win32_window.h"
+
+#include <dwmapi.h>
+#include <flutter_windows.h>
+
+#include "resource.h"
+
+namespace {
+
+/// Window attribute that enables dark mode window decorations.
+///
+/// Redefined in case the developer's machine has a Windows SDK older than
+/// version 10.0.22000.0.
+/// See: https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
+#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
+#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
+#endif
+
+constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";
+
+/// Registry key for app theme preference.
+///
+/// A value of 0 indicates apps should use dark mode. A non-zero or missing
+/// value indicates apps should use light mode.
+constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
+  L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
+constexpr const wchar_t kGetPreferredBrightnessRegValue[] = L"AppsUseLightTheme";
+
+// The number of Win32Window objects that currently exist.
+static int g_active_window_count = 0;
+
+using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);
+
+// Scale helper to convert logical scaler values to physical using passed in
+// scale factor
+int Scale(int source, double scale_factor) {
+  return static_cast<int>(source * scale_factor);
+}
+
+// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
+// This API is only needed for PerMonitor V1 awareness mode.
+void EnableFullDpiSupportIfAvailable(HWND hwnd) {
+  HMODULE user32_module = LoadLibraryA("User32.dll");
+  if (!user32_module) {
+    return;
+  }
+  auto enable_non_client_dpi_scaling =
+      reinterpret_cast<EnableNonClientDpiScaling*>(
+          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
+  if (enable_non_client_dpi_scaling != nullptr) {
+    enable_non_client_dpi_scaling(hwnd);
+  }
+  FreeLibrary(user32_module);
+}
+
+}  // namespace
+
+// Manages the Win32Window's window class registration.
+class WindowClassRegistrar {
+ public:
+  ~WindowClassRegistrar() = default;
+
+  // Returns the singleton registrar instance.
+  static WindowClassRegistrar* GetInstance() {
+    if (!instance_) {
+      instance_ = new WindowClassRegistrar();
+    }
+    return instance_;
+  }
+
+  // Returns the name of the window class, registering the class if it hasn't
+  // previously been registered.
+  const wchar_t* GetWindowClass();
+
+  // Unregisters the window class. Should only be called if there are no
+  // instances of the window.
+  void UnregisterWindowClass();
+
+ private:
+  WindowClassRegistrar() = default;
+
+  static WindowClassRegistrar* instance_;
+
+  bool class_registered_ = false;
+};
+
+WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;
+
+const wchar_t* WindowClassRegistrar::GetWindowClass() {
+  if (!class_registered_) {
+    WNDCLASS window_class{};
+    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
+    window_class.lpszClassName = kWindowClassName;
+    window_class.style = CS_HREDRAW | CS_VREDRAW;
+    window_class.cbClsExtra = 0;
+    window_class.cbWndExtra = 0;
+    window_class.hInstance = GetModuleHandle(nullptr);
+    window_class.hIcon =
+        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
+    window_class.hbrBackground = 0;
+    window_class.lpszMenuName = nullptr;
+    window_class.lpfnWndProc = Win32Window::WndProc;
+    RegisterClass(&window_class);
+    class_registered_ = true;
+  }
+  return kWindowClassName;
+}
+
+void WindowClassRegistrar::UnregisterWindowClass() {
+  UnregisterClass(kWindowClassName, nullptr);
+  class_registered_ = false;
+}
+
+Win32Window::Win32Window() {
+  ++g_active_window_count;
+}
+
+Win32Window::~Win32Window() {
+  --g_active_window_count;
+  Destroy();
+}
+
+bool Win32Window::Create(const std::wstring& title,
+                         const Point& origin,
+                         const Size& size) {
+  Destroy();
+
+  const wchar_t* window_class =
+      WindowClassRegistrar::GetInstance()->GetWindowClass();
+
+  const POINT target_point = {static_cast<LONG>(origin.x),
+                              static_cast<LONG>(origin.y)};
+  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
+  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
+  double scale_factor = dpi / 96.0;
+
+  HWND window = CreateWindow(
+      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
+      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
+      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
+      nullptr, nullptr, GetModuleHandle(nullptr), this);
+
+  if (!window) {
+    return false;
+  }
+
+  UpdateTheme(window);
+
+  return OnCreate();
+}
+
+bool Win32Window::Show() {
+  return ShowWindow(window_handle_, SW_SHOWNORMAL);
+}
+
+// static
+LRESULT CALLBACK Win32Window::WndProc(HWND const window,
+                                      UINT const message,
+                                      WPARAM const wparam,
+                                      LPARAM const lparam) noexcept {
+  if (message == WM_NCCREATE) {
+    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+    SetWindowLongPtr(window, GWLP_USERDATA,
+                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+
+    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
+    EnableFullDpiSupportIfAvailable(window);
+    that->window_handle_ = window;
+  } else if (Win32Window* that = GetThisFromHandle(window)) {
+    return that->MessageHandler(window, message, wparam, lparam);
+  }
+
+  return DefWindowProc(window, message, wparam, lparam);
+}
+
+LRESULT
+Win32Window::MessageHandler(HWND hwnd,
+                            UINT const message,
+                            WPARAM const wparam,
+                            LPARAM const lparam) noexcept {
+  switch (message) {
+    case WM_DESTROY:
+      window_handle_ = nullptr;
+      Destroy();
+      if (quit_on_close_) {
+        PostQuitMessage(0);
+      }
+      return 0;
+
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT rect = GetClientArea();
+      if (child_content_ != nullptr) {
+        // Size and position the child window.
+        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
+                   rect.bottom - rect.top, TRUE);
+      }
+      return 0;
+    }
+
+    case WM_ACTIVATE:
+      if (child_content_ != nullptr) {
+        SetFocus(child_content_);
+      }
+      return 0;
+
+    case WM_DWMCOLORIZATIONCOLORCHANGED:
+      UpdateTheme(hwnd);
+      return 0;
+  }
+
+  return DefWindowProc(window_handle_, message, wparam, lparam);
+}
+
+void Win32Window::Destroy() {
+  OnDestroy();
+
+  if (window_handle_) {
+    DestroyWindow(window_handle_);
+    window_handle_ = nullptr;
+  }
+  if (g_active_window_count == 0) {
+    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
+  }
+}
+
+Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
+  return reinterpret_cast<Win32Window*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+}
+
+void Win32Window::SetChildContent(HWND content) {
+  child_content_ = content;
+  SetParent(content, window_handle_);
+  RECT frame = GetClientArea();
+
+  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
+             frame.bottom - frame.top, true);
+
+  SetFocus(child_content_);
+}
+
+RECT Win32Window::GetClientArea() {
+  RECT frame;
+  GetClientRect(window_handle_, &frame);
+  return frame;
+}
+
+HWND Win32Window::GetHandle() {
+  return window_handle_;
+}
+
+void Win32Window::SetQuitOnClose(bool quit_on_close) {
+  quit_on_close_ = quit_on_close;
+}
+
+bool Win32Window::OnCreate() {
+  // No-op; provided for subclasses.
+  return true;
+}
+
+void Win32Window::OnDestroy() {
+  // No-op; provided for subclasses.
+}
+
+void Win32Window::UpdateTheme(HWND const window) {
+  DWORD light_mode;
+  DWORD light_mode_size = sizeof(light_mode);
+  LSTATUS result = RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
+                               kGetPreferredBrightnessRegValue,
+                               RRF_RT_REG_DWORD, nullptr, &light_mode,
+                               &light_mode_size);
+
+  if (result == ERROR_SUCCESS) {
+    BOOL enable_dark_mode = light_mode == 0;
+    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
+                          &enable_dark_mode, sizeof(enable_dark_mode));
+  }
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser.cpp	
@@ -0,0 +1,260 @@
+#include <Windows.h>
+
+#include "../utils/log.h"
+#include "../utils/strconv.h"
+#include "../webview_environment/webview_environment_manager.h"
+#include "in_app_browser.h"
+#include "in_app_browser_manager.h"
+
+namespace flutter_inappwebview_plugin
+{
+  InAppBrowser::InAppBrowser(const FlutterInappwebviewWindowsPlugin* plugin, const InAppBrowserCreationParams& params)
+    : plugin(plugin),
+    m_hInstance(GetModuleHandle(nullptr)),
+    id(params.id),
+    settings(params.initialSettings),
+    channelDelegate(std::make_unique<InAppBrowserChannelDelegate>(id, plugin->registrar->messenger()))
+  {
+
+    WNDCLASS wndClass = {};
+    wndClass.lpszClassName = InAppBrowser::CLASS_NAME;
+    wndClass.hInstance = m_hInstance;
+    wndClass.hIcon = LoadIcon(NULL, IDI_WINLOGO);
+    wndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
+    wndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
+    wndClass.lpfnWndProc = InAppBrowser::WndProc;
+
+    RegisterClass(&wndClass);
+
+    auto parentWindow = plugin->registrar->GetView()->GetNativeWindow();
+    RECT bounds;
+    GetWindowRect(parentWindow, &bounds);
+
+    auto x = CW_USEDEFAULT;
+    auto y = CW_USEDEFAULT;
+    auto width = bounds.right - bounds.left;
+    auto height = bounds.bottom - bounds.top;
+
+    if (settings->windowFrame) {
+      x = (int)settings->windowFrame->x;
+      y = (int)settings->windowFrame->y;
+      width = (int)settings->windowFrame->width;
+      height = (int)settings->windowFrame->height;
+    }
+
+    m_hWnd = CreateWindowEx(
+      WS_EX_LAYERED,            // Optional window styles.
+      wndClass.lpszClassName,		// Window class
+
+      settings->toolbarTopFixedTitle.empty() ? L"" : utf8_to_wide(settings->toolbarTopFixedTitle).c_str(),	// Window text
+
+      settings->windowType == InAppBrowserWindowType::window ? WS_OVERLAPPEDWINDOW : (WS_CHILDWINDOW | WS_OVERLAPPEDWINDOW), // Window style
+
+      // Position
+      x, y,
+      // Size
+      width, height,
+
+      settings->windowType == InAppBrowserWindowType::window ? nullptr : parentWindow, // Parent window    
+      nullptr,             // Menu
+      wndClass.hInstance,  // Instance handle
+      this                 // Additional application data
+    );
+
+    SetLayeredWindowAttributes(m_hWnd, 0, (BYTE)(255 * settings->windowAlphaValue), LWA_ALPHA);
+
+    ShowWindow(m_hWnd, settings->hidden ? SW_HIDE : SW_SHOW);
+
+    InAppWebViewCreationParams webViewParams = {
+      id,
+      params.initialWebViewSettings,
+      params.initialUserScripts
+    };
+
+    auto webViewEnvironment = params.webViewEnvironmentId.has_value() && map_contains(plugin->webViewEnvironmentManager->webViewEnvironments, params.webViewEnvironmentId.value())
+      ? plugin->webViewEnvironmentManager->webViewEnvironments.at(params.webViewEnvironmentId.value()).get() : nullptr;
+
+    InAppWebView::createInAppWebViewEnv(m_hWnd, false, webViewEnvironment, params.initialWebViewSettings,
+      [this, params, webViewParams](wil::com_ptr<ICoreWebView2Environment> webViewEnv, wil::com_ptr<ICoreWebView2Controller> webViewController, wil::com_ptr<ICoreWebView2CompositionController> webViewCompositionController) -> void
+      {
+        if (webViewEnv && webViewController) {
+          webView = std::make_unique<InAppWebView>(this, this->plugin, webViewParams, m_hWnd, std::move(webViewEnv), std::move(webViewController), nullptr);
+          webView->initChannel(std::nullopt, InAppBrowser::METHOD_CHANNEL_NAME_PREFIX + id);
+
+          if (channelDelegate) {
+            channelDelegate->onBrowserCreated();
+          }
+
+          if (params.urlRequest.has_value()) {
+            webView->loadUrl(params.urlRequest.value());
+          }
+          else if (params.assetFilePath.has_value()) {
+            webView->loadFile(params.assetFilePath.value());
+          }
+          else if (params.data.has_value()) {
+            webView->loadData(params.data.value());
+          }
+        }
+        else {
+          std::cerr << "Cannot create the InAppWebView instance!" << std::endl;
+          close();
+        }
+      });
+  }
+
+  void InAppBrowser::close() const
+  {
+    DestroyWindow(m_hWnd);
+  }
+
+  void InAppBrowser::show() const
+  {
+    ShowWindow(m_hWnd, SW_SHOW);
+  }
+
+  void InAppBrowser::hide() const
+  {
+    ShowWindow(m_hWnd, SW_HIDE);
+  }
+
+  bool InAppBrowser::isHidden() const
+  {
+    return !IsWindowVisible(m_hWnd);
+  }
+
+  void InAppBrowser::setSettings(const std::shared_ptr<InAppBrowserSettings> newSettings, const flutter::EncodableMap& newSettingsMap)
+  {
+    if (webView) {
+      webView->setSettings(std::make_shared<InAppWebViewSettings>(newSettingsMap), newSettingsMap);
+    }
+
+    if (fl_map_contains_not_null(newSettingsMap, "hidden") && settings->hidden != newSettings->hidden) {
+      newSettings->hidden ? hide() : show();
+    }
+
+    if (fl_map_contains_not_null(newSettingsMap, "toolbarTopFixedTitle") && !string_equals(settings->toolbarTopFixedTitle, newSettings->toolbarTopFixedTitle) && !newSettings->toolbarTopFixedTitle.empty()) {
+      SetWindowText(m_hWnd, utf8_to_wide(newSettings->toolbarTopFixedTitle).c_str());
+    }
+
+    if (fl_map_contains_not_null(newSettingsMap, "windowAlphaValue") && settings->windowAlphaValue != newSettings->windowAlphaValue) {
+      SetLayeredWindowAttributes(m_hWnd, 0, (BYTE)(255 * newSettings->windowAlphaValue), LWA_ALPHA);
+    }
+
+    if (fl_map_contains_not_null(newSettingsMap, "windowFrame")) {
+      auto x = (int)newSettings->windowFrame->x;
+      auto y = (int)newSettings->windowFrame->y;
+      auto width = (int)newSettings->windowFrame->width;
+      auto height = (int)newSettings->windowFrame->height;
+      MoveWindow(m_hWnd, x, y, width, height, true);
+    }
+
+    settings = newSettings;
+  }
+
+  flutter::EncodableValue InAppBrowser::getSettings() const
+  {
+    if (!settings || !webView) {
+      return make_fl_value();
+    }
+
+    auto encodableMap = settings->getRealSettings(this);
+    encodableMap.merge(std::get<flutter::EncodableMap>(webView->getSettings()));
+    return encodableMap;
+  }
+
+  void InAppBrowser::didChangeTitle(const std::optional<std::string>& title) const
+  {
+    if (title.has_value() && settings->toolbarTopFixedTitle.empty()) {
+      SetWindowText(m_hWnd, utf8_to_wide(title.value()).c_str());
+    }
+  }
+
+  LRESULT CALLBACK InAppBrowser::WndProc(
+    HWND window,
+    UINT message,
+    WPARAM wparam,
+    LPARAM lparam
+  ) noexcept
+  {
+    if (message == WM_NCCREATE) {
+      auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
+      SetWindowLongPtr(window, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));
+    }
+    else if (InAppBrowser* that = GetThisFromHandle(window)) {
+      return that->MessageHandler(window, message, wparam, lparam);
+    }
+
+    return DefWindowProc(window, message, wparam, lparam);
+  }
+
+  LRESULT InAppBrowser::MessageHandler(
+    HWND hwnd,
+    UINT message,
+    WPARAM wparam,
+    LPARAM lparam
+  ) noexcept
+  {
+    switch (message) {
+    case WM_DESTROY: {
+      // might receive multiple WM_DESTROY messages.
+      if (!destroyed_) {
+        destroyed_ = true;
+
+        if (channelDelegate) {
+          channelDelegate->onExit();
+        }
+
+        if (channelDelegate) {
+          channelDelegate->UnregisterMethodCallHandler();
+          if (webView && webView->channelDelegate) {
+            webView->channelDelegate->UnregisterMethodCallHandler();
+          }
+        }
+        webView.reset();
+
+        if (plugin && plugin->inAppBrowserManager) {
+          plugin->inAppBrowserManager->browsers.erase(id);
+        }
+      }
+      return 0;
+    }
+    case WM_DPICHANGED: {
+      auto newRectSize = reinterpret_cast<RECT*>(lparam);
+      LONG newWidth = newRectSize->right - newRectSize->left;
+      LONG newHeight = newRectSize->bottom - newRectSize->top;
+
+      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
+        newHeight, SWP_NOZORDER | SWP_NOACTIVATE);
+      return 0;
+    }
+    case WM_SIZE: {
+      RECT bounds;
+      GetClientRect(hwnd, &bounds);
+      if (webView) {
+        webView->webViewController->put_Bounds(bounds);
+      }
+      return 0;
+    }
+    case WM_ACTIVATE: {
+      return 0;
+    }
+    }
+
+    return DefWindowProc(hwnd, message, wparam, lparam);
+  }
+
+  InAppBrowser* InAppBrowser::GetThisFromHandle(HWND const window) noexcept
+  {
+    return reinterpret_cast<InAppBrowser*>(
+      GetWindowLongPtr(window, GWLP_USERDATA));
+  }
+
+  InAppBrowser::~InAppBrowser()
+  {
+    debugLog("dealloc InAppBrowser");
+    webView.reset();
+    SetWindowLongPtr(m_hWnd, GWLP_USERDATA, 0);
+    plugin = nullptr;
+  }
+
+}
\ No newline at end of file
Index: windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview.cpp
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview.cpp	
@@ -0,0 +1,1886 @@
+#include <cstring>
+#include <filesystem>
+#include <nlohmann/json.hpp>
+#include <Shlwapi.h>
+#include <wil/wrl.h>
+
+#include "../custom_platform_view/util/composition.desktop.interop.h"
+#include "../plugin_scripts_js/javascript_bridge_js.h"
+#include "../types/create_window_action.h"
+#include "../types/web_resource_error.h"
+#include "../types/web_resource_request.h"
+#include "../utils/base64.h"
+#include "../utils/log.h"
+#include "../utils/map.h"
+#include "../utils/strconv.h"
+#include "../utils/string.h"
+#include "../webview_environment/webview_environment_manager.h"
+#include "in_app_webview.h"
+#include "in_app_webview_manager.h"
+
+namespace flutter_inappwebview_plugin
+{
+  using namespace Microsoft::WRL;
+
+  InAppWebView::InAppWebView(const FlutterInappwebviewWindowsPlugin* plugin, const InAppWebViewCreationParams& params, const HWND parentWindow, wil::com_ptr<ICoreWebView2Environment> webViewEnv,
+    wil::com_ptr<ICoreWebView2Controller> webViewController,
+    wil::com_ptr<ICoreWebView2CompositionController> webViewCompositionController)
+    : plugin(plugin), id(params.id),
+    webViewEnv(std::move(webViewEnv)), webViewController(std::move(webViewController)), webViewCompositionController(std::move(webViewCompositionController)),
+    settings(params.initialSettings), userContentController(std::make_unique<UserContentController>(this))
+  {
+    if (failedAndLog(this->webViewController->get_CoreWebView2(webView.put()))) {
+      std::cerr << "Cannot create CoreWebView2." << std::endl;
+    }
+
+    if (this->webViewCompositionController) {
+      if (!createSurface(parentWindow, plugin->inAppWebViewManager->compositor())) {
+        std::cerr << "Cannot create InAppWebView surface." << std::endl;
+      }
+      registerSurfaceEventHandlers();
+    }
+    else {
+      this->webViewController->put_IsVisible(true);
+      // Resize WebView to fit the bounds of the parent window
+      RECT bounds;
+      GetClientRect(parentWindow, &bounds);
+      this->webViewController->put_Bounds(bounds);
+    }
+
+    prepare(params);
+  }
+
+  InAppWebView::InAppWebView(InAppBrowser* inAppBrowser, const FlutterInappwebviewWindowsPlugin* plugin, const InAppWebViewCreationParams& params, const HWND parentWindow, wil::com_ptr<ICoreWebView2Environment> webViewEnv,
+    wil::com_ptr<ICoreWebView2Controller> webViewController,
+    wil::com_ptr<ICoreWebView2CompositionController> webViewCompositionController)
+    : InAppWebView(plugin, params, parentWindow, std::move(webViewEnv), std::move(webViewController), std::move(webViewCompositionController))
+  {
+    this->inAppBrowser = inAppBrowser;
+  }
+
+  void InAppWebView::createInAppWebViewEnv(const HWND parentWindow, const bool& willBeSurface, WebViewEnvironment* webViewEnvironment, const std::shared_ptr<InAppWebViewSettings> initialSettings, std::function<void(wil::com_ptr<ICoreWebView2Environment> webViewEnv,
+    wil::com_ptr<ICoreWebView2Controller> webViewController,
+    wil::com_ptr<ICoreWebView2CompositionController> webViewCompositionController)> completionHandler)
+  {
+    auto callback = [parentWindow, willBeSurface, completionHandler, initialSettings](HRESULT result, wil::com_ptr<ICoreWebView2Environment> env) -> HRESULT
+      {
+        if (failedAndLog(result) || !env) {
+          completionHandler(nullptr, nullptr, nullptr);
+          return E_FAIL;
+        }
+
+        wil::com_ptr<ICoreWebView2Environment3> webViewEnv3;
+        wil::com_ptr<ICoreWebView2Environment10> webViewEnv10;
+        wil::com_ptr<ICoreWebView2ControllerOptions> options;
+        if (initialSettings && succeededOrLog(env->QueryInterface(IID_PPV_ARGS(&webViewEnv10))) && succeededOrLog(webViewEnv10->CreateCoreWebView2ControllerOptions(&options))) {
+          options->put_IsInPrivateModeEnabled(initialSettings->incognito);
+        }
+        else {
+          webViewEnv10 = nullptr;
+          options = nullptr;
+          failedLog(env->QueryInterface(IID_PPV_ARGS(&webViewEnv3)));
+        }
+        if (willBeSurface && (webViewEnv10 || webViewEnv3)) {
+          if (webViewEnv10 && options) {
+            failedLog(webViewEnv10->CreateCoreWebView2CompositionControllerWithOptions(parentWindow, options.get(), Callback<ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler>(
+              [completionHandler, env](HRESULT result, wil::com_ptr<ICoreWebView2CompositionController> compositionController) -> HRESULT
+              {
+                wil::com_ptr<ICoreWebView2Controller3> webViewController = compositionController.try_query<ICoreWebView2Controller3>();
+
+                if (failedAndLog(result) || !webViewController) {
+                  completionHandler(nullptr, nullptr, nullptr);
+                  return E_FAIL;
+                }
+
+                ICoreWebView2Controller3* webViewController3;
+                if (succeededOrLog(webViewController->QueryInterface(IID_PPV_ARGS(&webViewController3)))) {
+                  webViewController3->put_BoundsMode(COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS);
+                  webViewController3->put_ShouldDetectMonitorScaleChanges(FALSE);
+                  webViewController3->put_RasterizationScale(1.0);
+                }
+
+                completionHandler(std::move(env), std::move(webViewController), std::move(compositionController));
+                return S_OK;
+              }
+            ).Get()));
+          }
+          else {
+            failedLog(webViewEnv3->CreateCoreWebView2CompositionController(parentWindow, Callback<ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler>(
+              [completionHandler, env](HRESULT result, wil::com_ptr<ICoreWebView2CompositionController> compositionController) -> HRESULT
+              {
+                wil::com_ptr<ICoreWebView2Controller3> webViewController = compositionController.try_query<ICoreWebView2Controller3>();
+
+                if (failedAndLog(result) || !webViewController) {
+                  completionHandler(nullptr, nullptr, nullptr);
+                  return E_FAIL;
+                }
+
+                ICoreWebView2Controller3* webViewController3;
+                if (succeededOrLog(webViewController->QueryInterface(IID_PPV_ARGS(&webViewController3)))) {
+                  webViewController3->put_BoundsMode(COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS);
+                  webViewController3->put_ShouldDetectMonitorScaleChanges(FALSE);
+                  webViewController3->put_RasterizationScale(1.0);
+                }
+
+                completionHandler(std::move(env), std::move(webViewController), std::move(compositionController));
+                return S_OK;
+              }
+            ).Get()));
+          }
+        }
+        else {
+          if (webViewEnv10 && options) {
+            failedLog(webViewEnv10->CreateCoreWebView2ControllerWithOptions(parentWindow, options.get(), Callback<ICoreWebView2CreateCoreWebView2ControllerCompletedHandler>(
+              [completionHandler, env](HRESULT result, wil::com_ptr<ICoreWebView2Controller> controller) -> HRESULT
+              {
+                if (failedAndLog(result) || !controller) {
+                  completionHandler(nullptr, nullptr, nullptr);
+                  return E_FAIL;
+                }
+
+                completionHandler(std::move(env), std::move(controller), nullptr);
+                return S_OK;
+              }).Get()));
+          }
+          else {
+            failedLog(env->CreateCoreWebView2Controller(parentWindow, Callback<ICoreWebView2CreateCoreWebView2ControllerCompletedHandler>(
+              [completionHandler, env](HRESULT result, wil::com_ptr<ICoreWebView2Controller> controller) -> HRESULT
+              {
+                if (failedAndLog(result) || !controller) {
+                  completionHandler(nullptr, nullptr, nullptr);
+                  return E_FAIL;
+                }
+
+                completionHandler(std::move(env), std::move(controller), nullptr);
+                return S_OK;
+              }).Get()));
+          }
+        }
+        return S_OK;
+      };
+
+    HRESULT hr;
+    if (webViewEnvironment && webViewEnvironment->getEnvironment()) {
+      hr = callback(S_OK, webViewEnvironment->getEnvironment());
+    }
+    else {
+      hr = CreateCoreWebView2EnvironmentWithOptions(
+        nullptr, nullptr, nullptr,
+        Callback<ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler>(callback).Get());
+    }
+
+    if (failedAndLog(hr)) {
+      completionHandler(nullptr, nullptr, nullptr);
+    }
+  }
+
+  void InAppWebView::initChannel(const std::optional<std::variant<std::string, int64_t>> viewId, const std::optional<std::string> channelName)
+  {
+    if (viewId.has_value()) {
+      id = viewId.value();
+    }
+    channelDelegate = channelName.has_value() ? std::make_unique<WebViewChannelDelegate>(this, plugin->registrar->messenger(), channelName.value()) :
+      std::make_unique<WebViewChannelDelegate>(this, plugin->registrar->messenger());
+  }
+
+  void InAppWebView::prepare(const InAppWebViewCreationParams& params)
+  {
+    if (!webView) {
+      return;
+    }
+
+    wil::com_ptr<ICoreWebView2Settings> webView2Settings;
+    auto hrWebView2Settings = webView->get_Settings(&webView2Settings);
+    if (succeededOrLog(hrWebView2Settings)) {
+      webView2Settings->put_IsScriptEnabled(settings->javaScriptEnabled);
+      webView2Settings->put_IsZoomControlEnabled(settings->supportZoom);
+      webView2Settings->put_AreDevToolsEnabled(settings->isInspectable);
+      webView2Settings->put_AreDefaultContextMenusEnabled(!settings->disableContextMenu);
+
+      wil::com_ptr<ICoreWebView2Settings2> webView2Settings2;
+      if (succeededOrLog(webView2Settings->QueryInterface(IID_PPV_ARGS(&webView2Settings2)))) {
+        if (!settings->userAgent.empty()) {
+          webView2Settings2->put_UserAgent(utf8_to_wide(settings->userAgent).c_str());
+        }
+      }
+    }
+
+    wil::com_ptr<ICoreWebView2Controller2> webViewController2;
+    if (succeededOrLog(webViewController->QueryInterface(IID_PPV_ARGS(&webViewController2)))) {
+      if (!settings->transparentBackground) {
+        webViewController2->put_DefaultBackgroundColor({ 0, 255, 255, 255 });
+      }
+    }
+
+    // required to make Runtime events work
+    failedLog(webView->CallDevToolsProtocolMethod(L"Runtime.enable", L"{}", Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        failedLog(errorCode);
+        return S_OK;
+      }
+    ).Get()));
+
+    // required to make Page events work and to add User Scripts
+    failedLog(webView->CallDevToolsProtocolMethod(L"Page.enable", L"{}", Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        failedLog(errorCode);
+        return S_OK;
+      }
+    ).Get()));
+
+    // required to use Network domain
+    failedLog(webView->CallDevToolsProtocolMethod(L"Network.enable", L"{}", Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        failedLog(errorCode);
+        return S_OK;
+      }
+    ).Get()));
+
+    // required to use Fetch domain and implement the shouldOverrideUrlLoading event correctly
+    failedLog(webView->CallDevToolsProtocolMethod(L"Fetch.enable", L"{\"patterns\": [{\"resourceType\": \"Document\", \"requestStage\": \"Request\"}]}", Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        failedLog(errorCode);
+        return S_OK;
+      }
+    ).Get()));
+
+    failedLog(webView->CallDevToolsProtocolMethod(L"Page.getFrameTree", L"{}", Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        if (succeededOrLog(errorCode)) {
+          auto treeJson = nlohmann::json::parse(wide_to_utf8(returnObjectAsJson));
+          pageFrameId_ = treeJson["frameTree"]["frame"]["id"].get<std::string>();
+        }
+        return S_OK;
+      }
+    ).Get()));
+
+    if (userContentController) {
+      userContentController->addPluginScript(std::move(createJavaScriptBridgePluginScript()));
+      if (params.initialUserScripts.has_value()) {
+        userContentController->addUserOnlyScripts(params.initialUserScripts.value());
+      }
+    }
+
+    registerEventHandlers();
+  }
+
+  void InAppWebView::registerEventHandlers()
+  {
+    if (!webView) {
+      return;
+    }
+
+    wil::com_ptr<ICoreWebView2DevToolsProtocolEventReceiver> fetchRequestPausedEventReceiver;
+
+    if (succeededOrLog(webView->GetDevToolsProtocolEventReceiver(L"Fetch.requestPaused", &fetchRequestPausedEventReceiver))) {
+      failedAndLog(fetchRequestPausedEventReceiver->add_DevToolsProtocolEventReceived(
+        Callback<ICoreWebView2DevToolsProtocolEventReceivedEventHandler>(
+          [this](
+            ICoreWebView2* sender,
+            ICoreWebView2DevToolsProtocolEventReceivedEventArgs* args) -> HRESULT
+          {
+            wil::unique_cotaskmem_string json;
+            if (succeededOrLog(args->get_ParameterObjectAsJson(&json))) {
+              auto requestPausedData = nlohmann::json::parse(wide_to_utf8(json.get()));
+
+              auto requestId = requestPausedData.at("requestId").get<std::string>();
+              auto resourceType = requestPausedData.at("resourceType").get<std::string>();
+              auto isResponseStage = requestPausedData.contains("responseStatusCode");
+              auto frameId = requestPausedData.at("frameId").get<std::string>();
+
+              auto request = requestPausedData.at("request").get<nlohmann::json>();
+              std::optional<std::string> url = request.at("url").is_string() ? request.at("url").get<std::string>() : std::optional<std::string>{};
+              std::optional<std::string> urlFragment = request.contains("urlFragment") && request.at("urlFragment").is_string() ? request.at("urlFragment").get<std::string>() : std::optional<std::string>{};
+              if (url.has_value() && urlFragment.has_value()) {
+                url = url.value() + urlFragment.value();
+              }
+              auto isForMainFrame = pageFrameId_.empty() || string_equals(pageFrameId_, frameId);
+
+              auto allowRequest = [this, requestId, url, isForMainFrame]()
+                {
+                  failedAndLog(webView->CallDevToolsProtocolMethod(L"Fetch.continueRequest",
+                    utf8_to_wide("{\"requestId\":\"" + requestId + "\"}").c_str(),
+                    Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+                      [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+                      {
+                        failedLog(errorCode);
+                        return S_OK;
+                      }
+                    ).Get()));
+
+                  if (channelDelegate && isForMainFrame) {
+                    // if shouldOverrideUrlLoading is used, then call onLoadStart and onProgressChanged here
+                    // to match the behaviour of the other platforms
+                    channelDelegate->onLoadStart(url);
+                    channelDelegate->onProgressChanged(0);
+                  }
+                };
+
+              auto cancelRequest = [this, requestId]()
+                {
+                  failedAndLog(webView->CallDevToolsProtocolMethod(L"Fetch.failRequest",
+                    utf8_to_wide("{\"requestId\":\"" + requestId + "\", \"errorReason\": \"Aborted\"}").c_str(),
+                    Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+                      [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+                      {
+                        failedLog(errorCode);
+                        return S_OK;
+                      }
+                    ).Get()));
+                };
+
+              if (!isResponseStage && channelDelegate && settings->useShouldOverrideUrlLoading && string_equals(resourceType, "Document")) {
+                std::optional<std::string> method = request.at("method").is_string() ? request.at("method").get<std::string>() : std::optional<std::string>{};
+                std::optional<std::map<std::string, std::string>> headers = request.at("headers").is_object() ? request.at("headers").get<std::map<std::string, std::string>>() : std::optional<std::map<std::string, std::string>>{};
+                std::optional<std::string> redirectedRequestId = request.contains("redirectedRequestId") && request.at("redirectedRequestId").is_string() ? request.at("redirectedRequestId").get<std::string>() : std::optional<std::string>{};
+
+                std::optional<std::vector<uint8_t>> body = std::optional<std::vector<uint8_t>>{};
+                auto hasPostData = request.contains("hasPostData") && request.at("hasPostData").is_boolean() && request.at("hasPostData").get<bool>()
+                  && request.contains("postDataEntries") && request.at("postDataEntries").is_array();
+                if (hasPostData) {
+                  auto postDataEntries = request.at("postDataEntries").get<std::vector<nlohmann::json>>();
+
+                  if (postDataEntries.size() > 0) {
+                    body = std::vector<uint8_t>{};
+                    for (auto const& entry : postDataEntries) {
+                      if (entry.contains("bytes")) {
+                        try {
+                          auto entryData = base64_decode(entry.at("bytes").get<std::string>());
+                          std::vector<uint8_t> bytes(entryData.begin(), entryData.end());
+                          body->insert(body->end(), bytes.begin(), bytes.end());
+                        }
+                        catch (const std::exception& err) {
+                          debugLog("Error decoding base64 data");
+                          debugLog(err.what());
+                          body = std::optional<std::vector<uint8_t>>{};
+                          break;
+                        }
+                      }
+                    }
+                  }
+                }
+
+                BOOL isRedirect = redirectedRequestId.has_value() && !redirectedRequestId.value().empty();
+
+                std::optional<NavigationActionType> navigationType = isRedirect ? NavigationActionType::other : std::optional<NavigationActionType>{};
+
+                auto urlRequest = std::make_shared<URLRequest>(url, method, headers, body);
+                auto navigationAction = std::make_shared<NavigationAction>(
+                  urlRequest,
+                  isForMainFrame,
+                  isRedirect,
+                  navigationType
+                );
+
+                auto callback = std::make_unique<WebViewChannelDelegate::ShouldOverrideUrlLoadingCallback>();
+                callback->nonNullSuccess = [this, allowRequest, cancelRequest](const NavigationActionPolicy actionPolicy)
+                  {
+                    if (actionPolicy == NavigationActionPolicy::allow) {
+                      allowRequest();
+                    }
+                    else {
+                      cancelRequest();
+                    }
+                    return false;
+                  };
+                auto defaultBehaviour = [this, allowRequest](const std::optional<const NavigationActionPolicy> actionPolicy)
+                  {
+                    allowRequest();
+                  };
+                callback->defaultBehaviour = defaultBehaviour;
+                callback->error = [defaultBehaviour](const std::string& error_code, const std::string& error_message, const flutter::EncodableValue* error_details)
+                  {
+                    debugLog(error_code + ", " + error_message);
+                    defaultBehaviour(std::nullopt);
+                  };
+                channelDelegate->shouldOverrideUrlLoading(std::move(navigationAction), std::move(callback));
+              }
+              else {
+                // check if a custom event listener is found and give back the opportunity to it to handle the request
+                // through the Chrome Dev Protocol API
+                if (!map_contains(devToolsProtocolEventListener_, std::string("Fetch.requestPaused"))) {
+                  // if a custom event listener is not found, continue the request
+                  allowRequest();
+                }
+              }
+            }
+
+            return S_OK;
+          })
+        .Get(), nullptr));
+    }
+
+    failedLog(webView->add_NavigationStarting(
+      Callback<ICoreWebView2NavigationStartingEventHandler>(
+        [this](ICoreWebView2* sender, ICoreWebView2NavigationStartingEventArgs* args)
+        {
+          isLoading_ = true;
+
+          if (!channelDelegate) {
+            args->put_Cancel(false);
+            return S_OK;
+          }
+
+          wil::unique_cotaskmem_string uri = nullptr;
+          std::optional<std::string> url = SUCCEEDED(args->get_Uri(&uri)) ? wide_to_utf8(uri.get()) : std::optional<std::string>{};
+
+          wil::unique_cotaskmem_string requestMethod = nullptr;
+          wil::com_ptr<ICoreWebView2HttpRequestHeaders> requestHeaders = nullptr;
+          std::optional<std::map<std::string, std::string>> headers = std::optional<std::map<std::string, std::string>>{};
+          if (SUCCEEDED(args->get_RequestHeaders(&requestHeaders))) {
+            headers = std::make_optional<std::map<std::string, std::string>>({});
+            wil::com_ptr<ICoreWebView2HttpHeadersCollectionIterator> iterator;
+            requestHeaders->GetIterator(&iterator);
+            BOOL hasCurrent = FALSE;
+            while (SUCCEEDED(iterator->get_HasCurrentHeader(&hasCurrent)) && hasCurrent) {
+              wil::unique_cotaskmem_string name;
+              wil::unique_cotaskmem_string value;
+
+              if (SUCCEEDED(iterator->GetCurrentHeader(&name, &value))) {
+                headers->insert({ wide_to_utf8(name.get()), wide_to_utf8(value.get()) });
+              }
+
+              BOOL hasNext = FALSE;
+              iterator->MoveNext(&hasNext);
+            }
+
+            requestHeaders->GetHeader(L"Flutter-InAppWebView-Request-Method", &requestMethod);
+            requestHeaders->RemoveHeader(L"Flutter-InAppWebView-Request-Method");
+          }
+
+          std::optional<std::string> method = requestMethod ? wide_to_utf8(requestMethod.get()) : std::optional<std::string>{};
+
+          BOOL isUserInitiated;
+          if (FAILED(args->get_IsUserInitiated(&isUserInitiated))) {
+            isUserInitiated = FALSE;
+          }
+
+          BOOL isRedirect;
+          if (FAILED(args->get_IsRedirected(&isRedirect))) {
+            isRedirect = FALSE;
+          }
+
+          std::optional<NavigationActionType> navigationType = std::nullopt;
+          wil::com_ptr<ICoreWebView2NavigationStartingEventArgs3> args3;
+          if (SUCCEEDED(args->QueryInterface(IID_PPV_ARGS(&args3)))) {
+            COREWEBVIEW2_NAVIGATION_KIND navigationKind;
+            if (SUCCEEDED(args3->get_NavigationKind(&navigationKind))) {
+              switch (navigationKind) {
+              case COREWEBVIEW2_NAVIGATION_KIND_RELOAD:
+                navigationType = NavigationActionType::reload;
+                break;
+              case COREWEBVIEW2_NAVIGATION_KIND_BACK_OR_FORWARD:
+                navigationType = NavigationActionType::backForward;
+                break;
+              case COREWEBVIEW2_NAVIGATION_KIND_NEW_DOCUMENT:
+                if (isUserInitiated && !isRedirect) {
+                  navigationType = NavigationActionType::linkActivated;
+                }
+                else {
+                  navigationType = NavigationActionType::other;
+                }
+                break;
+              default:
+                navigationType = NavigationActionType::other;
+              }
+            }
+          }
+
+          auto urlRequest = std::make_shared<URLRequest>(url, method, headers, std::nullopt);
+          auto navigationAction = std::make_shared<NavigationAction>(
+            urlRequest,
+            true,
+            isRedirect,
+            navigationType
+          );
+
+          lastNavigationAction_ = navigationAction;
+
+          UINT64 navigationId;
+          if (SUCCEEDED(args->get_NavigationId(&navigationId))) {
+            navigationActions_.insert({ navigationId, navigationAction });
+          }
+
+          // if shouldOverrideUrlLoading is not used, then call onLoadStart and onProgressChanged here
+          if (!settings->useShouldOverrideUrlLoading) {
+            channelDelegate->onLoadStart(url);
+            channelDelegate->onProgressChanged(0);
+          }
+          args->put_Cancel(false);
+
+          return S_OK;
+        }
+      ).Get(), nullptr));
+
+    failedLog(webView->add_ContentLoading(
+      Callback<ICoreWebView2ContentLoadingEventHandler>(
+        [this](ICoreWebView2* sender, ICoreWebView2ContentLoadingEventArgs* args)
+        {
+          if (channelDelegate) {
+            channelDelegate->onProgressChanged(33);
+          }
+          return S_OK;
+        }
+      ).Get(), nullptr));
+
+    failedLog(webView->add_NavigationCompleted(
+      Callback<ICoreWebView2NavigationCompletedEventHandler>(
+        [this](ICoreWebView2* sender, ICoreWebView2NavigationCompletedEventArgs* args)
+        {
+          isLoading_ = false;
+
+          evaluateJavascript(PLATFORM_READY_JS_SOURCE, ContentWorld::page(), nullptr);
+
+          std::shared_ptr<NavigationAction> navigationAction;
+          UINT64 navigationId;
+          if (SUCCEEDED(args->get_NavigationId(&navigationId))) {
+            navigationAction = map_at_or_null(navigationActions_, navigationId);
+            if (navigationAction) {
+              navigationActions_.erase(navigationId);
+            }
+          }
+
+          COREWEBVIEW2_WEB_ERROR_STATUS webErrorType = COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN;
+          args->get_WebErrorStatus(&webErrorType);
+
+          BOOL isSuccess;
+          args->get_IsSuccess(&isSuccess);
+
+          if (channelDelegate) {
+            wil::unique_cotaskmem_string uri;
+            std::optional<std::string> url = SUCCEEDED(webView->get_Source(&uri)) ? wide_to_utf8(uri.get()) : std::optional<std::string>{};
+
+            channelDelegate->onProgressChanged(100);
+            if (isSuccess) {
+              channelDelegate->onLoadStop(url);
+            }
+            else if (!InAppWebView::isSslError(webErrorType) && navigationAction) {
+              auto webResourceRequest = std::make_unique<WebResourceRequest>(url, navigationAction->request->method, navigationAction->request->headers, navigationAction->isForMainFrame);
+              int httpStatusCode = 0;
+              wil::com_ptr<ICoreWebView2NavigationCompletedEventArgs2> args2;
+              if (SUCCEEDED(args->QueryInterface(IID_PPV_ARGS(&args2))) && SUCCEEDED(args2->get_HttpStatusCode(&httpStatusCode)) && httpStatusCode >= 400) {
+                auto webResourceResponse = std::make_unique<WebResourceResponse>(std::optional<std::string>{},
+                  std::optional<std::string>{},
+                  httpStatusCode,
+                  std::optional<std::string>{},
+                  std::optional<std::map<std::string, std::string>>{},
+                  std::optional<std::vector<uint8_t>>{});
+                channelDelegate->onReceivedHttpError(std::move(webResourceRequest), std::move(webResourceResponse));
+              }
+              else if (httpStatusCode < 400) {
+                auto webResourceError = std::make_unique<WebResourceError>(WebErrorStatusDescription[webErrorType], webErrorType);
+                channelDelegate->onReceivedError(std::move(webResourceRequest), std::move(webResourceError));
+              }
+            }
+          }
+
+          return S_OK;
+        }
+      ).Get(), nullptr));
+
+    failedLog(webView->add_DocumentTitleChanged(Callback<ICoreWebView2DocumentTitleChangedEventHandler>(
+      [this](ICoreWebView2* sender, IUnknown* args)
+      {
+        if (channelDelegate) {
+          wil::unique_cotaskmem_string title;
+          sender->get_DocumentTitle(&title);
+          channelDelegate->onTitleChanged(title.is_valid() ? wide_to_utf8(title.get()) : std::optional<std::string>{});
+        }
+        return S_OK;
+      }
+    ).Get(), nullptr));
+
+    failedLog(webView->add_HistoryChanged(Callback<ICoreWebView2HistoryChangedEventHandler>(
+      [this](ICoreWebView2* sender, IUnknown* args)
+      {
+        if (channelDelegate) {
+          std::optional<bool> isReload = std::nullopt;
+          if (lastNavigationAction_ && lastNavigationAction_->navigationType.has_value()) {
+            isReload = lastNavigationAction_->navigationType.value() == NavigationActionType::reload;
+          }
+          channelDelegate->onUpdateVisitedHistory(getUrl(), isReload);
+        }
+        return S_OK;
+      }
+    ).Get(), nullptr));
+
+    failedLog(webView->add_WebMessageReceived(Callback<ICoreWebView2WebMessageReceivedEventHandler>(
+      [this](ICoreWebView2* sender, ICoreWebView2WebMessageReceivedEventArgs* args)
+      {
+        if (!channelDelegate) {
+          return S_OK;
+        }
+
+        wil::unique_cotaskmem_string json;
+        if (succeededOrLog(args->get_WebMessageAsJson(&json))) {
+          auto message = nlohmann::json::parse(wide_to_utf8(json.get()));
+
+          if (message.is_object() && message.contains("name") && message.at("name").is_string() && message.contains("body") && message.at("body").is_object()) {
+            auto name = message.at("name").get<std::string>();
+            auto body = message.at("body").get<nlohmann::json>();
+
+            if (name.compare("callHandler") == 0 && body.contains("handlerName") && body.at("handlerName").is_string()) {
+              auto handlerName = body.at("handlerName").get<std::string>();
+              auto callHandlerID = body.at("_callHandlerID").is_number_integer() ? body.at("_callHandlerID").get<int64_t>() : 0;
+              std::string handlerArgs = body.at("args").is_string() ? body.at("args").get<std::string>() : "";
+
+              auto callback = std::make_unique<WebViewChannelDelegate::CallJsHandlerCallback>();
+              callback->defaultBehaviour = [this, callHandlerID](const std::optional<const flutter::EncodableValue*> response)
+                {
+                  std::string json = "null";
+                  if (response.has_value() && !response.value()->IsNull()) {
+                    json = std::get<std::string>(*(response.value()));
+                  }
+
+                  evaluateJavascript("if (window." + JAVASCRIPT_BRIDGE_NAME + "[" + std::to_string(callHandlerID) + "] != null) { \
+                      window." + JAVASCRIPT_BRIDGE_NAME + "[" + std::to_string(callHandlerID) + "].resolve(" + json + "); \
+                      delete window." + JAVASCRIPT_BRIDGE_NAME + "[" + std::to_string(callHandlerID) + "]; \
+                    }", ContentWorld::page(), nullptr);
+                };
+              callback->error = [this, callHandlerID](const std::string& error_code, const std::string& error_message, const flutter::EncodableValue* error_details)
+                {
+                  auto errorMessage = error_code + ", " + error_message;
+                  debugLog(errorMessage);
+
+                  evaluateJavascript("if (window." + JAVASCRIPT_BRIDGE_NAME + "[" + std::to_string(callHandlerID) + "] != null) { \
+                      window." + JAVASCRIPT_BRIDGE_NAME + "[" + std::to_string(callHandlerID) + "].reject(new Error('" + replace_all_copy(errorMessage, "\'", "\\'") + "')); \
+                      delete window." + JAVASCRIPT_BRIDGE_NAME + "[" + std::to_string(callHandlerID) + "]; \
+                    }", ContentWorld::page(), nullptr);
+                };
+              channelDelegate->onCallJsHandler(handlerName, handlerArgs, std::move(callback));
+            }
+          }
+        }
+
+        return S_OK;
+      }
+    ).Get(), nullptr));
+
+    wil::com_ptr<ICoreWebView2DevToolsProtocolEventReceiver> consoleMessageReceiver;
+    if (succeededOrLog(webView->GetDevToolsProtocolEventReceiver(L"Runtime.consoleAPICalled", &consoleMessageReceiver))) {
+      failedLog(consoleMessageReceiver->add_DevToolsProtocolEventReceived(
+        Callback<ICoreWebView2DevToolsProtocolEventReceivedEventHandler>(
+          [this](
+            ICoreWebView2* sender,
+            ICoreWebView2DevToolsProtocolEventReceivedEventArgs* args) -> HRESULT
+          {
+
+            if (!channelDelegate) {
+              return S_OK;
+            }
+
+            wil::unique_cotaskmem_string json;
+            if (succeededOrLog(args->get_ParameterObjectAsJson(&json))) {
+              auto consoleMessageJson = nlohmann::json::parse(wide_to_utf8(json.get()));
+
+              auto level = consoleMessageJson.at("type").get<std::string>();
+              int64_t messageLevel = 1;
+              if (string_equals(level, "log")) {
+                messageLevel = 1;
+              }
+              else if (string_equals(level, "debug")) {
+                messageLevel = 0;
+              }
+              else if (string_equals(level, "error")) {
+                messageLevel = 3;
+              }
+              else if (string_equals(level, "info")) {
+                messageLevel = 1;
+              }
+              else if (string_equals(level, "warn")) {
+                messageLevel = 2;
+              }
+
+              auto consoleArgs = consoleMessageJson.at("args").get<std::vector<nlohmann::json>>();
+              auto message = join(functional_map(consoleArgs, [](const nlohmann::json& json) { return json.contains("value") ? json.at("value").dump() : (json.contains("description") ? json.at("description").dump() : json.dump()); }), std::string{ " " });
+              channelDelegate->onConsoleMessage(message, messageLevel);
+            }
+
+            return S_OK;
+          })
+        .Get(), nullptr));
+    }
+
+    failedLog(webView->add_NewWindowRequested(
+      Callback<ICoreWebView2NewWindowRequestedEventHandler>(
+        [this](ICoreWebView2* sender, ICoreWebView2NewWindowRequestedEventArgs* args)
+        {
+          wil::com_ptr<ICoreWebView2Deferral> deferral;
+          if (channelDelegate && plugin && plugin->inAppWebViewManager && succeededOrLog(args->GetDeferral(&deferral))) {
+            plugin->inAppWebViewManager->windowAutoincrementId++;
+            int64_t windowId = plugin->inAppWebViewManager->windowAutoincrementId;
+            auto newWindowRequestedArgs = std::make_unique<NewWindowRequestedArgs>(args, deferral);
+            plugin->inAppWebViewManager->windowWebViews.insert({ windowId, std::move(newWindowRequestedArgs) });
+
+            wil::unique_cotaskmem_string uri = nullptr;
+            std::optional<std::string> url = SUCCEEDED(args->get_Uri(&uri)) ? wide_to_utf8(uri.get()) : std::optional<std::string>{};
+
+            BOOL hasGesture;
+            if (FAILED(args->get_IsUserInitiated(&hasGesture))) {
+              hasGesture = FALSE;
+            }
+
+            wil::com_ptr<ICoreWebView2WindowFeatures> webviewWindowFeatures;
+            std::optional<std::unique_ptr<WindowFeatures>> windowFeatures;
+            if (SUCCEEDED(args->get_WindowFeatures(&webviewWindowFeatures))) {
+              windowFeatures = std::make_unique<WindowFeatures>(webviewWindowFeatures);
+            }
+
+            auto urlRequest = std::make_shared<URLRequest>(url, "GET", std::nullopt, std::nullopt);
+            auto createWindowAction = std::make_shared<CreateWindowAction>(
+              urlRequest,
+              windowId,
+              true,
+              hasGesture,
+              std::move(windowFeatures));
+
+            auto callback = std::make_unique<WebViewChannelDelegate::CreateWindowCallback>();
+            auto defaultBehaviour = [this, windowId, urlRequest, deferral, args](const std::optional<const bool> handledByClient)
+              {
+                if (plugin && plugin->inAppWebViewManager && map_contains(plugin->inAppWebViewManager->windowWebViews, windowId)) {
+                  plugin->inAppWebViewManager->windowWebViews.erase(windowId);
+                }
+                loadUrl(urlRequest);
+                failedLog(args->put_Handled(TRUE));
+                failedLog(deferral->Complete());
+              };
+            callback->nonNullSuccess = [this, deferral, args](const bool handledByClient)
+              {
+                return !handledByClient;
+              };
+            callback->defaultBehaviour = defaultBehaviour;
+            callback->error = [this, defaultBehaviour](const std::string& error_code, const std::string& error_message, const flutter::EncodableValue* error_details)
+              {
+                debugLog(error_code + ", " + error_message);
+                defaultBehaviour(std::nullopt);
+              };
+            channelDelegate->onCreateWindow(std::move(createWindowAction), std::move(callback));
+          }
+          return S_OK;
+        }
+      ).Get(), nullptr));
+
+    failedLog(webView->add_WindowCloseRequested(Callback<ICoreWebView2WindowCloseRequestedEventHandler>(
+      [this](ICoreWebView2* sender, IUnknown* args)
+      {
+        if (channelDelegate) {
+          channelDelegate->onCloseWindow();
+        }
+        return S_OK;
+      }
+    ).Get(), nullptr));
+
+    failedLog(webView->add_PermissionRequested(Callback<ICoreWebView2PermissionRequestedEventHandler>(
+      [this](ICoreWebView2* sender, ICoreWebView2PermissionRequestedEventArgs* args)
+      {
+        wil::com_ptr<ICoreWebView2Deferral> deferral;
+        if (channelDelegate && succeededOrLog(args->GetDeferral(&deferral))) {
+          wil::unique_cotaskmem_string uri;
+          std::string url = SUCCEEDED(args->get_Uri(&uri)) ? wide_to_utf8(uri.get()) : "";
+
+          COREWEBVIEW2_PERMISSION_KIND resource = COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION;
+          failedAndLog(args->get_PermissionKind(&resource));
+
+          auto callback = std::make_unique<WebViewChannelDelegate::PermissionRequestCallback>();
+          auto defaultBehaviour = [this, deferral, args](const std::optional<const std::shared_ptr<PermissionResponse>> permissionResponse)
+            {
+              failedLog(args->put_State(COREWEBVIEW2_PERMISSION_STATE_DENY));
+              failedLog(deferral->Complete());
+            };
+          callback->nonNullSuccess = [this, deferral, args](const std::shared_ptr<PermissionResponse> permissionResponse)
+            {
+              auto action = permissionResponse->action;
+              if (action.has_value()) {
+                switch (action.value()) {
+                case PermissionResponseActionType::grant:
+                  failedLog(args->put_State(COREWEBVIEW2_PERMISSION_STATE_ALLOW));
+                  break;
+                case PermissionResponseActionType::prompt:
+                  failedLog(args->put_State(COREWEBVIEW2_PERMISSION_STATE_DEFAULT));
+                  break;
+                default:
+                  failedLog(args->put_State(COREWEBVIEW2_PERMISSION_STATE_DENY));
+                  break;
+                }
+                failedLog(deferral->Complete());
+                return false;
+              }
+              return true;
+            };
+          callback->defaultBehaviour = defaultBehaviour;
+          callback->error = [this, defaultBehaviour](const std::string& error_code, const std::string& error_message, const flutter::EncodableValue* error_details)
+            {
+              debugLog(error_code + ", " + error_message);
+              defaultBehaviour(std::nullopt);
+            };
+          channelDelegate->onPermissionRequest(url, { resource }, std::move(callback));
+        }
+        return S_OK;
+      }
+    ).Get(), nullptr));
+
+    failedLog(webView->AddWebResourceRequestedFilter(L"*", COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL));
+    failedLog(webView->add_WebResourceRequested(
+      Callback<ICoreWebView2WebResourceRequestedEventHandler>(
+        [this](
+          ICoreWebView2* sender, ICoreWebView2WebResourceRequestedEventArgs* args)
+        {
+          wil::com_ptr<ICoreWebView2Deferral> deferral;
+          wil::com_ptr<ICoreWebView2WebResourceRequest> webResourceRequest;
+          if (channelDelegate && succeededOrLog(args->get_Request(&webResourceRequest)) && succeededOrLog(args->GetDeferral(&deferral))) {
+            auto request = std::make_shared<WebResourceRequest>(webResourceRequest);
+
+            // The add_WebResourceRequested event is by default raised for file, http, and https URI schemes.
+            // This is also raised for registered custom URI schemes.
+            // https://learn.microsoft.com/en-us/microsoft-edge/webview2/reference/win32/icorewebview2?view=webview2-1.0.2792.45#add_webresourcerequested
+            auto url = request->url.has_value() ? request->url.value() : "";
+            auto isCustomScheme = !url.empty() && !starts_with(url, std::string{ "file://" }) && !starts_with(url, std::string{ "http://" }) && !starts_with(url, std::string{ "https://" });
+
+            auto onLoadResourceWithCustomSchemeCallback = [this, deferral, request, args]()
+              {
+                if (channelDelegate) {
+                  auto callback = std::make_unique<WebViewChannelDelegate::LoadResourceWithCustomSchemeCallback>();
+                  auto defaultBehaviour = [this, deferral, args](const std::optional<std::shared_ptr<CustomSchemeResponse>> response)
+                    {
+                      failedLog(deferral->Complete());
+                    };
+                  callback->nonNullSuccess = [this, deferral, args](const std::shared_ptr<CustomSchemeResponse> response)
+                    {
+                      args->put_Response(response->toWebView2Response(webViewEnv));
+                      failedLog(deferral->Complete());
+                      return false;
+                    };
+                  callback->defaultBehaviour = defaultBehaviour;
+                  callback->error = [this, defaultBehaviour](const std::string& error_code, const std::string& error_message, const flutter::EncodableValue* error_details)
+                    {
+                      debugLog(error_code + ", " + error_message);
+                      defaultBehaviour(std::nullopt);
+                    };
+                  channelDelegate->onLoadResourceWithCustomScheme(request, std::move(callback));
+                }
+                else {
+                  failedLog(deferral->Complete());
+                }
+              };
+
+            if (settings->useShouldInterceptRequest) {
+              auto callback = std::make_unique<WebViewChannelDelegate::ShouldInterceptRequestCallback>();
+              auto defaultBehaviour = [this, deferral, args](const std::optional<std::shared_ptr<WebResourceResponse>> response)
+                {
+                  failedLog(deferral->Complete());
+                };
+              callback->nonNullSuccess = [this, deferral, args](const std::shared_ptr<WebResourceResponse> response)
+                {
+                  args->put_Response(response->toWebView2Response(webViewEnv));
+                  failedLog(deferral->Complete());
+                  return false;
+                };
+              callback->nullSuccess = [this, deferral, args, isCustomScheme, onLoadResourceWithCustomSchemeCallback]()
+                {
+                  if (isCustomScheme) {
+                    onLoadResourceWithCustomSchemeCallback();
+                  }
+                  else {
+                    failedLog(deferral->Complete());
+                  }
+                  return false;
+                };
+              callback->defaultBehaviour = defaultBehaviour;
+              callback->error = [this, defaultBehaviour](const std::string& error_code, const std::string& error_message, const flutter::EncodableValue* error_details)
+                {
+                  debugLog(error_code + ", " + error_message);
+                  defaultBehaviour(std::nullopt);
+                };
+              channelDelegate->shouldInterceptRequest(request, std::move(callback));
+            }
+            else if (isCustomScheme) {
+              onLoadResourceWithCustomSchemeCallback();
+            }
+            else {
+              failedLog(deferral->Complete());
+            }
+          }
+          return S_OK;
+        }
+      ).Get(), nullptr));
+
+    wil::com_ptr<ICoreWebView2_2> webView2;
+    if (SUCCEEDED(webView->QueryInterface(IID_PPV_ARGS(&webView2)))) {
+      failedLog(webView2->add_DOMContentLoaded(
+        Callback<ICoreWebView2DOMContentLoadedEventHandler>(
+          [this](ICoreWebView2* sender, ICoreWebView2DOMContentLoadedEventArgs* args)
+          {
+            if (channelDelegate) {
+              channelDelegate->onProgressChanged(66);
+            }
+            return S_OK;
+          }
+        ).Get(), nullptr));
+    }
+
+    /*
+    wil::com_ptr<ICoreWebView2_14> webView14;
+    if (SUCCEEDED(webView->QueryInterface(IID_PPV_ARGS(&webView14)))) {
+      failedLog(webView14->add_ServerCertificateErrorDetected(
+        Callback<ICoreWebView2ServerCertificateErrorDetectedEventHandler>(
+          [this](ICoreWebView2* sender, ICoreWebView2ServerCertificateErrorDetectedEventArgs* args)
+          {
+            debugLog("add_ServerCertificateErrorDetected");
+            wil::com_ptr<ICoreWebView2Certificate> certificate = nullptr;
+            if (SUCCEEDED(args->get_ServerCertificate(&certificate))) {
+              wil::unique_cotaskmem_string displayName = nullptr;
+              std::optional<std::string> url = SUCCEEDED(certificate->get_DisplayName(&displayName)) ? wide_to_utf8(displayName.get()) : std::optional<std::string>{};
+              debugLog(displayName.get());
+            }
+            return S_OK;
+          }
+        ).Get(), nullptr));
+    }*/
+
+    if (userContentController) {
+      userContentController->registerEventHandlers();
+    }
+  }
+
+  void InAppWebView::registerSurfaceEventHandlers()
+  {
+    if (!webViewCompositionController) {
+      return;
+    }
+
+    failedLog(webViewCompositionController->add_CursorChanged(
+      Callback<ICoreWebView2CursorChangedEventHandler>(
+        [this](ICoreWebView2CompositionController* sender,
+          IUnknown* args) -> HRESULT
+        {
+          HCURSOR cursor;
+          if (cursorChangedCallback_ &&
+            sender->get_Cursor(&cursor) == S_OK) {
+            cursorChangedCallback_(cursor);
+          }
+          return S_OK;
+        })
+      .Get(), nullptr));
+  }
+
+  std::optional<std::string> InAppWebView::getUrl() const
+  {
+    wil::unique_cotaskmem_string uri;
+    return webView && succeededOrLog(webView->get_Source(&uri)) ? wide_to_utf8(uri.get()) : std::optional<std::string>{};
+  }
+
+  std::optional<std::string> InAppWebView::getTitle() const
+  {
+    wil::unique_cotaskmem_string title;
+    return webView && succeededOrLog(webView->get_DocumentTitle(&title)) ? wide_to_utf8(title.get()) : std::optional<std::string>{};
+  }
+
+  void InAppWebView::loadUrl(const std::shared_ptr<URLRequest> urlRequest) const
+  {
+    if (!webView || !urlRequest->url.has_value()) {
+      return;
+    }
+
+    std::wstring url = utf8_to_wide(urlRequest->url.value());
+
+    wil::com_ptr<ICoreWebView2Environment2> webViewEnv2;
+    wil::com_ptr<ICoreWebView2_2> webView2;
+    if (SUCCEEDED(webViewEnv->QueryInterface(IID_PPV_ARGS(&webViewEnv2))) && SUCCEEDED(webView->QueryInterface(IID_PPV_ARGS(&webView2)))) {
+      wil::com_ptr<ICoreWebView2WebResourceRequest> webResourceRequest;
+      std::wstring method = urlRequest->method.has_value() ? utf8_to_wide(urlRequest->method.value()) : L"GET";
+
+      wil::com_ptr<IStream> postDataStream = nullptr;
+      if (urlRequest->body.has_value()) {
+        auto postData = std::string(urlRequest->body->begin(), urlRequest->body->end());
+        postDataStream = SHCreateMemStream(
+          reinterpret_cast<const BYTE*>(postData.data()), static_cast<UINT>(postData.length()));
+      }
+      if (succeededOrLog(webViewEnv2->CreateWebResourceRequest(
+        url.c_str(),
+        method.c_str(),
+        postDataStream.get(),
+        L"",
+        &webResourceRequest
+      ))) {
+        wil::com_ptr<ICoreWebView2HttpRequestHeaders> requestHeaders;
+        if (SUCCEEDED(webResourceRequest->get_Headers(&requestHeaders))) {
+          if (method.compare(L"GET") != 0) {
+            requestHeaders->SetHeader(L"Flutter-InAppWebView-Request-Method", method.c_str());
+          }
+          if (urlRequest->headers.has_value()) {
+            auto& headers = urlRequest->headers.value();
+            for (auto const& [key, val] : headers) {
+              requestHeaders->SetHeader(utf8_to_wide(key).c_str(), utf8_to_wide(val).c_str());
+            }
+          }
+        }
+        failedLog(webView2->NavigateWithWebResourceRequest(webResourceRequest.get()));
+      }
+      return;
+    }
+    failedLog(webView->Navigate(url.c_str()));
+  }
+
+
+  void InAppWebView::loadFile(const std::string& assetFilePath) const
+  {
+    if (!webView) {
+      return;
+    }
+
+    WCHAR* buf = new WCHAR[32768];
+    GetModuleFileName(NULL, buf, 32768);
+    std::filesystem::path exeAbsPath = std::wstring(buf);
+    delete[] buf;
+
+    std::filesystem::path flutterAssetPath("data/flutter_assets/" + assetFilePath);
+    auto absAssetFilePath = exeAbsPath.parent_path() / flutterAssetPath;
+
+    if (!std::filesystem::exists(absAssetFilePath)) {
+      debugLog(absAssetFilePath.native() + L" asset file cannot be found!");
+      return;
+    }
+    failedLog(webView->Navigate(absAssetFilePath.c_str()));
+  }
+
+  void InAppWebView::loadData(const std::string& data) const
+  {
+    if (!webView) {
+      return;
+    }
+
+    failedLog(webView->NavigateToString(utf8_to_wide(data).c_str()));
+  }
+
+  void InAppWebView::reload() const
+  {
+    if (!webView) {
+      return;
+    }
+
+    failedLog(webView->Reload());
+  }
+
+  void InAppWebView::goBack()
+  {
+    if (!webView) {
+      return;
+    }
+
+    failedLog(webView->GoBack());
+  }
+
+  bool InAppWebView::canGoBack() const
+  {
+    BOOL canGoBack_;
+    return webView && succeededOrLog(webView->get_CanGoBack(&canGoBack_)) ? canGoBack_ : false;
+  }
+
+  void InAppWebView::goForward()
+  {
+    if (!webView) {
+      return;
+    }
+
+    failedLog(webView->GoForward());
+  }
+
+  bool InAppWebView::canGoForward() const
+  {
+    BOOL canGoForward_;
+    return webView && succeededOrLog(webView->get_CanGoForward(&canGoForward_)) ? canGoForward_ : false;
+  }
+
+  void InAppWebView::goBackOrForward(const int64_t& steps)
+  {
+    getCopyBackForwardList(
+      [this, steps](std::unique_ptr<WebHistory> webHistory)
+      {
+        if (webHistory && webHistory->currentIndex.has_value() && webHistory->list.has_value()) {
+          auto currentIndex = webHistory->currentIndex.value();
+          auto items = &webHistory->list.value();
+          auto nextIndex = currentIndex + steps;
+          int64_t size = items->size();
+          if (nextIndex >= 0 && nextIndex < size) {
+            auto entryId = items->at(nextIndex)->entryId;
+            if (entryId.has_value()) {
+              failedAndLog(webView->CallDevToolsProtocolMethod(L"Page.navigateToHistoryEntry", utf8_to_wide("{\"entryId\": " + std::to_string(entryId.value()) + "}").c_str(), Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+                [this](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+                {
+                  failedLog(errorCode);
+                  return S_OK;
+                }
+              ).Get()));
+            }
+          }
+        }
+      }
+    );
+  }
+
+  void InAppWebView::canGoBackOrForward(const int64_t& steps, std::function<void(bool)> completionHandler) const
+  {
+    getCopyBackForwardList(
+      [steps, completionHandler](std::unique_ptr<WebHistory> webHistory)
+      {
+        auto canGoBackOrForward_ = false;
+        if (webHistory && webHistory->currentIndex.has_value() && webHistory->list.has_value()) {
+          auto currentIndex = webHistory->currentIndex.value();
+          auto items = &webHistory->list.value();
+          auto nextIndex = currentIndex + steps;
+          int64_t size = items->size();
+          canGoBackOrForward_ = nextIndex >= 0 && nextIndex < size;
+        }
+
+        if (completionHandler) {
+          completionHandler(canGoBackOrForward_);
+        }
+      }
+    );
+  }
+
+  void InAppWebView::stopLoading() const
+  {
+    if (!webView) {
+      return;
+    }
+
+    failedLog(webView->Stop());
+  }
+
+  void InAppWebView::getCopyBackForwardList(const std::function<void(std::unique_ptr<WebHistory>)> completionHandler) const
+  {
+    if (!webView) {
+      if (completionHandler) {
+        completionHandler(std::make_unique<WebHistory>(std::nullopt, std::nullopt));
+      }
+      return;
+    }
+
+    failedLog(webView->CallDevToolsProtocolMethod(L"Page.getNavigationHistory", L"{}", Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [completionHandler](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        if (!completionHandler) {
+          return S_OK;
+        }
+
+        if (errorCode == S_OK) {
+          auto historyJson = nlohmann::json::parse(wide_to_utf8(returnObjectAsJson));
+
+          int64_t currentIndex = historyJson.at("currentIndex").is_number_unsigned() ? historyJson.at("currentIndex").get<int64_t>() : 0;
+          std::vector<nlohmann::json> entries = historyJson.at("entries").is_array() ? historyJson.at("entries").get<std::vector<nlohmann::json>>() : std::vector<nlohmann::json>{};
+
+          std::vector<std::shared_ptr<WebHistoryItem>> webHistoryItems;
+          webHistoryItems.reserve(entries.size());
+          int64_t i = 0;
+          for (auto const& entry : entries) {
+            int64_t offset = i - currentIndex;
+            webHistoryItems.push_back(std::make_shared<WebHistoryItem>(
+              entry.at("id").is_number_integer() ? entry.at("id").get<int64_t>() : std::optional<int64_t>{},
+              i,
+              offset,
+              entry.at("userTypedURL").is_string() ? entry.at("userTypedURL").get<std::string>() : std::optional<std::string>{},
+              entry.at("title").is_string() ? entry.at("title").get<std::string>() : std::optional<std::string>{},
+              entry.at("url").is_string() ? entry.at("url").get<std::string>() : std::optional<std::string>{}
+            ));
+            i++;
+          }
+
+          completionHandler(std::make_unique<WebHistory>(currentIndex, webHistoryItems));
+        }
+        else {
+          debugLog(errorCode);
+          completionHandler(std::make_unique<WebHistory>(std::nullopt, std::nullopt));
+        }
+
+        return S_OK;
+      }
+    ).Get()));
+  }
+
+  void InAppWebView::evaluateJavascript(const std::string& source, const std::shared_ptr<ContentWorld> contentWorld, const std::function<void(std::string)> completionHandler) const
+  {
+    if (!webView || !userContentController) {
+      if (completionHandler) {
+        completionHandler("null");
+      }
+      return;
+    }
+
+    userContentController->createContentWorld(contentWorld,
+      [=](const int& contextId)
+      {
+        nlohmann::json parameters = {
+          {"expression", source},
+          { "returnByValue", true }
+        };
+
+        if (contextId >= 0) {
+          parameters["contextId"] = contextId;
+        }
+
+        auto hr = webView->CallDevToolsProtocolMethod(L"Runtime.evaluate", utf8_to_wide(parameters.dump()).c_str(), Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+          [this, completionHandler](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+          {
+            nlohmann::json result;
+            if (succeededOrLog(errorCode)) {
+              nlohmann::json json = nlohmann::json::parse(wide_to_utf8(returnObjectAsJson));
+              result = json["result"].contains("value") ? json["result"]["value"] : nlohmann::json{};
+              if (json.contains("exceptionDetails")) {
+                nlohmann::json exceptionDetails = json["exceptionDetails"];
+                auto errorMessage = exceptionDetails.contains("exception") && exceptionDetails["exception"].contains("value")
+                  ? exceptionDetails["exception"]["value"].dump() :
+                  (result["value"].is_null() ? exceptionDetails["text"].get<std::string>() : result["value"].dump());
+                result = nlohmann::json{};
+                debugLog(exceptionDetails.dump());
+                if (channelDelegate) {
+                  channelDelegate->onConsoleMessage(errorMessage, 3);
+                }
+              }
+            }
+            if (completionHandler) {
+              completionHandler(result.dump());
+            }
+            return S_OK;
+          }
+        ).Get());
+
+        if (failedAndLog(hr) && completionHandler) {
+          completionHandler("null");
+        }
+      });
+  }
+
+  void InAppWebView::callAsyncJavaScript(const std::string& functionBody, const std::string& argumentsAsJson, const std::shared_ptr<ContentWorld> contentWorld, const std::function<void(std::string)> completionHandler) const
+  {
+    if (!webView || !userContentController) {
+      if (completionHandler) {
+        completionHandler("null");
+      }
+      return;
+    }
+
+    userContentController->createContentWorld(contentWorld,
+      [=](const int& contextId)
+      {
+        std::vector<std::string> functionArgumentNamesList;
+        std::vector<std::string> functionArgumentValuesList;
+
+        auto jsonVal = nlohmann::json::parse(argumentsAsJson);
+        for (auto const& [key, val] : jsonVal.items()) {
+          functionArgumentNamesList.push_back(key);
+          functionArgumentValuesList.push_back(val.dump());
+        }
+
+        auto source = replace_all_copy(CALL_ASYNC_JAVASCRIPT_WRAPPER_JS, VAR_FUNCTION_ARGUMENT_NAMES, join(functionArgumentNamesList, ", "));
+        replace_all(source, VAR_FUNCTION_ARGUMENT_VALUES, join(functionArgumentValuesList, ", "));
+        replace_all(source, VAR_FUNCTION_BODY, functionBody);
+
+        nlohmann::json parameters = {
+          {"expression", source},
+          {"awaitPromise", true},
+          { "returnByValue", true }
+        };
+
+        if (contextId >= 0) {
+          parameters["contextId"] = contextId;
+        }
+
+        auto hr = webView->CallDevToolsProtocolMethod(L"Runtime.evaluate", utf8_to_wide(parameters.dump()).c_str(), Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+          [this, completionHandler](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+          {
+            nlohmann::json result = {
+              {"value", nlohmann::json{}},
+              {"error", nlohmann::json{}}
+            };
+            if (succeededOrLog(errorCode)) {
+              nlohmann::json json = nlohmann::json::parse(wide_to_utf8(returnObjectAsJson));
+              result["value"] = json["result"].contains("value") ? json["result"]["value"] : nlohmann::json{};
+              if (json.contains("exceptionDetails")) {
+                nlohmann::json exceptionDetails = json["exceptionDetails"];
+                auto errorMessage = exceptionDetails.contains("exception") && exceptionDetails["exception"].contains("value")
+                  ? exceptionDetails["exception"]["value"].dump() :
+                  (result["value"].is_null() ? exceptionDetails["text"].get<std::string>() : result["value"].dump());
+                result["value"] = nlohmann::json{};
+                result["error"] = errorMessage;
+                debugLog(exceptionDetails.dump());
+                if (channelDelegate) {
+                  channelDelegate->onConsoleMessage(errorMessage, 3);
+                }
+              }
+            }
+            if (completionHandler) {
+              completionHandler(result.dump());
+            }
+            return S_OK;
+          }
+        ).Get());
+
+        if (failedAndLog(hr) && completionHandler) {
+          completionHandler("null");
+        }
+      });
+  }
+
+  void InAppWebView::addUserScript(const std::shared_ptr<UserScript> userScript) const
+  {
+    if (!userContentController) {
+      return;
+    }
+
+    userContentController->addUserOnlyScript(userScript);
+  }
+
+  void InAppWebView::removeUserScript(const int64_t index, const std::shared_ptr<UserScript> userScript) const
+  {
+    if (!userContentController) {
+      return;
+    }
+
+    userContentController->removeUserOnlyScriptAt(index, userScript->injectionTime);
+  }
+
+  void InAppWebView::removeUserScriptsByGroupName(const std::string& groupName) const
+  {
+    if (!userContentController) {
+      return;
+    }
+
+    userContentController->removeUserOnlyScriptsByGroupName(groupName);
+  }
+
+  void InAppWebView::removeAllUserScripts() const
+  {
+    if (!userContentController) {
+      return;
+    }
+
+    userContentController->removeAllUserOnlyScripts();
+  }
+
+  void InAppWebView::takeScreenshot(const std::optional<std::shared_ptr<ScreenshotConfiguration>> screenshotConfiguration, const std::function<void(const std::optional<std::string>)> completionHandler) const
+  {
+    if (!webView) {
+      if (completionHandler) {
+        completionHandler(std::nullopt);
+      }
+      return;
+    }
+
+    nlohmann::json parameters = {};
+    if (screenshotConfiguration.has_value()) {
+      auto& scp = screenshotConfiguration.value();
+      parameters["format"] = to_lowercase_copy(CompressFormatToString(scp->compressFormat));
+      if (scp->compressFormat == CompressFormat::jpeg) {
+        parameters["quality"] = scp->quality;
+      }
+      if (scp->rect.has_value()) {
+        auto& rect = scp->rect.value();
+        parameters["clip"] = {
+          {"x", rect->x},
+          {"y", rect->y},
+          {"width", rect->width},
+          {"height", rect->height},
+          {"scale", scaleFactor_}
+        };
+      }
+    }
+
+    auto hr = webView->CallDevToolsProtocolMethod(L"Page.captureScreenshot", utf8_to_wide(parameters.dump()).c_str(), Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [this, completionHandler](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        std::optional<std::string> result = std::nullopt;
+        if (succeededOrLog(errorCode)) {
+          nlohmann::json json = nlohmann::json::parse(wide_to_utf8(returnObjectAsJson));
+          result = json["data"].get<std::string>();
+        }
+        if (completionHandler) {
+          completionHandler(result);
+        }
+        return S_OK;
+      }
+    ).Get());
+    if (failedAndLog(hr) && completionHandler) {
+      completionHandler(std::nullopt);
+    }
+  }
+
+  void InAppWebView::setSettings(const std::shared_ptr<InAppWebViewSettings> newSettings, const flutter::EncodableMap& newSettingsMap)
+  {
+    wil::com_ptr<ICoreWebView2Settings> webView2Settings;
+    if (succeededOrLog(webView->get_Settings(&webView2Settings))) {
+      if (fl_map_contains_not_null(newSettingsMap, "javaScriptEnabled") && settings->javaScriptEnabled != newSettings->javaScriptEnabled) {
+        webView2Settings->put_IsScriptEnabled(newSettings->javaScriptEnabled);
+      }
+
+      if (fl_map_contains_not_null(newSettingsMap, "supportZoom") && settings->supportZoom != newSettings->supportZoom) {
+        webView2Settings->put_IsZoomControlEnabled(newSettings->supportZoom);
+      }
+
+      if (fl_map_contains_not_null(newSettingsMap, "isInspectable") && settings->isInspectable != newSettings->isInspectable) {
+        webView2Settings->put_AreDevToolsEnabled(newSettings->isInspectable);
+      }
+
+      if (fl_map_contains_not_null(newSettingsMap, "disableContextMenu") && settings->disableContextMenu != newSettings->disableContextMenu) {
+        webView2Settings->put_AreDefaultContextMenusEnabled(!newSettings->disableContextMenu);
+      }
+
+      wil::com_ptr<ICoreWebView2Settings2> webView2Settings2;
+      if (succeededOrLog(webView2Settings->QueryInterface(IID_PPV_ARGS(&webView2Settings2)))) {
+        if (fl_map_contains_not_null(newSettingsMap, "userAgent") && !string_equals(settings->userAgent, newSettings->userAgent)) {
+          webView2Settings2->put_UserAgent(utf8_to_wide(newSettings->userAgent).c_str());
+        }
+      }
+    }
+
+    wil::com_ptr<ICoreWebView2Controller2> webViewController2;
+    if (succeededOrLog(webViewController->QueryInterface(IID_PPV_ARGS(&webViewController2)))) {
+      if (fl_map_contains_not_null(newSettingsMap, "transparentBackground") && settings->transparentBackground != newSettings->transparentBackground) {
+        BYTE alpha = newSettings->transparentBackground ? 0 : 255;
+        webViewController2->put_DefaultBackgroundColor({ alpha, 255, 255, 255 });
+      }
+    }
+
+    settings = newSettings;
+  }
+
+  flutter::EncodableValue InAppWebView::getSettings() const
+  {
+    if (!settings || !webView) {
+      return make_fl_value();
+    }
+
+    return settings->getRealSettings(this);
+  }
+
+  void InAppWebView::openDevTools() const
+  {
+    if (!webView) {
+      return;
+    }
+
+    failedLog(webView->OpenDevToolsWindow());
+  }
+
+  void InAppWebView::callDevToolsProtocolMethod(const std::string& methodName, const std::optional<std::string>& parametersAsJson, const std::function<void(const HRESULT& errorCode, const std::optional<std::string>&)> completionHandler) const
+  {
+    if (!webView) {
+      if (completionHandler) {
+        completionHandler(S_OK, std::nullopt);
+      }
+      return;
+    }
+
+    auto hr = webView->CallDevToolsProtocolMethod(
+      utf8_to_wide(methodName).c_str(),
+      !parametersAsJson.has_value() || parametersAsJson.value().empty() ? L"{}" : utf8_to_wide(parametersAsJson.value()).c_str(),
+      Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+        [completionHandler](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+        {
+          failedLog(errorCode);
+          if (completionHandler) {
+            completionHandler(errorCode, wide_to_utf8(returnObjectAsJson));
+          }
+          return S_OK;
+        }
+      ).Get());
+
+    if (failedAndLog(hr) && completionHandler) {
+      completionHandler(hr, std::nullopt);
+    }
+  }
+
+  void InAppWebView::addDevToolsProtocolEventListener(const std::string& eventName)
+  {
+    if (map_contains(devToolsProtocolEventListener_, eventName)) {
+      return;
+    }
+
+    wil::com_ptr<ICoreWebView2DevToolsProtocolEventReceiver> eventReceiver;
+    if (succeededOrLog(webView->GetDevToolsProtocolEventReceiver(utf8_to_wide(eventName).c_str(), &eventReceiver))) {
+      EventRegistrationToken token = {};
+      auto hr = eventReceiver->add_DevToolsProtocolEventReceived(
+        Callback<ICoreWebView2DevToolsProtocolEventReceivedEventHandler>(
+          [this, eventName](
+            ICoreWebView2* sender,
+            ICoreWebView2DevToolsProtocolEventReceivedEventArgs* args) -> HRESULT
+          {
+            if (!channelDelegate) {
+              return S_OK;
+            }
+
+            wil::unique_cotaskmem_string json;
+            failedLog(args->get_ParameterObjectAsJson(&json));
+            channelDelegate->onDevToolsProtocolEventReceived(eventName, wide_to_utf8(json.get()));
+
+            return S_OK;
+          })
+        .Get(), &token);
+      if (succeededOrLog(hr)) {
+        devToolsProtocolEventListener_.insert({ eventName, std::make_pair(std::move(eventReceiver), token) });
+      }
+    }
+  }
+
+  void InAppWebView::removeDevToolsProtocolEventListener(const std::string& eventName)
+  {
+    if (map_contains(devToolsProtocolEventListener_, eventName)) {
+      auto eventReceiver = devToolsProtocolEventListener_.at(eventName).first;
+      auto token = devToolsProtocolEventListener_.at(eventName).second;
+      eventReceiver->remove_DevToolsProtocolEventReceived(token);
+      devToolsProtocolEventListener_.erase(eventName);
+    }
+  }
+
+
+  void InAppWebView::pause() const
+  {
+    wil::com_ptr<ICoreWebView2_3> webView3;
+    if (SUCCEEDED(webView->QueryInterface(IID_PPV_ARGS(&webView3))) && succeededOrLog(webViewController->put_IsVisible(false))) {
+      failedLog(webView3->TrySuspend(Callback<ICoreWebView2TrySuspendCompletedHandler>(
+        [this](HRESULT errorCode, BOOL isSuccessful) -> HRESULT
+        {
+          failedLog(errorCode);
+          return S_OK;
+        })
+        .Get()));
+    }
+  }
+
+  void InAppWebView::resume() const
+  {
+    wil::com_ptr<ICoreWebView2_3> webView3;
+    if (SUCCEEDED(webView->QueryInterface(IID_PPV_ARGS(&webView3))) && succeededOrLog(webViewController->put_IsVisible(true))) {
+      failedLog(webView3->Resume());
+    }
+  }
+
+
+  void InAppWebView::getCertificate(const std::function<void(const std::optional<std::unique_ptr<SslCertificate>>)> completionHandler) const
+  {
+    auto url = getUrl();
+    if (!webView || !url.has_value()) {
+      if (completionHandler) {
+        completionHandler(std::nullopt);
+      }
+      return;
+    }
+
+    nlohmann::json parameters = {
+      {"origin", url.value()}
+    };
+
+    auto hr = webView->CallDevToolsProtocolMethod(L"Network.getCertificate", utf8_to_wide(parameters.dump()).c_str(), Callback<ICoreWebView2CallDevToolsProtocolMethodCompletedHandler>(
+      [this, completionHandler](HRESULT errorCode, LPCWSTR returnObjectAsJson)
+      {
+        std::optional<std::unique_ptr<SslCertificate>> result = std::nullopt;
+        if (succeededOrLog(errorCode)) {
+          nlohmann::json json = nlohmann::json::parse(wide_to_utf8(returnObjectAsJson));
+          if (json.at("tableNames").is_array()) {
+            auto tableNames = json.at("tableNames").get<std::vector<std::string>>();
+            if (tableNames.size() > 0) {
+              result = std::make_unique<SslCertificate>(tableNames.at(0));
+            }
+          }
+        }
+        if (completionHandler) {
+          completionHandler(std::move(result));
+        }
+        return S_OK;
+      }
+    ).Get());
+    if (failedAndLog(hr) && completionHandler) {
+      completionHandler(std::nullopt);
+    }
+  }
+
+  // flutter_view
+  void InAppWebView::setSurfaceSize(size_t width, size_t height, float scale_factor)
+  {
+    if (!webViewController) {
+      return;
+    }
+
+    if (surface_ && width > 0 && height > 0) {
+      scaleFactor_ = scale_factor;
+      auto scaled_width = width * scale_factor;
+      auto scaled_height = height * scale_factor;
+
+      RECT bounds;
+      bounds.left = 0;
+      bounds.top = 0;
+      bounds.right = static_cast<LONG>(scaled_width);
+      bounds.bottom = static_cast<LONG>(scaled_height);
+
+      surface_->put_Size({ scaled_width, scaled_height });
+
+      wil::com_ptr<ICoreWebView2Controller3> webViewController3;
+      if (SUCCEEDED(webViewController->QueryInterface(IID_PPV_ARGS(&webViewController3)))) {
+        webViewController3->put_RasterizationScale(scale_factor);
+      }
+
+      if (webViewController->put_Bounds(bounds) != S_OK) {
+        std::cerr << "Setting webview bounds failed." << std::endl;
+      }
+
+      if (surfaceSizeChangedCallback_) {
+        surfaceSizeChangedCallback_(width, height);
+      }
+    }
+  }
+
+
+  void InAppWebView::setPosition(size_t x, size_t y, float scale_factor)
+  {
+    if (!webViewController || !plugin || !plugin->registrar) {
+      return;
+    }
+
+    if (x >= 0 && y >= 0) {
+      scaleFactor_ = scale_factor;
+      auto scaled_x = static_cast<int>(x * scale_factor);
+      auto scaled_y = static_cast<int>(y * scale_factor);
+
+      auto titleBarHeight = ((GetSystemMetrics(SM_CYCAPTION) + GetSystemMetrics(SM_CYFRAME)) * scale_factor) + GetSystemMetrics(SM_CXPADDEDBORDER);
+      auto borderWidth = (GetSystemMetrics(SM_CXBORDER) + GetSystemMetrics(SM_CXPADDEDBORDER)) * scale_factor;
+
+      RECT flutterWindowRect;
+      HWND flutterWindowHWnd = plugin->registrar->GetView()->GetNativeWindow();
+      GetWindowRect(flutterWindowHWnd, &flutterWindowRect);
+
+      HWND webViewHWnd;
+      if (succeededOrLog(webViewController->get_ParentWindow(&webViewHWnd))) {
+        ::SetWindowPos(webViewHWnd,
+          nullptr,
+          static_cast<int>(flutterWindowRect.left + scaled_x - borderWidth),
+          static_cast<int>(flutterWindowRect.top + scaled_y - titleBarHeight),
+          0, 0,
+          SWP_NOZORDER | SWP_NOSIZE | SWP_NOACTIVATE);
+      }
+    }
+  }
+
+
+  void InAppWebView::setCursorPos(double x, double y)
+  {
+    if (!webViewCompositionController) {
+      return;
+    }
+
+    POINT point;
+    point.x = static_cast<LONG>(x * scaleFactor_);
+    point.y = static_cast<LONG>(y * scaleFactor_);
+    lastCursorPos_ = point;
+
+    // https://docs.microsoft.com/en-us/microsoft-edge/webview2/reference/win32/icorewebview2?view=webview2-1.0.774.44
+    webViewCompositionController->SendMouseInput(
+      COREWEBVIEW2_MOUSE_EVENT_KIND::COREWEBVIEW2_MOUSE_EVENT_KIND_MOVE,
+      virtualKeys_.state(), 0, point);
+  }
+
+  void InAppWebView::setPointerUpdate(int32_t pointer,
+    InAppWebViewPointerEventKind eventKind, double x,
+    double y, double size, double pressure)
+  {
+    if (!webViewEnv || !webViewCompositionController) {
+      return;
+    }
+
+    COREWEBVIEW2_POINTER_EVENT_KIND event =
+      COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE;
+    UINT32 pointerFlags = POINTER_FLAG_NONE;
+    switch (eventKind) {
+    case InAppWebViewPointerEventKind::Activate:
+      event = COREWEBVIEW2_POINTER_EVENT_KIND_ACTIVATE;
+      break;
+    case InAppWebViewPointerEventKind::Down:
+      event = COREWEBVIEW2_POINTER_EVENT_KIND_DOWN;
+      pointerFlags =
+        POINTER_FLAG_DOWN | POINTER_FLAG_INRANGE | POINTER_FLAG_INCONTACT;
+      break;
+    case InAppWebViewPointerEventKind::Enter:
+      event = COREWEBVIEW2_POINTER_EVENT_KIND_ENTER;
+      break;
+    case InAppWebViewPointerEventKind::Leave:
+      event = COREWEBVIEW2_POINTER_EVENT_KIND_LEAVE;
+      break;
+    case InAppWebViewPointerEventKind::Up:
+      event = COREWEBVIEW2_POINTER_EVENT_KIND_UP;
+      pointerFlags = POINTER_FLAG_UP;
+      break;
+    case InAppWebViewPointerEventKind::Update:
+      event = COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE;
+      pointerFlags =
+        POINTER_FLAG_UPDATE | POINTER_FLAG_INRANGE | POINTER_FLAG_INCONTACT;
+      break;
+    }
+
+    POINT point;
+    point.x = static_cast<LONG>(x * scaleFactor_);
+    point.y = static_cast<LONG>(y * scaleFactor_);
+
+    RECT rect;
+    rect.left = point.x - 2;
+    rect.right = point.x + 2;
+    rect.top = point.y - 2;
+    rect.bottom = point.y + 2;
+
+    wil::com_ptr<ICoreWebView2Environment3> webViewEnv3;
+    if (SUCCEEDED(webViewEnv->QueryInterface(IID_PPV_ARGS(&webViewEnv3)))) {
+      wil::com_ptr<ICoreWebView2PointerInfo> pInfo;
+      if (SUCCEEDED(webViewEnv3->CreateCoreWebView2PointerInfo(&pInfo))) {
+        if (pInfo) {
+          pInfo->put_PointerId(pointer);
+          pInfo->put_PointerKind(PT_TOUCH);
+          pInfo->put_PointerFlags(pointerFlags);
+          pInfo->put_TouchFlags(TOUCH_FLAG_NONE);
+          pInfo->put_TouchMask(TOUCH_MASK_CONTACTAREA | TOUCH_MASK_PRESSURE);
+          pInfo->put_TouchPressure(
+            std::clamp((UINT32)(pressure == 0.0 ? 1024 : 1024 * pressure),
+              (UINT32)0, (UINT32)1024));
+          pInfo->put_PixelLocationRaw(point);
+          pInfo->put_TouchContactRaw(rect);
+          webViewCompositionController->SendPointerInput(event, pInfo.get());
+        }
+      }
+    }
+  }
+
+  void InAppWebView::setPointerButtonState(InAppWebViewPointerButton button, bool is_down)
+  {
+    if (!webViewCompositionController) {
+      return;
+    }
+
+    COREWEBVIEW2_MOUSE_EVENT_KIND kind;
+    switch (button) {
+    case InAppWebViewPointerButton::Primary:
+      virtualKeys_.setIsLeftButtonDown(is_down);
+      kind = is_down ? COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOWN
+        : COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_UP;
+      break;
+    case InAppWebViewPointerButton::Secondary:
+      virtualKeys_.setIsRightButtonDown(is_down);
+      kind = is_down ? COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOWN
+        : COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_UP;
+      break;
+    case InAppWebViewPointerButton::Tertiary:
+      virtualKeys_.setIsMiddleButtonDown(is_down);
+      kind = is_down ? COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOWN
+        : COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_UP;
+      break;
+    default:
+      kind = static_cast<COREWEBVIEW2_MOUSE_EVENT_KIND>(0);
+    }
+
+    webViewCompositionController->SendMouseInput(kind, virtualKeys_.state(), 0,
+      lastCursorPos_);
+  }
+
+  void InAppWebView::sendScroll(double delta, bool horizontal)
+  {
+    if (!webViewCompositionController) {
+      return;
+    }
+
+    // delta * 6 gives me a multiple of WHEEL_DELTA (120)
+    constexpr auto kScrollMultiplier = 6;
+
+    auto offset = static_cast<short>(delta * kScrollMultiplier);
+
+    if (horizontal) {
+      webViewCompositionController->SendMouseInput(
+        COREWEBVIEW2_MOUSE_EVENT_KIND_HORIZONTAL_WHEEL, virtualKeys_.state(),
+        offset, lastCursorPos_);
+    }
+    else {
+      webViewCompositionController->SendMouseInput(COREWEBVIEW2_MOUSE_EVENT_KIND_WHEEL,
+        virtualKeys_.state(), offset,
+        lastCursorPos_);
+    }
+  }
+
+  void InAppWebView::setScrollDelta(double delta_x, double delta_y)
+  {
+    if (!webViewCompositionController) {
+      return;
+    }
+
+    if (delta_x != 0.0) {
+      sendScroll(delta_x, true);
+    }
+    if (delta_y != 0.0) {
+      sendScroll(delta_y, false);
+    }
+  }
+
+  bool InAppWebView::createSurface(const HWND parentWindow,
+    winrt::com_ptr<ABI::Windows::UI::Composition::ICompositor> compositor)
+  {
+    if (!webViewCompositionController || !webViewController) {
+      return false;
+    }
+
+    winrt::com_ptr<ABI::Windows::UI::Composition::IContainerVisual> root;
+    if (FAILED(compositor->CreateContainerVisual(root.put()))) {
+      return false;
+    }
+    surface_ = root.try_as<ABI::Windows::UI::Composition::IVisual>();
+    assert(surface_);
+
+    // initial size. doesn't matter as we resize the surface anyway.
+    surface_->put_Size({ 1280, 720 });
+    surface_->put_IsVisible(true);
+
+    winrt::com_ptr<ABI::Windows::UI::Composition::IVisual> webview_visual;
+    compositor->CreateContainerVisual(
+      reinterpret_cast<ABI::Windows::UI::Composition::IContainerVisual**>(
+        webview_visual.put()));
+
+    auto webview_visual2 =
+      webview_visual.try_as<ABI::Windows::UI::Composition::IVisual2>();
+    if (webview_visual2) {
+      webview_visual2->put_RelativeSizeAdjustment({ 1.0f, 1.0f });
+    }
+
+    winrt::com_ptr<ABI::Windows::UI::Composition::IVisualCollection> children;
+    root->get_Children(children.put());
+    children->InsertAtTop(webview_visual.get());
+    webViewCompositionController->put_RootVisualTarget(webview_visual2.get());
+
+    webViewController->put_IsVisible(true);
+
+    return true;
+  }
+
+  bool InAppWebView::isSslError(const COREWEBVIEW2_WEB_ERROR_STATUS& webErrorStatus)
+  {
+    return webErrorStatus >= COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT && webErrorStatus <= COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID;
+  }
+
+  InAppWebView::~InAppWebView()
+  {
+    debugLog("dealloc InAppWebView");
+    userContentController = nullptr;
+    if (webView) {
+      failedLog(webView->Stop());
+    }
+    HWND parentWindow = nullptr;
+    if (webViewCompositionController && webViewController && succeededOrLog(webViewController->get_ParentWindow(&parentWindow))) {
+      // if it's an InAppWebView (so webViewCompositionController will be not a nullptr!),
+      // then destroy the Window created with it
+      DestroyWindow(parentWindow);
+    }
+    if (webViewController) {
+      failedLog(webViewController->Close());
+    }
+    navigationActions_.clear();
+    inAppBrowser = nullptr;
+    plugin = nullptr;
+  }
+}
Index: windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/rohelper.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/rohelper.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/rohelper.cc
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/rohelper.cc	
@@ -0,0 +1,244 @@
+// Based on ANGLE's RoHelper (CompositorNativeWindow11.{cpp,h})
+// - https://github.com/google/angle/blob/main/src/libANGLE/renderer/d3d/d3d11/converged/CompositorNativeWindow11.h
+// - https://github.com/google/angle/blob/main/src/libANGLE/renderer/d3d/d3d11/converged/CompositorNativeWindow11.cpp
+// - https://gist.github.com/clarkezone/43e984fb9bdcd2cfcd9a4f41c208a02f 
+//
+// Copyright 2018 The ANGLE Project Authors.
+// All rights reserved.
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions
+// are met:
+//
+//     Redistributions of source code must retain the above copyright
+//     notice, this list of conditions and the following disclaimer.
+//
+//     Redistributions in binary form must reproduce the above
+//     copyright notice, this list of conditions and the following
+//     disclaimer in the documentation and/or other materials provided
+//     with the distribution.
+//
+//     Neither the name of TransGaming Inc., Google Inc., 3DLabs Inc.
+//     Ltd., nor the names of their contributors may be used to endorse
+//     or promote products derived from this software without specific
+//     prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
+// COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
+// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
+// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+// POSSIBILITY OF SUCH DAMAGE.
+
+#include "rohelper.h"
+
+#include <windows.foundation.metadata.h>
+#include <wrl.h>
+
+namespace rx {
+template <typename T>
+bool AssignProcAddress(HMODULE comBaseModule, const char* name, T*& outProc) {
+  outProc = reinterpret_cast<T*>(GetProcAddress(comBaseModule, name));
+  return *outProc != nullptr;
+}
+
+RoHelper::RoHelper(RO_INIT_TYPE init_type)
+    : mFpWindowsCreateStringReference(nullptr),
+      mFpGetActivationFactory(nullptr),
+      mFpWindowsCompareStringOrdinal(nullptr),
+      mFpCreateDispatcherQueueController(nullptr),
+      mFpWindowsDeleteString(nullptr),
+      mFpRoInitialize(nullptr),
+      mFpRoUninitialize(nullptr),
+      mWinRtAvailable(false),
+      mComBaseModule(nullptr),
+      mCoreMessagingModule(nullptr) {
+#ifdef WINUWP
+  mFpWindowsCreateStringReference = &::WindowsCreateStringReference;
+  mFpRoInitialize = &::RoInitialize;
+  mFpRoUninitialize = &::RoUninitialize;
+  mFpWindowsDeleteString = &::WindowsDeleteString;
+  mFpGetActivationFactory = &::RoGetActivationFactory;
+  mFpWindowsCompareStringOrdinal = &::WindowsCompareStringOrdinal;
+  mFpCreateDispatcherQueueController = &::CreateDispatcherQueueController;
+  mWinRtAvailable = true;
+#else
+
+  mComBaseModule = LoadLibraryA("ComBase.dll");
+
+  if (mComBaseModule == nullptr) {
+    return;
+  }
+
+  if (!AssignProcAddress(mComBaseModule, "WindowsCreateStringReference",
+                         mFpWindowsCreateStringReference)) {
+    return;
+  }
+
+  if (!AssignProcAddress(mComBaseModule, "RoGetActivationFactory",
+                         mFpGetActivationFactory)) {
+    return;
+  }
+
+  if (!AssignProcAddress(mComBaseModule, "WindowsCompareStringOrdinal",
+                         mFpWindowsCompareStringOrdinal)) {
+    return;
+  }
+
+  if (!AssignProcAddress(mComBaseModule, "WindowsDeleteString",
+                         mFpWindowsDeleteString)) {
+    return;
+  }
+
+  if (!AssignProcAddress(mComBaseModule, "RoInitialize", mFpRoInitialize)) {
+    return;
+  }
+
+  if (!AssignProcAddress(mComBaseModule, "RoUninitialize", mFpRoUninitialize)) {
+    return;
+  }
+
+  mCoreMessagingModule = LoadLibraryA("coremessaging.dll");
+
+  if (mCoreMessagingModule == nullptr) {
+    return;
+  }
+
+  if (!AssignProcAddress(mCoreMessagingModule,
+                         "CreateDispatcherQueueController",
+                         mFpCreateDispatcherQueueController)) {
+    return;
+  }
+
+  auto result = RoInitialize(init_type);
+
+  if (SUCCEEDED(result) || result == S_FALSE || result == RPC_E_CHANGED_MODE) {
+    mWinRtAvailable = true;
+  }
+#endif
+}
+
+RoHelper::~RoHelper() {
+#ifndef WINUWP
+  if (mWinRtAvailable) {
+    RoUninitialize();
+  }
+
+  if (mCoreMessagingModule != nullptr) {
+    FreeLibrary(mCoreMessagingModule);
+    mCoreMessagingModule = nullptr;
+  }
+
+  if (mComBaseModule != nullptr) {
+    FreeLibrary(mComBaseModule);
+    mComBaseModule = nullptr;
+  }
+#endif
+}
+
+bool RoHelper::WinRtAvailable() const { return mWinRtAvailable; }
+
+bool RoHelper::SupportedWindowsRelease() {
+  if (!mWinRtAvailable) {
+    return false;
+  }
+
+  HSTRING className, contractName;
+  HSTRING_HEADER classNameHeader, contractNameHeader;
+  boolean isSupported = false;
+
+  HRESULT hr = GetStringReference(
+      RuntimeClass_Windows_Foundation_Metadata_ApiInformation, &className,
+      &classNameHeader);
+
+  if (FAILED(hr)) {
+    return !!isSupported;
+  }
+
+  Microsoft::WRL::ComPtr<
+      ABI::Windows::Foundation::Metadata::IApiInformationStatics>
+      api;
+
+  hr = GetActivationFactory(
+      className,
+      __uuidof(ABI::Windows::Foundation::Metadata::IApiInformationStatics),
+      &api);
+
+  if (FAILED(hr)) {
+    return !!isSupported;
+  }
+
+  hr = GetStringReference(L"Windows.Foundation.UniversalApiContract",
+                          &contractName, &contractNameHeader);
+  if (FAILED(hr)) {
+    return !!isSupported;
+  }
+
+  api->IsApiContractPresentByMajor(contractName, 6, &isSupported);
+
+  return !!isSupported;
+}
+
+HRESULT RoHelper::GetStringReference(PCWSTR source, HSTRING* act,
+                                     HSTRING_HEADER* header) {
+  if (!mWinRtAvailable) {
+    return E_FAIL;
+  }
+
+  const wchar_t* str = static_cast<const wchar_t*>(source);
+
+  unsigned int length;
+  HRESULT hr = SizeTToUInt32(::wcslen(str), &length);
+  if (FAILED(hr)) {
+    return hr;
+  }
+
+  return mFpWindowsCreateStringReference(source, length, header, act);
+}
+
+HRESULT RoHelper::GetActivationFactory(const HSTRING act,
+                                       const IID& interfaceId, void** fac) {
+  if (!mWinRtAvailable) {
+    return E_FAIL;
+  }
+  auto hr = mFpGetActivationFactory(act, interfaceId, fac);
+  return hr;
+}
+
+HRESULT RoHelper::WindowsCompareStringOrdinal(HSTRING one, HSTRING two,
+                                              int* result) {
+  if (!mWinRtAvailable) {
+    return E_FAIL;
+  }
+  return mFpWindowsCompareStringOrdinal(one, two, result);
+}
+
+HRESULT RoHelper::CreateDispatcherQueueController(
+    DispatcherQueueOptions options,
+    ABI::Windows::System::IDispatcherQueueController**
+        dispatcherQueueController) {
+  if (!mWinRtAvailable) {
+    return E_FAIL;
+  }
+  return mFpCreateDispatcherQueueController(options, dispatcherQueueController);
+}
+
+HRESULT RoHelper::WindowsDeleteString(HSTRING one) {
+  if (!mWinRtAvailable) {
+    return E_FAIL;
+  }
+  return mFpWindowsDeleteString(one);
+}
+
+HRESULT RoHelper::RoInitialize(RO_INIT_TYPE type) {
+  return mFpRoInitialize(type);
+}
+
+void RoHelper::RoUninitialize() { mFpRoUninitialize(); }
+}  // namespace rx
Index: windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/direct3d11.interop.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/direct3d11.interop.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/direct3d11.interop.cc
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/direct3d11.interop.cc	
@@ -0,0 +1,47 @@
+#include "direct3d11.interop.h"
+
+namespace flutter_inappwebview_plugin
+{
+
+  namespace {
+
+    typedef HRESULT(WINAPI* CreateDirect3D11DeviceFromDXGIDeviceFn)(IDXGIDevice*,
+      LPVOID*);
+
+    struct D3DFuncs {
+      CreateDirect3D11DeviceFromDXGIDeviceFn CreateDirect3D11DeviceFromDXGIDevice =
+        nullptr;
+
+      D3DFuncs()
+      {
+        auto handle = GetModuleHandle(L"d3d11.dll");
+        if (!handle) {
+          return;
+        }
+
+        CreateDirect3D11DeviceFromDXGIDevice =
+          reinterpret_cast<CreateDirect3D11DeviceFromDXGIDeviceFn>(
+            GetProcAddress(handle, "CreateDirect3D11DeviceFromDXGIDevice"));
+      }
+
+      static const D3DFuncs& instance()
+      {
+        static D3DFuncs funcs;
+        return funcs;
+      }
+    };
+
+  }  // namespace
+
+  HRESULT CreateDirect3D11DeviceFromDXGIDevice(IDXGIDevice* dxgiDevice,
+    IInspectable** graphicsDevice)
+  {
+    auto ptr = D3DFuncs::instance().CreateDirect3D11DeviceFromDXGIDevice;
+    if (ptr) {
+      return ptr(dxgiDevice, reinterpret_cast<LPVOID*>(graphicsDevice));
+    }
+
+    return E_NOTIMPL;
+  }
+
+}  // namespace util
Index: windows/flutter/generated_plugins.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/generated_plugins.cmake b/windows/flutter/generated_plugins.cmake
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/generated_plugins.cmake	
@@ -0,0 +1,31 @@
+#
+# Generated file, do not edit.
+#
+
+list(APPEND FLUTTER_PLUGIN_LIST
+  cloud_firestore
+  file_selector_windows
+  firebase_auth
+  firebase_core
+  flutter_inappwebview_windows
+  flutter_localization
+  flutter_tts
+  url_launcher_windows
+)
+
+list(APPEND FLUTTER_FFI_PLUGIN_LIST
+)
+
+set(PLUGIN_BUNDLED_LIBRARIES)
+
+foreach(plugin ${FLUTTER_PLUGIN_LIST})
+  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${plugin}/windows plugins/${plugin})
+  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)
+  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)
+  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})
+endforeach(plugin)
+
+foreach(ffi_plugin ${FLUTTER_FFI_PLUGIN_LIST})
+  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${ffi_plugin}/windows plugins/${ffi_plugin})
+  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${ffi_plugin}_bundled_libraries})
+endforeach(ffi_plugin)
Index: windows/flutter/generated_plugin_registrant.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/flutter/generated_plugin_registrant.cc b/windows/flutter/generated_plugin_registrant.cc
new file mode 100644
--- /dev/null	
+++ b/windows/flutter/generated_plugin_registrant.cc	
@@ -0,0 +1,35 @@
+//
+//  Generated file. Do not edit.
+//
+
+// clang-format off
+
+#include "generated_plugin_registrant.h"
+
+#include <cloud_firestore/cloud_firestore_plugin_c_api.h>
+#include <file_selector_windows/file_selector_windows.h>
+#include <firebase_auth/firebase_auth_plugin_c_api.h>
+#include <firebase_core/firebase_core_plugin_c_api.h>
+#include <flutter_inappwebview_windows/flutter_inappwebview_windows_plugin_c_api.h>
+#include <flutter_localization/flutter_localization_plugin_c_api.h>
+#include <flutter_tts/flutter_tts_plugin.h>
+#include <url_launcher_windows/url_launcher_windows.h>
+
+void RegisterPlugins(flutter::PluginRegistry* registry) {
+  CloudFirestorePluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("CloudFirestorePluginCApi"));
+  FileSelectorWindowsRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FileSelectorWindows"));
+  FirebaseAuthPluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FirebaseAuthPluginCApi"));
+  FirebaseCorePluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FirebaseCorePluginCApi"));
+  FlutterInappwebviewWindowsPluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FlutterInappwebviewWindowsPluginCApi"));
+  FlutterLocalizationPluginCApiRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FlutterLocalizationPluginCApi"));
+  FlutterTtsPluginRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FlutterTtsPlugin"));
+  UrlLauncherWindowsRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("UrlLauncherWindows"));
+}
Index: windows/CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/windows/CMakeLists.txt b/windows/CMakeLists.txt
new file mode 100644
--- /dev/null	
+++ b/windows/CMakeLists.txt	
@@ -0,0 +1,108 @@
+# Project-level configuration.
+cmake_minimum_required(VERSION 3.14)
+project(finney LANGUAGES CXX)
+
+# The name of the executable created for the application. Change this to change
+# the on-disk name of your application.
+set(BINARY_NAME "finney")
+
+# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
+# versions of CMake.
+cmake_policy(VERSION 3.14...3.25)
+
+# Define build configuration option.
+get_property(IS_MULTICONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
+if(IS_MULTICONFIG)
+  set(CMAKE_CONFIGURATION_TYPES "Debug;Profile;Release"
+    CACHE STRING "" FORCE)
+else()
+  if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
+    set(CMAKE_BUILD_TYPE "Debug" CACHE
+      STRING "Flutter build mode" FORCE)
+    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
+      "Debug" "Profile" "Release")
+  endif()
+endif()
+# Define settings for the Profile build mode.
+set(CMAKE_EXE_LINKER_FLAGS_PROFILE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
+set(CMAKE_SHARED_LINKER_FLAGS_PROFILE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE}")
+set(CMAKE_C_FLAGS_PROFILE "${CMAKE_C_FLAGS_RELEASE}")
+set(CMAKE_CXX_FLAGS_PROFILE "${CMAKE_CXX_FLAGS_RELEASE}")
+
+# Use Unicode for all projects.
+add_definitions(-DUNICODE -D_UNICODE)
+
+# Compilation settings that should be applied to most targets.
+#
+# Be cautious about adding new options here, as plugins use this function by
+# default. In most cases, you should add new options to specific targets instead
+# of modifying this function.
+function(APPLY_STANDARD_SETTINGS TARGET)
+  target_compile_features(${TARGET} PUBLIC cxx_std_17)
+  target_compile_options(${TARGET} PRIVATE /W4 /WX /wd"4100")
+  target_compile_options(${TARGET} PRIVATE /EHsc)
+  target_compile_definitions(${TARGET} PRIVATE "_HAS_EXCEPTIONS=0")
+  target_compile_definitions(${TARGET} PRIVATE "$<$<CONFIG:Debug>:_DEBUG>")
+endfunction()
+
+# Flutter library and tool build rules.
+set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
+add_subdirectory(${FLUTTER_MANAGED_DIR})
+
+# Application build; see runner/CMakeLists.txt.
+add_subdirectory("runner")
+
+
+# Generated plugin build rules, which manage building the plugins and adding
+# them to the application.
+include(flutter/generated_plugins.cmake)
+
+
+# === Installation ===
+# Support files are copied into place next to the executable, so that it can
+# run in place. This is done instead of making a separate bundle (as on Linux)
+# so that building and running from within Visual Studio will work.
+set(BUILD_BUNDLE_DIR "$<TARGET_FILE_DIR:${BINARY_NAME}>")
+# Make the "install" step default, as it's required to run.
+set(CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD 1)
+if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
+  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
+endif()
+
+set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
+set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}")
+
+install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
+  COMPONENT Runtime)
+
+install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+  COMPONENT Runtime)
+
+if(PLUGIN_BUNDLED_LIBRARIES)
+  install(FILES "${PLUGIN_BUNDLED_LIBRARIES}"
+    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+    COMPONENT Runtime)
+endif()
+
+# Copy the native assets provided by the build.dart from all packages.
+set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/windows/")
+install(DIRECTORY "${NATIVE_ASSETS_DIR}"
+   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
+   COMPONENT Runtime)
+
+# Fully re-copy the assets directory on each build to avoid having stale files
+# from a previous install.
+set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
+install(CODE "
+  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
+  " COMPONENT Runtime)
+install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
+  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)
+
+# Install the AOT library on non-Debug builds only.
+install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
+  CONFIGURATIONS Profile;Release
+  COMPONENT Runtime)
Index: .metadata
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.metadata b/.metadata
new file mode 100644
--- /dev/null	
+++ b/.metadata	
@@ -0,0 +1,45 @@
+# This file tracks properties of this Flutter project.
+# Used by Flutter tool to assess capabilities and perform upgrades etc.
+#
+# This file should be version controlled and should not be manually edited.
+
+version:
+  revision: "35c388afb57ef061d06a39b537336c87e0e3d1b1"
+  channel: "stable"
+
+project_type: app
+
+# Tracks metadata for the flutter migrate command
+migration:
+  platforms:
+    - platform: root
+      create_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+      base_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+    - platform: android
+      create_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+      base_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+    - platform: ios
+      create_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+      base_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+    - platform: linux
+      create_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+      base_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+    - platform: macos
+      create_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+      base_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+    - platform: web
+      create_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+      base_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+    - platform: windows
+      create_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+      base_revision: 35c388afb57ef061d06a39b537336c87e0e3d1b1
+
+  # User provided section
+
+  # List of Local paths (relative to this file) that should be
+  # ignored by the migrate tool.
+  #
+  # Files that are not part of the templates will be ignored by default.
+  unmanaged_files:
+    - 'lib/main.dart'
+    - 'ios/Runner.xcodeproj/project.pbxproj'
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
new file mode 100644
--- /dev/null	
+++ b/README.md	
@@ -0,0 +1,16 @@
+# INTRODUCTION
+
+P26 PROJECT - FINNEY - AI-driven expense tracker.
+
+## DEVELOPMENT PROGRESS
+| Date & Time         | Developer             | Branch | ✅ Completed Tasks | 🚧 In Progress | Issues |
+|---------------------|----------------------|--------|--------------------|---------------|--------|
+| **9th March 2025 (4:19 PM)**  | Hai Nam Ngo  | `main` | - Implemented authentication using Firebase.<br>- Designed UI for authentication.<br>- Created template/folder structure.<br>- Developed reusable widgets and theme. | - Google Sign-in integration.<br>- AI Chatbot development. | None |
+| **10th March 2025 (5:15 PM)**  | Hai Nam Ngo  | `main` | - Fixed Android NDK version issue. |  | NDK version conflict on Android. |
+| **10th March 2025 (7:25 PM)**  | Do Thanh Phuc Dang | `master` | - Checked code upload (2nd attempt). |
+| **16th March 2025 (11:33 PM)**  | Do Thanh Phuc Dang | `master` | - Add Hive local storage. |
+| **25th March 2025 (01:33 PM)**  | Do Thanh Phuc Dang | `master` | - Implement chatbot UI. - Need to add history question  - Adjust UI scrolling|
+| **1st April 2025 (02:20 AM)**  | Do Thanh Phuc Dang | `master` | - Add google sign in function|
+  | None |
+
+---
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.gitignore	
@@ -0,0 +1,45 @@
+# Miscellaneous
+*.class
+*.log
+*.pyc
+*.swp
+.DS_Store
+.atom/
+.build/
+.buildlog/
+.history
+.svn/
+.swiftpm/
+migrate_working_dir/
+
+# IntelliJ related
+*.iml
+*.ipr
+*.iws
+.idea/
+
+# The .vscode folder contains launch configuration and tasks you configure in
+# VS Code which you may wish to be included in version control, so this line
+# is commented out by default.
+#.vscode/
+
+# Flutter/Dart/Pub related
+**/doc/api/
+**/ios/Flutter/.last_build_id
+.dart_tool/
+.flutter-plugins
+.flutter-plugins-dependencies
+.pub-cache/
+.pub/
+/build/
+
+# Symbolication related
+app.*.symbols
+
+# Obfuscation related
+app.*.map.json
+
+# Android Studio will place build artifacts here
+/android/app/debug
+/android/app/profile
+/android/app/release
Index: pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.lock b/pubspec.lock
new file mode 100644
--- /dev/null	
+++ b/pubspec.lock	
@@ -0,0 +1,1487 @@
+# Generated by pub
+# See https://dart.dev/tools/pub/glossary#lockfile
+packages:
+  _fe_analyzer_shared:
+    dependency: transitive
+    description:
+      name: _fe_analyzer_shared
+      sha256: "4897882604d919befd350648c7f91926a9d5de99e67b455bf0917cc2362f4bb8"
+      url: "https://pub.dev"
+    source: hosted
+    version: "47.0.0"
+  _flutterfire_internals:
+    dependency: transitive
+    description:
+      name: _flutterfire_internals
+      sha256: de9ecbb3ddafd446095f7e833c853aff2fa1682b017921fe63a833f9d6f0e422
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.54"
+  analyzer:
+    dependency: transitive
+    description:
+      name: analyzer
+      sha256: "690e335554a8385bc9d787117d9eb52c0c03ee207a607e593de3c9d71b1cfe80"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.7.0"
+  archive:
+    dependency: transitive
+    description:
+      name: archive
+      sha256: cb6a278ef2dbb298455e1a713bda08524a175630ec643a242c399c932a0a1f7d
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.6.1"
+  args:
+    dependency: transitive
+    description:
+      name: args
+      sha256: d0481093c50b1da8910eb0bb301626d4d8eb7284aa739614d2b394ee09e3ea04
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.7.0"
+  async:
+    dependency: transitive
+    description:
+      name: async
+      sha256: d2872f9c19731c2e5f10444b14686eb7cc85c76274bd6c16e1816bff9a3bab63
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.12.0"
+  boolean_selector:
+    dependency: transitive
+    description:
+      name: boolean_selector
+      sha256: "8aab1771e1243a5063b8b0ff68042d67334e3feab9e95b9490f9a6ebf73b42ea"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.2"
+  build:
+    dependency: transitive
+    description:
+      name: build
+      sha256: "80184af8b6cb3e5c1c4ec6d8544d27711700bc3e6d2efad04238c7b5290889f0"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.1"
+  build_config:
+    dependency: transitive
+    description:
+      name: build_config
+      sha256: "4ae2de3e1e67ea270081eaee972e1bd8f027d459f249e0f1186730784c2e7e33"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  build_daemon:
+    dependency: transitive
+    description:
+      name: build_daemon
+      sha256: "8e928697a82be082206edb0b9c99c5a4ad6bc31c9e9b8b2f291ae65cd4a25daa"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.4"
+  build_resolvers:
+    dependency: transitive
+    description:
+      name: build_resolvers
+      sha256: "687cf90a3951affac1bd5f9ecb5e3e90b60487f3d9cdc359bb310f8876bb02a6"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.10"
+  build_runner:
+    dependency: "direct main"
+    description:
+      name: build_runner
+      sha256: "028819cfb90051c6b5440c7e574d1896f8037e3c96cf17aaeb054c9311cfbf4d"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.13"
+  build_runner_core:
+    dependency: transitive
+    description:
+      name: build_runner_core
+      sha256: "6d6ee4276b1c5f34f21fdf39425202712d2be82019983d52f351c94aafbc2c41"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.2.10"
+  built_collection:
+    dependency: transitive
+    description:
+      name: built_collection
+      sha256: "376e3dd27b51ea877c28d525560790aee2e6fbb5f20e2f85d5081027d94e2100"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.1.1"
+  built_value:
+    dependency: transitive
+    description:
+      name: built_value
+      sha256: ea90e81dc4a25a043d9bee692d20ed6d1c4a1662a28c03a96417446c093ed6b4
+      url: "https://pub.dev"
+    source: hosted
+    version: "8.9.5"
+  cached_network_image:
+    dependency: transitive
+    description:
+      name: cached_network_image
+      sha256: "28ea9690a8207179c319965c13cd8df184d5ee721ae2ce60f398ced1219cea1f"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.3.1"
+  cached_network_image_platform_interface:
+    dependency: transitive
+    description:
+      name: cached_network_image_platform_interface
+      sha256: "9e90e78ae72caa874a323d78fa6301b3fb8fa7ea76a8f96dc5b5bf79f283bf2f"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.0"
+  cached_network_image_web:
+    dependency: transitive
+    description:
+      name: cached_network_image_web
+      sha256: "205d6a9f1862de34b93184f22b9d2d94586b2f05c581d546695e3d8f6a805cd7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.2.0"
+  characters:
+    dependency: transitive
+    description:
+      name: characters
+      sha256: f71061c654a3380576a52b451dd5532377954cf9dbd272a78fc8479606670803
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.4.0"
+  checked_yaml:
+    dependency: transitive
+    description:
+      name: checked_yaml
+      sha256: feb6bed21949061731a7a75fc5d2aa727cf160b91af9a3e464c5e3a32e28b5ff
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.3"
+  clock:
+    dependency: transitive
+    description:
+      name: clock
+      sha256: fddb70d9b5277016c77a80201021d40a2247104d9f4aa7bab7157b7e3f05b84b
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  cloud_firestore:
+    dependency: "direct main"
+    description:
+      name: cloud_firestore
+      sha256: "6b5d0ca6b62830ca5bcf98c5e0c882df32dea3cb523b635db3626333e1c29090"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.6.5"
+  cloud_firestore_platform_interface:
+    dependency: transitive
+    description:
+      name: cloud_firestore_platform_interface
+      sha256: "9f012844eb59be6827ed97415875c5a29ccacd28bc79bf85b4680738251a33df"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.6.6"
+  cloud_firestore_web:
+    dependency: transitive
+    description:
+      name: cloud_firestore_web
+      sha256: b8b754269be0e907acd9ff63ad60f66b84c78d330ca1d7e474f86c9527ddc803
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.4.6"
+  code_builder:
+    dependency: transitive
+    description:
+      name: code_builder
+      sha256: "0ec10bf4a89e4c613960bf1e8b42c64127021740fb21640c29c909826a5eea3e"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.10.1"
+  collection:
+    dependency: transitive
+    description:
+      name: collection
+      sha256: "2f5709ae4d3d59dd8f7cd309b4e023046b57d8a6c82130785d2b0e5868084e76"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.19.1"
+  convert:
+    dependency: transitive
+    description:
+      name: convert
+      sha256: b30acd5944035672bc15c6b7a8b47d773e41e2f17de064350988c5d02adb1c68
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.2"
+  cross_file:
+    dependency: transitive
+    description:
+      name: cross_file
+      sha256: "7caf6a750a0c04effbb52a676dce9a4a592e10ad35c34d6d2d0e4811160d5670"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.3.4+2"
+  crypto:
+    dependency: transitive
+    description:
+      name: crypto
+      sha256: "1e445881f28f22d6140f181e07737b22f1e099a5e1ff94b0af2f9e4a463f4855"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.6"
+  csslib:
+    dependency: transitive
+    description:
+      name: csslib
+      sha256: "09bad715f418841f976c77db72d5398dc1253c21fb9c0c7f0b0b985860b2d58e"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.2"
+  cupertino_icons:
+    dependency: "direct main"
+    description:
+      name: cupertino_icons
+      sha256: ba631d1c7f7bef6b729a622b7b752645a2d076dba9976925b8f25725a30e1ee6
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.8"
+  dart_style:
+    dependency: transitive
+    description:
+      name: dart_style
+      sha256: "7a03456c3490394c8e7665890333e91ae8a49be43542b616e414449ac358acd4"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.4"
+  dash_chat_2:
+    dependency: "direct main"
+    description:
+      name: dash_chat_2
+      sha256: "87ff33cbd1d5fe6241eb6c2044de32d64ef888f5d2ec9b4ab75a949d4b3742d3"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.0.21"
+  dio:
+    dependency: transitive
+    description:
+      name: dio
+      sha256: "253a18bbd4851fecba42f7343a1df3a9a4c1d31a2c1b37e221086b4fa8c8dbc9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.8.0+1"
+  dio_web_adapter:
+    dependency: transitive
+    description:
+      name: dio_web_adapter
+      sha256: "7586e476d70caecaf1686d21eee7247ea43ef5c345eab9e0cc3583ff13378d78"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.1"
+  equatable:
+    dependency: transitive
+    description:
+      name: equatable
+      sha256: "567c64b3cb4cf82397aac55f4f0cbd3ca20d77c6c03bedbc4ceaddc08904aef7"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.7"
+  fake_async:
+    dependency: transitive
+    description:
+      name: fake_async
+      sha256: "6a95e56b2449df2273fd8c45a662d6947ce1ebb7aafe80e550a3f68297f3cacc"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.2"
+  ffi:
+    dependency: transitive
+    description:
+      name: ffi
+      sha256: "289279317b4b16eb2bb7e271abccd4bf84ec9bdcbe999e278a94b804f5630418"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.4"
+  file:
+    dependency: transitive
+    description:
+      name: file
+      sha256: a3b4f84adafef897088c160faf7dfffb7696046cb13ae90b508c2cbc95d3b8d4
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.1"
+  file_selector_linux:
+    dependency: transitive
+    description:
+      name: file_selector_linux
+      sha256: "54cbbd957e1156d29548c7d9b9ec0c0ebb6de0a90452198683a7d23aed617a33"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.9.3+2"
+  file_selector_macos:
+    dependency: transitive
+    description:
+      name: file_selector_macos
+      sha256: "271ab9986df0c135d45c3cdb6bd0faa5db6f4976d3e4b437cf7d0f258d941bfc"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.9.4+2"
+  file_selector_platform_interface:
+    dependency: transitive
+    description:
+      name: file_selector_platform_interface
+      sha256: a3994c26f10378a039faa11de174d7b78eb8f79e4dd0af2a451410c1a5c3f66b
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.6.2"
+  file_selector_windows:
+    dependency: transitive
+    description:
+      name: file_selector_windows
+      sha256: "320fcfb6f33caa90f0b58380489fc5ac05d99ee94b61aa96ec2bff0ba81d3c2b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.9.3+4"
+  firebase_auth:
+    dependency: "direct main"
+    description:
+      name: firebase_auth
+      sha256: "54c62b2d187709114dd09ce658a8803ee91f9119b0e0d3fc2245130ad9bff9ad"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.5.2"
+  firebase_auth_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_auth_platform_interface
+      sha256: "5402d13f4bb7f29f2fb819f3b6b5a5a56c9f714aef2276546d397e25ac1b6b8e"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.6.2"
+  firebase_auth_web:
+    dependency: transitive
+    description:
+      name: firebase_auth_web
+      sha256: "2be496911f0807895d5fe8067b70b7d758142dd7fb26485cbe23e525e2547764"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.14.2"
+  firebase_core:
+    dependency: "direct main"
+    description:
+      name: firebase_core
+      sha256: "017d17d9915670e6117497e640b2859e0b868026ea36bf3a57feb28c3b97debe"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.13.0"
+  firebase_core_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_core_platform_interface
+      sha256: d7253d255ff10f85cfd2adaba9ac17bae878fa3ba577462451163bd9f1d1f0bf
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.4.0"
+  firebase_core_web:
+    dependency: transitive
+    description:
+      name: firebase_core_web
+      sha256: "129a34d1e0fb62e2b488d988a1fc26cc15636357e50944ffee2862efe8929b23"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.22.0"
+  fixnum:
+    dependency: transitive
+    description:
+      name: fixnum
+      sha256: b6dc7065e46c974bc7c5f143080a6764ec7a4be6da1285ececdc37be96de53be
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.1"
+  fl_chart:
+    dependency: "direct main"
+    description:
+      name: fl_chart
+      sha256: "5a74434cc83bf64346efb562f1a06eefaf1bcb530dc3d96a104f631a1eff8d79"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.65.0"
+  flutter:
+    dependency: "direct main"
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  flutter_cache_manager:
+    dependency: transitive
+    description:
+      name: flutter_cache_manager
+      sha256: "8207f27539deb83732fdda03e259349046a39a4c767269285f449ade355d54ba"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.3.1"
+  flutter_gemini:
+    dependency: "direct main"
+    description:
+      name: flutter_gemini
+      sha256: b7264b1d19acc4b1a5628a0e26c0976aa1fb948f0d3243bc3510ff51e09476b7
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.0"
+  flutter_inappwebview:
+    dependency: "direct main"
+    description:
+      name: flutter_inappwebview
+      sha256: "80092d13d3e29b6227e25b67973c67c7210bd5e35c4b747ca908e31eb71a46d5"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.1.5"
+  flutter_inappwebview_android:
+    dependency: transitive
+    description:
+      name: flutter_inappwebview_android
+      sha256: "62557c15a5c2db5d195cb3892aab74fcaec266d7b86d59a6f0027abd672cddba"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.3"
+  flutter_inappwebview_internal_annotations:
+    dependency: transitive
+    description:
+      name: flutter_inappwebview_internal_annotations
+      sha256: "787171d43f8af67864740b6f04166c13190aa74a1468a1f1f1e9ee5b90c359cd"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.2.0"
+  flutter_inappwebview_ios:
+    dependency: transitive
+    description:
+      name: flutter_inappwebview_ios
+      sha256: "5818cf9b26cf0cbb0f62ff50772217d41ea8d3d9cc00279c45f8aabaa1b4025d"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  flutter_inappwebview_macos:
+    dependency: transitive
+    description:
+      name: flutter_inappwebview_macos
+      sha256: c1fbb86af1a3738e3541364d7d1866315ffb0468a1a77e34198c9be571287da1
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  flutter_inappwebview_platform_interface:
+    dependency: transitive
+    description:
+      name: flutter_inappwebview_platform_interface
+      sha256: cf5323e194096b6ede7a1ca808c3e0a078e4b33cc3f6338977d75b4024ba2500
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.0+1"
+  flutter_inappwebview_web:
+    dependency: transitive
+    description:
+      name: flutter_inappwebview_web
+      sha256: "55f89c83b0a0d3b7893306b3bb545ba4770a4df018204917148ebb42dc14a598"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  flutter_inappwebview_windows:
+    dependency: transitive
+    description:
+      name: flutter_inappwebview_windows
+      sha256: "8b4d3a46078a2cdc636c4a3d10d10f2a16882f6be607962dbfff8874d1642055"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.6.0"
+  flutter_lints:
+    dependency: "direct dev"
+    description:
+      name: flutter_lints
+      sha256: "5398f14efa795ffb7a33e9b6a08798b26a180edac4ad7db3f231e40f82ce11e1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.0.0"
+  flutter_localization:
+    dependency: "direct main"
+    description:
+      name: flutter_localization
+      sha256: "987faf0a6c13a267202b28d3ed680647e234245ead1a1c1f95f87e86c6f12490"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.3.2"
+  flutter_localizations:
+    dependency: "direct main"
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  flutter_markdown:
+    dependency: transitive
+    description:
+      name: flutter_markdown
+      sha256: "634622a3a826d67cb05c0e3e576d1812c430fa98404e95b60b131775c73d76ec"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.7.7"
+  flutter_parsed_text:
+    dependency: transitive
+    description:
+      name: flutter_parsed_text
+      sha256: "529cf5793b7acdf16ee0f97b158d0d4ba0bf06e7121ef180abe1a5b59e32c1e2"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.1"
+  flutter_plugin_android_lifecycle:
+    dependency: transitive
+    description:
+      name: flutter_plugin_android_lifecycle
+      sha256: "5a1e6fb2c0561958d7e4c33574674bda7b77caaca7a33b758876956f2902eea3"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.27"
+  flutter_slidable:
+    dependency: "direct main"
+    description:
+      name: flutter_slidable
+      sha256: a857de7ea701f276fd6a6c4c67ae885b60729a3449e42766bb0e655171042801
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.2"
+  flutter_test:
+    dependency: "direct dev"
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  flutter_tts:
+    dependency: "direct main"
+    description:
+      name: flutter_tts
+      sha256: baa3cb6b4990318460fe28bfa8c7869399e97223971532c02bd97c5e876aa3c5
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.2.2"
+  flutter_web_plugins:
+    dependency: transitive
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  frontend_server_client:
+    dependency: transitive
+    description:
+      name: frontend_server_client
+      sha256: f64a0333a82f30b0cca061bc3d143813a486dc086b574bfb233b7c1372427694
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.0"
+  glob:
+    dependency: transitive
+    description:
+      name: glob
+      sha256: c3f1ee72c96f8f78935e18aa8cecced9ab132419e8625dc187e1c2408efc20de
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.3"
+  google_fonts:
+    dependency: "direct main"
+    description:
+      name: google_fonts
+      sha256: "6b6f10f0ce3c42f6552d1c70d2c28d764cf22bb487f50f66cca31dcd5194f4d6"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.0.4"
+  google_identity_services_web:
+    dependency: transitive
+    description:
+      name: google_identity_services_web
+      sha256: "55580f436822d64c8ff9a77e37d61f5fb1e6c7ec9d632a43ee324e2a05c3c6c9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.3.3"
+  google_nav_bar:
+    dependency: "direct main"
+    description:
+      name: google_nav_bar
+      sha256: bb12dd21514ee1b041ab3127673e2fd85e693337df308f7f2b75cd1e8e92eaf4
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.0.7"
+  google_sign_in:
+    dependency: "direct main"
+    description:
+      name: google_sign_in
+      sha256: d0a2c3bcb06e607bb11e4daca48bd4b6120f0bbc4015ccebbe757d24ea60ed2a
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.0"
+  google_sign_in_android:
+    dependency: transitive
+    description:
+      name: google_sign_in_android
+      sha256: "4e52c64366bdb3fe758f683b088ee514cc7a95e69c52b5ee9fc5919e1683d21b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.2.0"
+  google_sign_in_ios:
+    dependency: transitive
+    description:
+      name: google_sign_in_ios
+      sha256: "29cd125f58f50ceb40e8253d3c0209e321eee3e5df16cd6d262495f7cad6a2bd"
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.8.1"
+  google_sign_in_platform_interface:
+    dependency: transitive
+    description:
+      name: google_sign_in_platform_interface
+      sha256: "5f6f79cf139c197261adb6ac024577518ae48fdff8e53205c5373b5f6430a8aa"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.0"
+  google_sign_in_web:
+    dependency: transitive
+    description:
+      name: google_sign_in_web
+      sha256: "460547beb4962b7623ac0fb8122d6b8268c951cf0b646dd150d60498430e4ded"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.12.4+4"
+  graphs:
+    dependency: transitive
+    description:
+      name: graphs
+      sha256: "741bbf84165310a68ff28fe9e727332eef1407342fca52759cb21ad8177bb8d0"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.2"
+  hive:
+    dependency: "direct main"
+    description:
+      name: hive
+      sha256: "8dcf6db979d7933da8217edcec84e9df1bdb4e4edc7fc77dbd5aa74356d6d941"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.3"
+  hive_flutter:
+    dependency: "direct main"
+    description:
+      name: hive_flutter
+      sha256: dca1da446b1d808a51689fb5d0c6c9510c0a2ba01e22805d492c73b68e33eecc
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.0"
+  hive_generator:
+    dependency: "direct main"
+    description:
+      name: hive_generator
+      sha256: "81fd20125cb2ce8fd23623d7744ffbaf653aae93706c9bd3bf7019ea0ace3938"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.3"
+  hive_ui:
+    dependency: "direct main"
+    description:
+      name: hive_ui
+      sha256: a2f4919c84dce6a36642ab3289fb5524b058788f74064ba99fbda976d3bcc2cd
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.14"
+  html:
+    dependency: transitive
+    description:
+      name: html
+      sha256: "9475be233c437f0e3637af55e7702cbbe5c23a68bd56e8a5fa2d426297b7c6c8"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.15.5+1"
+  http:
+    dependency: transitive
+    description:
+      name: http
+      sha256: "5895291c13fa8a3bd82e76d5627f69e0d85ca6a30dcac95c4ea19a5d555879c2"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.13.6"
+  http_multi_server:
+    dependency: transitive
+    description:
+      name: http_multi_server
+      sha256: aa6199f908078bb1c5efb8d8638d4ae191aac11b311132c3ef48ce352fb52ef8
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.2.2"
+  http_parser:
+    dependency: transitive
+    description:
+      name: http_parser
+      sha256: "178d74305e7866013777bab2c3d8726205dc5a4dd935297175b19a23a2e66571"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.1.2"
+  image_picker:
+    dependency: "direct main"
+    description:
+      name: image_picker
+      sha256: "021834d9c0c3de46bf0fe40341fa07168407f694d9b2bb18d532dc1261867f7a"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.2"
+  image_picker_android:
+    dependency: transitive
+    description:
+      name: image_picker_android
+      sha256: "8bd392ba8b0c8957a157ae0dc9fcf48c58e6c20908d5880aea1d79734df090e9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.8.12+22"
+  image_picker_for_web:
+    dependency: transitive
+    description:
+      name: image_picker_for_web
+      sha256: "717eb042ab08c40767684327be06a5d8dbb341fe791d514e4b92c7bbe1b7bb83"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.6"
+  image_picker_ios:
+    dependency: transitive
+    description:
+      name: image_picker_ios
+      sha256: "05da758e67bc7839e886b3959848aa6b44ff123ab4b28f67891008afe8ef9100"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.8.12+2"
+  image_picker_linux:
+    dependency: transitive
+    description:
+      name: image_picker_linux
+      sha256: "34a65f6740df08bbbeb0a1abd8e6d32107941fd4868f67a507b25601651022c9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.2.1+2"
+  image_picker_macos:
+    dependency: transitive
+    description:
+      name: image_picker_macos
+      sha256: "1b90ebbd9dcf98fb6c1d01427e49a55bd96b5d67b8c67cf955d60a5de74207c1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.2.1+2"
+  image_picker_platform_interface:
+    dependency: transitive
+    description:
+      name: image_picker_platform_interface
+      sha256: "886d57f0be73c4b140004e78b9f28a8914a09e50c2d816bdd0520051a71236a0"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.10.1"
+  image_picker_windows:
+    dependency: transitive
+    description:
+      name: image_picker_windows
+      sha256: "6ad07afc4eb1bc25f3a01084d28520496c4a3bb0cb13685435838167c9dcedeb"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.2.1+1"
+  internet_connection_checker:
+    dependency: "direct main"
+    description:
+      name: internet_connection_checker
+      sha256: "1c683e63e89c9ac66a40748b1b20889fd9804980da732bf2b58d6d5456c8e876"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.0+1"
+  intl:
+    dependency: "direct main"
+    description:
+      name: intl
+      sha256: d6f56758b7d3014a48af9701c085700aac781a92a87a62b1333b46d8879661cf
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.19.0"
+  io:
+    dependency: transitive
+    description:
+      name: io
+      sha256: dfd5a80599cf0165756e3181807ed3e77daf6dd4137caaad72d0b7931597650b
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.5"
+  js:
+    dependency: transitive
+    description:
+      name: js
+      sha256: f2c445dce49627136094980615a031419f7f3eb393237e4ecd97ac15dea343f3
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.6.7"
+  json_annotation:
+    dependency: transitive
+    description:
+      name: json_annotation
+      sha256: "1ce844379ca14835a50d2f019a3099f419082cfdd231cd86a142af94dd5c6bb1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.9.0"
+  leak_tracker:
+    dependency: transitive
+    description:
+      name: leak_tracker
+      sha256: c35baad643ba394b40aac41080300150a4f08fd0fd6a10378f8f7c6bc161acec
+      url: "https://pub.dev"
+    source: hosted
+    version: "10.0.8"
+  leak_tracker_flutter_testing:
+    dependency: transitive
+    description:
+      name: leak_tracker_flutter_testing
+      sha256: f8b613e7e6a13ec79cfdc0e97638fddb3ab848452eff057653abd3edba760573
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.9"
+  leak_tracker_testing:
+    dependency: transitive
+    description:
+      name: leak_tracker_testing
+      sha256: "6ba465d5d76e67ddf503e1161d1f4a6bc42306f9d66ca1e8f079a47290fb06d3"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.1"
+  lints:
+    dependency: transitive
+    description:
+      name: lints
+      sha256: c35bb79562d980e9a453fc715854e1ed39e24e7d0297a880ef54e17f9874a9d7
+      url: "https://pub.dev"
+    source: hosted
+    version: "5.1.1"
+  logging:
+    dependency: transitive
+    description:
+      name: logging
+      sha256: c8245ada5f1717ed44271ed1c26b8ce85ca3228fd2ffdb75468ab01979309d61
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.0"
+  lottie:
+    dependency: "direct main"
+    description:
+      name: lottie
+      sha256: "1f0ce68112072d66ea271a9841994fa8d16442e23d8cf8996c9fa74174e58b4e"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.0"
+  lucide_icons:
+    dependency: "direct main"
+    description:
+      name: lucide_icons
+      sha256: ad24d0fd65707e48add30bebada7d90bff2a1bba0a72d6e9b19d44246b0e83c4
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.257.0"
+  markdown:
+    dependency: transitive
+    description:
+      name: markdown
+      sha256: "935e23e1ff3bc02d390bad4d4be001208ee92cc217cb5b5a6c19bc14aaa318c1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.3.0"
+  matcher:
+    dependency: transitive
+    description:
+      name: matcher
+      sha256: dc58c723c3c24bf8d3e2d3ad3f2f9d7bd9cf43ec6feaa64181775e60190153f2
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.12.17"
+  material_color_utilities:
+    dependency: transitive
+    description:
+      name: material_color_utilities
+      sha256: f7142bb1154231d7ea5f96bc7bde4bda2a0945d2806bb11670e30b850d56bdec
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.11.1"
+  meta:
+    dependency: transitive
+    description:
+      name: meta
+      sha256: e3641ec5d63ebf0d9b41bd43201a66e3fc79a65db5f61fc181f04cd27aab950c
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.16.0"
+  mime:
+    dependency: transitive
+    description:
+      name: mime
+      sha256: "41a20518f0cb1256669420fdba0cd90d21561e560ac240f26ef8322e45bb7ed6"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.0"
+  octo_image:
+    dependency: transitive
+    description:
+      name: octo_image
+      sha256: "34faa6639a78c7e3cbe79be6f9f96535867e879748ade7d17c9b1ae7536293bd"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.0"
+  package_config:
+    dependency: transitive
+    description:
+      name: package_config
+      sha256: f096c55ebb7deb7e384101542bfba8c52696c1b56fca2eb62827989ef2353bbc
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.0"
+  path:
+    dependency: transitive
+    description:
+      name: path
+      sha256: "75cca69d1490965be98c73ceaea117e8a04dd21217b37b292c9ddbec0d955bc5"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.9.1"
+  path_provider:
+    dependency: transitive
+    description:
+      name: path_provider
+      sha256: "50c5dd5b6e1aaf6fb3a78b33f6aa3afca52bf903a8a5298f53101fdaee55bbcd"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.5"
+  path_provider_android:
+    dependency: transitive
+    description:
+      name: path_provider_android
+      sha256: "0ca7359dad67fd7063cb2892ab0c0737b2daafd807cf1acecd62374c8fae6c12"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.16"
+  path_provider_foundation:
+    dependency: transitive
+    description:
+      name: path_provider_foundation
+      sha256: "4843174df4d288f5e29185bd6e72a6fbdf5a4a4602717eed565497429f179942"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.1"
+  path_provider_linux:
+    dependency: transitive
+    description:
+      name: path_provider_linux
+      sha256: f7a1fe3a634fe7734c8d3f2766ad746ae2a2884abe22e241a8b301bf5cac3279
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.1"
+  path_provider_platform_interface:
+    dependency: transitive
+    description:
+      name: path_provider_platform_interface
+      sha256: "88f5779f72ba699763fa3a3b06aa4bf6de76c8e5de842cf6f29e2e06476c2334"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.2"
+  path_provider_windows:
+    dependency: transitive
+    description:
+      name: path_provider_windows
+      sha256: bd6f00dbd873bfb70d0761682da2b3a2c2fccc2b9e84c495821639601d81afe7
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.0"
+  pedantic:
+    dependency: transitive
+    description:
+      name: pedantic
+      sha256: "67fc27ed9639506c856c840ccce7594d0bdcd91bc8d53d6e52359449a1d50602"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.11.1"
+  platform:
+    dependency: transitive
+    description:
+      name: platform
+      sha256: "5d6b1b0036a5f331ebc77c850ebc8506cbc1e9416c27e59b439f917a902a4984"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.6"
+  plugin_platform_interface:
+    dependency: transitive
+    description:
+      name: plugin_platform_interface
+      sha256: "4820fbfdb9478b1ebae27888254d445073732dae3d6ea81f0b7e06d5dedc3f02"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.8"
+  pool:
+    dependency: transitive
+    description:
+      name: pool
+      sha256: "20fe868b6314b322ea036ba325e6fc0711a22948856475e2c2b6306e8ab39c2a"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.5.1"
+  pub_semver:
+    dependency: transitive
+    description:
+      name: pub_semver
+      sha256: "5bfcf68ca79ef689f8990d1160781b4bad40a3bd5e5218ad4076ddb7f4081585"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.0"
+  pubspec_parse:
+    dependency: transitive
+    description:
+      name: pubspec_parse
+      sha256: "0560ba233314abbed0a48a2956f7f022cce7c3e1e73df540277da7544cad4082"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.5.0"
+  rxdart:
+    dependency: transitive
+    description:
+      name: rxdart
+      sha256: "0c7c0cedd93788d996e33041ffecda924cc54389199cde4e6a34b440f50044cb"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.27.7"
+  shared_preferences:
+    dependency: "direct main"
+    description:
+      name: shared_preferences
+      sha256: "6e8bf70b7fef813df4e9a36f658ac46d107db4b4cfe1048b477d4e453a8159f5"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.3"
+  shared_preferences_android:
+    dependency: transitive
+    description:
+      name: shared_preferences_android
+      sha256: "20cbd561f743a342c76c151d6ddb93a9ce6005751e7aa458baad3858bfbfb6ac"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.10"
+  shared_preferences_foundation:
+    dependency: transitive
+    description:
+      name: shared_preferences_foundation
+      sha256: "6a52cfcdaeac77cad8c97b539ff688ccfc458c007b4db12be584fbe5c0e49e03"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.4"
+  shared_preferences_linux:
+    dependency: transitive
+    description:
+      name: shared_preferences_linux
+      sha256: "580abfd40f415611503cae30adf626e6656dfb2f0cee8f465ece7b6defb40f2f"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.1"
+  shared_preferences_platform_interface:
+    dependency: transitive
+    description:
+      name: shared_preferences_platform_interface
+      sha256: "57cbf196c486bc2cf1f02b85784932c6094376284b3ad5779d1b1c6c6a816b80"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.1"
+  shared_preferences_web:
+    dependency: transitive
+    description:
+      name: shared_preferences_web
+      sha256: c49bd060261c9a3f0ff445892695d6212ff603ef3115edbb448509d407600019
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.3"
+  shared_preferences_windows:
+    dependency: transitive
+    description:
+      name: shared_preferences_windows
+      sha256: "94ef0f72b2d71bc3e700e025db3710911bd51a71cefb65cc609dd0d9a982e3c1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.1"
+  shelf:
+    dependency: transitive
+    description:
+      name: shelf
+      sha256: e7dd780a7ffb623c57850b33f43309312fc863fb6aa3d276a754bb299839ef12
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.4.2"
+  shelf_web_socket:
+    dependency: transitive
+    description:
+      name: shelf_web_socket
+      sha256: cc36c297b52866d203dbf9332263c94becc2fe0ceaa9681d07b6ef9807023b67
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.0.1"
+  sky_engine:
+    dependency: transitive
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  source_gen:
+    dependency: transitive
+    description:
+      name: source_gen
+      sha256: "2d79738b6bbf38a43920e2b8d189e9a3ce6cc201f4b8fc76be5e4fe377b1c38d"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.2.6"
+  source_helper:
+    dependency: transitive
+    description:
+      name: source_helper
+      sha256: "3b67aade1d52416149c633ba1bb36df44d97c6b51830c2198e934e3fca87ca1f"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.3.3"
+  source_span:
+    dependency: transitive
+    description:
+      name: source_span
+      sha256: "254ee5351d6cb365c859e20ee823c3bb479bf4a293c22d17a9f1bf144ce86f7c"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.10.1"
+  speech_to_text:
+    dependency: "direct main"
+    description:
+      name: speech_to_text
+      sha256: "6cf8f284997490ebef1d68f8707bef57dcf083f43c0f915cc285428520bfe6be"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.0"
+  speech_to_text_platform_interface:
+    dependency: transitive
+    description:
+      name: speech_to_text_platform_interface
+      sha256: a1935847704e41ee468aad83181ddd2423d0833abe55d769c59afca07adb5114
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.0"
+  sprintf:
+    dependency: "direct main"
+    description:
+      name: sprintf
+      sha256: "1fc9ffe69d4df602376b52949af107d8f5703b77cda567c4d7d86a0693120f23"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.0"
+  sqflite:
+    dependency: transitive
+    description:
+      name: sqflite
+      sha256: e2297b1da52f127bc7a3da11439985d9b536f75070f3325e62ada69a5c585d03
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.2"
+  sqflite_android:
+    dependency: transitive
+    description:
+      name: sqflite_android
+      sha256: "2b3070c5fa881839f8b402ee4a39c1b4d561704d4ebbbcfb808a119bc2a1701b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.1"
+  sqflite_common:
+    dependency: transitive
+    description:
+      name: sqflite_common
+      sha256: "84731e8bfd8303a3389903e01fb2141b6e59b5973cacbb0929021df08dddbe8b"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.5.5"
+  sqflite_darwin:
+    dependency: transitive
+    description:
+      name: sqflite_darwin
+      sha256: "279832e5cde3fe99e8571879498c9211f3ca6391b0d818df4e17d9fff5c6ccb3"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.2"
+  sqflite_platform_interface:
+    dependency: transitive
+    description:
+      name: sqflite_platform_interface
+      sha256: "8dd4515c7bdcae0a785b0062859336de775e8c65db81ae33dd5445f35be61920"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.0"
+  stack_trace:
+    dependency: transitive
+    description:
+      name: stack_trace
+      sha256: "8b27215b45d22309b5cddda1aa2b19bdfec9df0e765f2de506401c071d38d1b1"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.12.1"
+  stream_channel:
+    dependency: transitive
+    description:
+      name: stream_channel
+      sha256: "969e04c80b8bcdf826f8f16579c7b14d780458bd97f56d107d3950fdbeef059d"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.4"
+  stream_transform:
+    dependency: transitive
+    description:
+      name: stream_transform
+      sha256: ad47125e588cfd37a9a7f86c7d6356dde8dfe89d071d293f80ca9e9273a33871
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.1"
+  string_scanner:
+    dependency: transitive
+    description:
+      name: string_scanner
+      sha256: "921cd31725b72fe181906c6a94d987c78e3b98c2e205b397ea399d4054872b43"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.4.1"
+  synchronized:
+    dependency: transitive
+    description:
+      name: synchronized
+      sha256: "0669c70faae6270521ee4f05bffd2919892d42d1276e6c495be80174b6bc0ef6"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.3.1"
+  term_glyph:
+    dependency: transitive
+    description:
+      name: term_glyph
+      sha256: "7f554798625ea768a7518313e58f83891c7f5024f88e46e7182a4558850a4b8e"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.2.2"
+  test_api:
+    dependency: transitive
+    description:
+      name: test_api
+      sha256: fb31f383e2ee25fbbfe06b40fe21e1e458d14080e3c67e7ba0acfde4df4e0bbd
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.7.4"
+  timing:
+    dependency: transitive
+    description:
+      name: timing
+      sha256: "62ee18aca144e4a9f29d212f5a4c6a053be252b895ab14b5821996cff4ed90fe"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.0.2"
+  translator:
+    dependency: "direct main"
+    description:
+      name: translator
+      sha256: "225ee22fc482736c593be5c232c0c5884b16d7cc42945c51ac73d9a0441dddcc"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.1.7"
+  typed_data:
+    dependency: transitive
+    description:
+      name: typed_data
+      sha256: f9049c039ebfeb4cf7a7104a675823cd72dba8297f264b6637062516699fa006
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.4.0"
+  universal_io:
+    dependency: transitive
+    description:
+      name: universal_io
+      sha256: "1722b2dcc462b4b2f3ee7d188dad008b6eb4c40bbd03a3de451d82c78bba9aad"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.2.2"
+  url_launcher:
+    dependency: "direct main"
+    description:
+      name: url_launcher
+      sha256: "9d06212b1362abc2f0f0d78e6f09f726608c74e3b9462e8368bb03314aa8d603"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.1"
+  url_launcher_android:
+    dependency: transitive
+    description:
+      name: url_launcher_android
+      sha256: "1d0eae19bd7606ef60fe69ef3b312a437a16549476c42321d5dc1506c9ca3bf4"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.15"
+  url_launcher_ios:
+    dependency: transitive
+    description:
+      name: url_launcher_ios
+      sha256: "7f2022359d4c099eea7df3fdf739f7d3d3b9faf3166fb1dd390775176e0b76cb"
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.3"
+  url_launcher_linux:
+    dependency: transitive
+    description:
+      name: url_launcher_linux
+      sha256: "4e9ba368772369e3e08f231d2301b4ef72b9ff87c31192ef471b380ef29a4935"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.2.1"
+  url_launcher_macos:
+    dependency: transitive
+    description:
+      name: url_launcher_macos
+      sha256: "17ba2000b847f334f16626a574c702b196723af2a289e7a93ffcb79acff855c2"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.2.2"
+  url_launcher_platform_interface:
+    dependency: transitive
+    description:
+      name: url_launcher_platform_interface
+      sha256: "552f8a1e663569be95a8190206a38187b531910283c3e982193e4f2733f01029"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.2"
+  url_launcher_web:
+    dependency: transitive
+    description:
+      name: url_launcher_web
+      sha256: "3ba963161bd0fe395917ba881d320b9c4f6dd3c4a233da62ab18a5025c85f1e9"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.4.0"
+  url_launcher_windows:
+    dependency: transitive
+    description:
+      name: url_launcher_windows
+      sha256: "3284b6d2ac454cf34f114e1d3319866fdd1e19cdc329999057e44ffe936cfa77"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.4"
+  uuid:
+    dependency: "direct main"
+    description:
+      name: uuid
+      sha256: "648e103079f7c64a36dc7d39369cabb358d377078a051d6ae2ad3aa539519313"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.7"
+  vector_math:
+    dependency: transitive
+    description:
+      name: vector_math
+      sha256: "80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.1.4"
+  video_player:
+    dependency: transitive
+    description:
+      name: video_player
+      sha256: "7d78f0cfaddc8c19d4cb2d3bebe1bfef11f2103b0a03e5398b303a1bf65eeb14"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.9.5"
+  video_player_android:
+    dependency: transitive
+    description:
+      name: video_player_android
+      sha256: ae7d4f1b41e3ac6d24dd9b9d5d6831b52d74a61bdd90a7a6262a33d8bb97c29a
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.8.2"
+  video_player_avfoundation:
+    dependency: transitive
+    description:
+      name: video_player_avfoundation
+      sha256: "84b4752745eeccb6e75865c9aab39b3d28eb27ba5726d352d45db8297fbd75bc"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.7.0"
+  video_player_platform_interface:
+    dependency: transitive
+    description:
+      name: video_player_platform_interface
+      sha256: df534476c341ab2c6a835078066fc681b8265048addd853a1e3c78740316a844
+      url: "https://pub.dev"
+    source: hosted
+    version: "6.3.0"
+  video_player_web:
+    dependency: transitive
+    description:
+      name: video_player_web
+      sha256: "3ef40ea6d72434edbfdba4624b90fd3a80a0740d260667d91e7ecd2d79e13476"
+      url: "https://pub.dev"
+    source: hosted
+    version: "2.3.4"
+  vm_service:
+    dependency: transitive
+    description:
+      name: vm_service
+      sha256: "0968250880a6c5fe7edc067ed0a13d4bae1577fe2771dcf3010d52c4a9d3ca14"
+      url: "https://pub.dev"
+    source: hosted
+    version: "14.3.1"
+  watcher:
+    dependency: transitive
+    description:
+      name: watcher
+      sha256: "69da27e49efa56a15f8afe8f4438c4ec02eff0a117df1b22ea4aad194fe1c104"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.1"
+  web:
+    dependency: transitive
+    description:
+      name: web
+      sha256: "868d88a33d8a87b18ffc05f9f030ba328ffefba92d6c127917a2ba740f9cfe4a"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.1"
+  web_socket:
+    dependency: transitive
+    description:
+      name: web_socket
+      sha256: "3c12d96c0c9a4eec095246debcea7b86c0324f22df69893d538fcc6f1b8cce83"
+      url: "https://pub.dev"
+    source: hosted
+    version: "0.1.6"
+  web_socket_channel:
+    dependency: transitive
+    description:
+      name: web_socket_channel
+      sha256: "0b8e2457400d8a859b7b2030786835a28a8e80836ef64402abef392ff4f1d0e5"
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.2"
+  xdg_directories:
+    dependency: transitive
+    description:
+      name: xdg_directories
+      sha256: "7a3f37b05d989967cdddcbb571f1ea834867ae2faa29725fd085180e0883aa15"
+      url: "https://pub.dev"
+    source: hosted
+    version: "1.1.0"
+  yaml:
+    dependency: transitive
+    description:
+      name: yaml
+      sha256: b9da305ac7c39faa3f030eccd175340f968459dae4af175130b3fc47e40d76ce
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.1.3"
+  youtube_player_flutter:
+    dependency: "direct main"
+    description:
+      name: youtube_player_flutter
+      sha256: "4d14aa47f9c84929b5400a87ade4dcfdab87a2ca2e0b18ecc2ef852b1440e123"
+      url: "https://pub.dev"
+    source: hosted
+    version: "9.1.1"
+sdks:
+  dart: ">=3.7.0 <4.0.0"
+  flutter: ">=3.27.0"
Index: pubspec.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pubspec.yaml b/pubspec.yaml
new file mode 100644
--- /dev/null	
+++ b/pubspec.yaml	
@@ -0,0 +1,126 @@
+name: finney
+description: "A financial app that helps you manage your money and make informed decisions about your finances."
+# The following line prevents the package from being accidentally published to
+# pub.dev using `flutter pub publish`. This is preferred for private packages.
+publish_to: 'none' # Remove this line if you wish to publish to pub.dev
+
+# The following defines the version and build number for your application.
+# A version number is three numbers separated by dots, like 1.2.43
+# followed by an optional build number separated by a +.
+# Both the version and the builder number may be overridden in flutter
+# build by specifying --build-name and --build-number, respectively.
+# In Android, build-name is used as versionName while build-number used as versionCode.
+# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
+# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
+# Read more about iOS versioning at
+# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
+# In Windows, build-name is used as the major, minor, and patch parts
+# of the product and file versions while build-number is used as the build suffix.
+version: 1.0.0+1
+
+environment:
+  sdk: ^3.7.0
+
+# Dependencies specify other packages that your package needs in order to work.
+# To automatically upgrade your package dependencies to the latest versions
+# consider running `flutter pub upgrade --major-versions`. Alternatively,
+# dependencies can be manually updated by changing the version numbers below to
+# the latest version available on pub.dev. To see which dependencies have newer
+# versions available, run `flutter pub outdated`.
+dependencies:
+  flutter:
+    sdk: flutter
+
+  flutter_localizations:
+    sdk: flutter
+
+  hive: ^2.2.3
+  hive_flutter: ^1.1.0
+  cloud_firestore: 5.6.5
+  cupertino_icons: ^1.0.8
+  firebase_core: ^3.12.1
+  firebase_auth: ^5.5.1
+  google_sign_in: ^6.3.0
+  flutter_gemini: ^3.0.0
+  image_picker: ^1.0.7
+  dash_chat_2: ^0.0.20
+  google_nav_bar: ^5.0.7
+  hive_generator: ^1.1.3
+  build_runner: ^2.1.11
+  hive_ui: ^1.0.14
+  fl_chart: ^0.65.0
+  intl: ^0.19.0
+  flutter_tts: ^4.2.2
+  flutter_slidable: ^3.0.1
+  url_launcher: ^6.2.5
+  speech_to_text: ^7.0.0
+  lottie: ^3.0.0
+  flutter_localization: ^0.3.2
+  sprintf: ^7.0.0
+  lucide_icons: ^0.257.0
+  youtube_player_flutter: ^9.1.1
+  flutter_inappwebview: ^6.0.0-beta.24
+  translator: 0.1.7
+  google_fonts: 4.0.4
+  shared_preferences: ^2.2.2
+  internet_connection_checker: ^1.0.0+1
+  uuid: ^3.0.7
+
+dev_dependencies:
+  flutter_test:
+    sdk: flutter
+
+
+
+
+  # The "flutter_lints" package below contains a set of recommended lints to
+  # encourage good coding practices. The lint set provided by the package is
+  # activated in the `analysis_options.yaml` file located at the root of your
+  # package. See that file for information about deactivating specific lint
+  # rules and activating additional ones.
+  flutter_lints: ^5.0.0
+
+# For information on the generic Dart part of this file, see the
+# following page: https://dart.dev/tools/pub/pubspec
+
+# The following section is specific to Flutter packages.
+flutter:
+  generate: true
+
+  # The following line ensures that the Material Icons font is
+  # included with your application, so that you can use the icons in
+  # the material Icons class.
+  uses-material-design: true
+
+  # To add assets to your application, add an assets section, like this:
+  assets:
+    - lib/shared/images/
+    - lib/shared/animations/
+  #   - images/a_dot_burr.jpeg
+  #   - images/a_dot_ham.jpeg
+
+  # An image asset can refer to one or more resolution-specific "variants", see
+  # https://flutter.dev/to/resolution-aware-images
+
+  # For details regarding adding assets from package dependencies, see
+  # https://flutter.dev/to/asset-from-package
+
+  # To add custom fonts to your application, add a fonts section here,
+  # in this "flutter" section. Each entry in this list should have a
+  # "family" key with the font family name, and a "fonts" key with a
+  # list giving the asset and other descriptors for the font. For
+  # example:
+  # fonts:
+  #   - family: Schyler
+  #     fonts:
+  #       - asset: fonts/Schyler-Regular.ttf
+  #       - asset: fonts/Schyler-Italic.ttf
+  #         style: italic
+  #   - family: Trajan Pro
+  #     fonts:
+  #       - asset: fonts/TrajanPro.ttf
+  #       - asset: fonts/TrajanPro_Bold.ttf
+  #         weight: 700
+  #
+  # For details regarding fonts from package dependencies,
+  # see https://flutter.dev/to/font-from-package
\ No newline at end of file
Index: firebase.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/firebase.json b/firebase.json
new file mode 100644
--- /dev/null	
+++ b/firebase.json	
@@ -0,0 +1,1 @@
+{"flutter":{"platforms":{"android":{"default":{"projectId":"finneyauth","appId":"1:560045957556:android:1f6142223ecb63968052e1","fileOutput":"android/app/google-services.json"}},"dart":{"lib/firebase_options.dart":{"projectId":"finneyauth","configurations":{"android":"1:560045957556:android:1f6142223ecb63968052e1","ios":"1:560045957556:ios:1c1fa9fffb22f1c18052e1","macos":"1:560045957556:ios:1c1fa9fffb22f1c18052e1","web":"1:560045957556:web:3f7944c50ad1a59a8052e1","windows":"1:560045957556:web:24526b8c2cde76448052e1"}}}}}}
\ No newline at end of file
Index: analysis_options.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/analysis_options.yaml b/analysis_options.yaml
new file mode 100644
--- /dev/null	
+++ b/analysis_options.yaml	
@@ -0,0 +1,31 @@
+# This file configures the analyzer, which statically analyzes Dart code to
+# check for errors, warnings, and lints.
+#
+# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
+# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
+# invoked from the command line by running `flutter analyze`.
+
+# The following line activates a set of recommended lints for Flutter apps,
+# packages, and plugins designed to encourage good coding practices.
+analyzer:
+  errors:
+    use_build_context_synchronously: ignore
+include: package:flutter_lints/flutter.yaml
+
+linter:
+  # The lint rules applied to this project can be customized in the
+  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
+  # included above or to enable additional rules. A list of all available lints
+  # and their documentation is published at https://dart.dev/lints.
+  #
+  # Instead of disabling a lint rule for the entire project in the
+  # section below, it can also be suppressed for a single line of code
+  # or a specific dart file by using the `// ignore: name_of_lint` and
+  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
+  # producing the lint.
+  rules:
+    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
+    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
+
+# Additional information about this file can be found at
+# https://dart.dev/guides/language/analysis-options
diff --git a/ios/Flutter/Generated.xcconfig b/ios/Flutter/Generated.xcconfig
new file mode 100644
diff --git a/ios/Flutter/flutter_export_environment.sh b/ios/Flutter/flutter_export_environment.sh
new file mode 100644
diff --git a/ios/RunnerTests/RunnerTests.swift b/ios/RunnerTests/RunnerTests.swift
new file mode 100644
diff --git a/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/lib/core/storage/cloud/firebase_options.dart b/lib/core/storage/cloud/firebase_options.dart
new file mode 100644
diff --git a/lib/pages/1-auth/widgets/square_tile.dart b/lib/pages/1-auth/widgets/square_tile.dart
new file mode 100644
diff --git a/lib/pages/1-auth/auth_page.dart b/lib/pages/1-auth/auth_page.dart
new file mode 100644
diff --git a/lib/pages/1-auth/login_or_register_page.dart b/lib/pages/1-auth/login_or_register_page.dart
new file mode 100644
diff --git a/lib/pages/8-report/report.dart b/lib/pages/8-report/report.dart
new file mode 100644
diff --git a/lib/pages/2-chatbot/services/llm_transactionparser.dart b/lib/pages/2-chatbot/services/llm_transactionparser.dart
new file mode 100644
diff --git a/lib/pages/9-setting/widgets/setting_option.dart b/lib/pages/9-setting/widgets/setting_option.dart
new file mode 100644
diff --git a/lib/pages/9-setting/widgets/dropdown_setting.dart b/lib/pages/9-setting/widgets/dropdown_setting.dart
new file mode 100644
diff --git a/lib/pages/9-setting/widgets/language_setting.dart b/lib/pages/9-setting/widgets/language_setting.dart
new file mode 100644
diff --git a/lib/pages/9-setting/currency_formatter.dart b/lib/pages/9-setting/currency_formatter.dart
new file mode 100644
diff --git a/lib/pages/7-insights/components/charts/pie/pie_category_item.dart b/lib/pages/7-insights/components/charts/pie/pie_category_item.dart
new file mode 100644
diff --git a/lib/pages/3-dashboard/widgets/option_button.dart b/lib/pages/3-dashboard/widgets/option_button.dart
new file mode 100644
diff --git a/lib/pages/3-dashboard/budget_reminder_page.dart b/lib/pages/3-dashboard/budget_reminder_page.dart
new file mode 100644
diff --git a/lib/shared/path/api_key.dart b/lib/shared/path/api_key.dart
new file mode 100644
diff --git a/lib/shared/path/app_animations.dart b/lib/shared/path/app_animations.dart
new file mode 100644
diff --git a/lib/shared/theme/app_color.dart b/lib/shared/theme/app_color.dart
new file mode 100644
diff --git a/linux/runner/main.cc b/linux/runner/main.cc
new file mode 100644
diff --git a/linux/runner/my_application.h b/linux/runner/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/lib/image_picker_linux.dart b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/lib/image_picker_linux.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/test/image_picker_linux_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/test/image_picker_linux_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/test/image_picker_linux_test.mocks.dart b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/test/image_picker_linux_test.mocks.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/AUTHORS b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/AUTHORS
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/lib/main.dart b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/lib/main.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/flutter/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/flutter/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/flutter/generated_plugins.cmake b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/main.cc b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/my_application.h b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/my_application.cc b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/linux/my_application.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/README.md b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/example/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/LICENSE b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/LICENSE
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/README.md b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/CHANGELOG.md b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/CHANGELOG.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/image_picker_linux/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/lib/src/messages.g.dart b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/lib/src/messages.g.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/lib/url_launcher_linux.dart b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/lib/url_launcher_linux.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/test/url_launcher_linux_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/test/url_launcher_linux_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/test/url_launcher_linux_test.cc b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/test/url_launcher_linux_test.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include/url_launcher_linux/url_launcher_plugin.h b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/include/url_launcher_linux/url_launcher_plugin.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/messages.g.h b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/messages.g.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/messages.g.cc b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/messages.g.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/url_launcher_plugin.cc b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/url_launcher_plugin.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/url_launcher_plugin_private.h b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/linux/url_launcher_plugin_private.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/AUTHORS b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/AUTHORS
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/lib/main.dart b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/lib/main.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/flutter/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/flutter/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/flutter/generated_plugins.cmake b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/main.cc b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/my_application.h b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/my_application.cc b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/linux/my_application.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/README.md b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/test_driver/integration_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/test_driver/integration_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/integration_test/url_launcher_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/example/integration_test/url_launcher_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/LICENSE b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/LICENSE
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/pigeons/copyright.txt b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/pigeons/copyright.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/pigeons/messages.dart b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/pigeons/messages.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/README.md b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/CHANGELOG.md b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/CHANGELOG.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/url_launcher_linux/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/lib/src/messages.g.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/lib/src/messages.g.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/lib/file_selector_linux.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/lib/file_selector_linux.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/test/file_selector_linux_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/test/file_selector_linux_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/test/test_main.cc b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/test/test_main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/test/file_selector_plugin_test.cc b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/test/file_selector_plugin_test.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/include/file_selector_linux/file_selector_plugin.h b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/include/file_selector_linux/file_selector_plugin.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/messages.g.h b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/messages.g.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/messages.g.cc b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/messages.g.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/file_selector_plugin.cc b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/file_selector_plugin.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/file_selector_plugin_private.h b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/linux/file_selector_plugin_private.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/AUTHORS b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/AUTHORS
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/main.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/main.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/home_page.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/home_page.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/open_text_page.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/open_text_page.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/save_text_page.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/save_text_page.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/open_image_page.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/open_image_page.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/get_directory_page.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/get_directory_page.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/open_multiple_images_page.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/open_multiple_images_page.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/get_multiple_directories_page.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/lib/get_multiple_directories_page.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/flutter/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/flutter/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/flutter/generated_plugins.cmake b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/main.cc b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/my_application.h b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/my_application.cc b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/linux/my_application.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/README.md b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/example/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/LICENSE b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/LICENSE
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/pigeons/copyright.txt b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/pigeons/copyright.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/pigeons/messages.dart b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/pigeons/messages.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/README.md b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/CHANGELOG.md b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/CHANGELOG.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/file_selector_linux/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/get_application_id.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/get_application_id.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/path_provider_linux.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/path_provider_linux.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/get_application_id_real.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/get_application_id_real.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/get_application_id_stub.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/src/get_application_id_stub.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/path_provider_linux.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/lib/path_provider_linux.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/test/get_application_id_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/test/get_application_id_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/test/path_provider_linux_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/test/path_provider_linux_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/AUTHORS b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/AUTHORS
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/lib/main.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/lib/main.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/flutter/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/flutter/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/flutter/generated_plugins.cmake b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/main.cc b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/my_application.h b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/my_application.cc b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/linux/my_application.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/README.md b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/test_driver/integration_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/test_driver/integration_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/integration_test/path_provider_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/example/integration_test/path_provider_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/LICENSE b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/LICENSE
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/README.md b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/CHANGELOG.md b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/CHANGELOG.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/path_provider_linux/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.m b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.m
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/SwiftFlutterLocalizationPlugin.swift b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/SwiftFlutterLocalizationPlugin.swift
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/flutter_localization.podspec b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/flutter_localization.podspec
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/data/language_name.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/data/language_name.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/map_locale.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/map_locale.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/ensure_initialized_exception.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/ensure_initialized_exception.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/string_util.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/string_util.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/preference_util.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/preference_util.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/locale_extension.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/locale_extension.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/string_extension.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/string_extension.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/context_extension.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/context_extension.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_delegate.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_delegate.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_translator.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_translator.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_web.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_web.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_method_channel.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_method_channel.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_platform_interface.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_platform_interface.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/include/flutter_localization/flutter_localization_plugin.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/include/flutter_localization/flutter_localization_plugin.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/flutter_localization_plugin.cc b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/flutter_localization_plugin.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/Classes/FlutterLocalizationPlugin.swift b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/Classes/FlutterLocalizationPlugin.swift
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/flutter_localization.podspec b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/flutter_localization.podspec
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/kotlin/com/mastertipsy/flutter_localization/FlutterLocalizationPlugin.kt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/kotlin/com/mastertipsy/flutter_localization/FlutterLocalizationPlugin.kt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/AndroidManifest.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/gradle/wrapper/gradle-wrapper.properties b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/build.gradle b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/build.gradle
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/settings.gradle b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/settings.gradle
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/Main.storyboard b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/Main.storyboard
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/LaunchScreen.storyboard b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/LaunchScreen.storyboard
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Info.plist b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Info.plist
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/AppDelegate.swift b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/AppDelegate.swift
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Runner-Bridging-Header.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Runner-Bridging-Header.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Debug.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Debug.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Release.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Release.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/AppFrameworkInfo.plist b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/AppFrameworkInfo.plist
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Podfile b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Podfile
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/RunnerTests/RunnerTests.swift b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/RunnerTests/RunnerTests.swift
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.pbxproj b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/contents.xcworkspacedata b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/lib/main.dart b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/lib/main.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/index.html b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/index.html
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/manifest.json b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/manifest.json
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/main.cc b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.cc b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/flutter/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/flutter/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/main.cc b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.cc b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Debug.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Debug.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/AppInfo.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/AppInfo.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Release.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Release.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Warnings.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Warnings.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Base.lproj/MainMenu.xib b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Base.lproj/MainMenu.xib
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Info.plist b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Info.plist
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/AppDelegate.swift b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/AppDelegate.swift
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Release.entitlements b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Release.entitlements
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/MainFlutterWindow.swift b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/MainFlutterWindow.swift
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/DebugProfile.entitlements b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/DebugProfile.entitlements
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Debug.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Debug.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Release.xcconfig b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Release.xcconfig
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Podfile b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Podfile
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/RunnerTests/RunnerTests.swift b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/RunnerTests/RunnerTests.swift
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.pbxproj b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/contents.xcworkspacedata b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values/styles.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values/styles.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable/launch_background.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable/launch_background.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable-v21/launch_background.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable-v21/launch_background.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values-night/styles.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values-night/styles.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/kotlin/com/mastertipsy/flutter_localization_example/MainActivity.kt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/kotlin/com/mastertipsy/flutter_localization_example/MainActivity.kt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/AndroidManifest.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/debug/AndroidManifest.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/debug/AndroidManifest.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/profile/AndroidManifest.xml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/profile/AndroidManifest.xml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/build.gradle b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/build.gradle
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle/wrapper/gradle-wrapper.properties b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/build.gradle b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/build.gradle
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/settings.gradle b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/settings.gradle
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle.properties b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle.properties
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/main.cpp b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/main.cpp
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/Runner.rc b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.cpp b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resource.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resource.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.cpp b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/runner.exe.manifest b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/flutter/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/README.md b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/analysis_options.yaml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/analysis_options.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/LICENSE b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/LICENSE
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/include/flutter_localization/flutter_localization_plugin_c_api.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/include/flutter_localization/flutter_localization_plugin_c_api.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.h b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.cpp b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.cpp
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin_c_api.cpp b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin_c_api.cpp
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/README.md b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/CHANGELOG.md b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/CHANGELOG.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/analysis_options.yaml b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/analysis_options.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/lib/shared_preferences_linux.dart b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/lib/shared_preferences_linux.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/test/fake_path_provider_linux.dart b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/test/fake_path_provider_linux.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/test/shared_preferences_linux_async_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/test/shared_preferences_linux_async_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/test/legacy_shared_preferences_linux_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/test/legacy_shared_preferences_linux_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/AUTHORS b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/AUTHORS
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/lib/main.dart b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/lib/main.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/flutter/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/flutter/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/flutter/generated_plugins.cmake b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/main.cc b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/main.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/CMakeLists.txt b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/CMakeLists.txt
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/my_application.h b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/my_application.h
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/my_application.cc b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/linux/my_application.cc
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/README.md b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/test_driver/integration_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/test_driver/integration_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/integration_test/shared_preferences_test.dart b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/example/integration_test/shared_preferences_test.dart
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/LICENSE b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/LICENSE
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/README.md b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/README.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/CHANGELOG.md b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/CHANGELOG.md
new file mode 100644
diff --git a/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/pubspec.yaml b/linux/flutter/ephemeral/.plugin_symlinks/shared_preferences_linux/pubspec.yaml
new file mode 100644
diff --git a/linux/flutter/generated_plugin_registrant.h b/linux/flutter/generated_plugin_registrant.h
new file mode 100644
diff --git a/macos/Runner/Configs/Debug.xcconfig b/macos/Runner/Configs/Debug.xcconfig
new file mode 100644
diff --git a/macos/Runner/Configs/Release.xcconfig b/macos/Runner/Configs/Release.xcconfig
new file mode 100644
diff --git a/macos/Runner/Info.plist b/macos/Runner/Info.plist
new file mode 100644
diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/macos/Runner/AppDelegate.swift b/macos/Runner/AppDelegate.swift
new file mode 100644
diff --git a/macos/Runner/Release.entitlements b/macos/Runner/Release.entitlements
new file mode 100644
diff --git a/macos/Runner/MainFlutterWindow.swift b/macos/Runner/MainFlutterWindow.swift
new file mode 100644
diff --git a/macos/Runner/DebugProfile.entitlements b/macos/Runner/DebugProfile.entitlements
new file mode 100644
diff --git a/macos/Flutter/ephemeral/Flutter-Generated.xcconfig b/macos/Flutter/ephemeral/Flutter-Generated.xcconfig
new file mode 100644
diff --git a/macos/Flutter/ephemeral/flutter_export_environment.sh b/macos/Flutter/ephemeral/flutter_export_environment.sh
new file mode 100644
diff --git a/macos/Flutter/Flutter-Debug.xcconfig b/macos/Flutter/Flutter-Debug.xcconfig
new file mode 100644
diff --git a/macos/Flutter/Flutter-Release.xcconfig b/macos/Flutter/Flutter-Release.xcconfig
new file mode 100644
diff --git a/macos/RunnerTests/RunnerTests.swift b/macos/RunnerTests/RunnerTests.swift
new file mode 100644
diff --git a/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/macos/Runner.xcworkspace/contents.xcworkspacedata b/macos/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/android/app/src/main/res/values/styles.xml b/android/app/src/main/res/values/styles.xml
new file mode 100644
diff --git a/android/app/src/main/res/drawable/launch_background.xml b/android/app/src/main/res/drawable/launch_background.xml
new file mode 100644
diff --git a/android/app/src/main/res/drawable-v21/launch_background.xml b/android/app/src/main/res/drawable-v21/launch_background.xml
new file mode 100644
diff --git a/android/app/src/main/res/values-night/styles.xml b/android/app/src/main/res/values-night/styles.xml
new file mode 100644
diff --git a/android/app/src/main/kotlin/com/example/finney/MainActivity.kt b/android/app/src/main/kotlin/com/example/finney/MainActivity.kt
new file mode 100644
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/android/app/src/debug/AndroidManifest.xml b/android/app/src/debug/AndroidManifest.xml
new file mode 100644
diff --git a/android/app/src/profile/AndroidManifest.xml b/android/app/src/profile/AndroidManifest.xml
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/query/client-agp/cache-v2 b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/query/client-agp/cache-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/query/client-agp/codemodel-v2 b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/query/client-agp/codemodel-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/query/client-agp/cmakeFiles-v1 b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/query/client-agp/cmakeFiles-v1
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/cache-v2-5cc2863ba7bf6e80bff4.json b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/cache-v2-5cc2863ba7bf6e80bff4.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/index-2025-05-26T20-47-04-0853.json b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/index-2025-05-26T20-47-04-0853.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/codemodel-v2-9aeda9af003300954475.json b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/codemodel-v2-9aeda9af003300954475.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/cmakeFiles-v1-ecb377f753385facd4f8.json b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/cmakeFiles-v1-ecb377f753385facd4f8.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json b/android/app/.cxx/Debug/63r183e1/x86/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/rules.ninja b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/rules.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/CMakeOutput.log b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/CMakeOutput.log
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/cmake.check_cache b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/cmake.check_cache
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/TargetDirectories.txt b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/TargetDirectories.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/build.ninja b/android/app/.cxx/Debug/63r183e1/x86/build.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeCache.txt b/android/app/.cxx/Debug/63r183e1/x86/CMakeCache.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/prefab_config.json b/android/app/.cxx/Debug/63r183e1/x86/prefab_config.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/cmake_install.cmake b/android/app/.cxx/Debug/63r183e1/x86/cmake_install.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/build_file_index.txt b/android/app/.cxx/Debug/63r183e1/x86/build_file_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/symbol_folder_index.txt b/android/app/.cxx/Debug/63r183e1/x86/symbol_folder_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/android_gradle_build.json b/android/app/.cxx/Debug/63r183e1/x86/android_gradle_build.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/additional_project_files.txt b/android/app/.cxx/Debug/63r183e1/x86/additional_project_files.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/android_gradle_build_mini.json b/android/app/.cxx/Debug/63r183e1/x86/android_gradle_build_mini.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86/metadata_generation_command.txt b/android/app/.cxx/Debug/63r183e1/x86/metadata_generation_command.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/query/client-agp/cache-v2 b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/query/client-agp/cache-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/query/client-agp/codemodel-v2 b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/query/client-agp/codemodel-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/query/client-agp/cmakeFiles-v1 b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/query/client-agp/cmakeFiles-v1
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/cache-v2-e13c322453b5d6ab4dd1.json b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/cache-v2-e13c322453b5d6ab4dd1.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/index-2025-05-26T20-47-06-0526.json b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/index-2025-05-26T20-47-06-0526.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/codemodel-v2-82ea07092adeba14f645.json b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/codemodel-v2-82ea07092adeba14f645.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/cmakeFiles-v1-739004d50c069c68c397.json b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/cmakeFiles-v1-739004d50c069c68c397.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json b/android/app/.cxx/Debug/63r183e1/x86_64/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/rules.ninja b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/rules.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/CMakeOutput.log b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/CMakeOutput.log
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/cmake.check_cache b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/cmake.check_cache
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/TargetDirectories.txt b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/TargetDirectories.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/build.ninja b/android/app/.cxx/Debug/63r183e1/x86_64/build.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeCache.txt b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeCache.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/prefab_config.json b/android/app/.cxx/Debug/63r183e1/x86_64/prefab_config.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/cmake_install.cmake b/android/app/.cxx/Debug/63r183e1/x86_64/cmake_install.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/build_file_index.txt b/android/app/.cxx/Debug/63r183e1/x86_64/build_file_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/symbol_folder_index.txt b/android/app/.cxx/Debug/63r183e1/x86_64/symbol_folder_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/android_gradle_build.json b/android/app/.cxx/Debug/63r183e1/x86_64/android_gradle_build.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/additional_project_files.txt b/android/app/.cxx/Debug/63r183e1/x86_64/additional_project_files.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/android_gradle_build_mini.json b/android/app/.cxx/Debug/63r183e1/x86_64/android_gradle_build_mini.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/metadata_generation_command.txt b/android/app/.cxx/Debug/63r183e1/x86_64/metadata_generation_command.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/query/client-agp/cache-v2 b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/query/client-agp/cache-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/query/client-agp/codemodel-v2 b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/query/client-agp/codemodel-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/query/client-agp/cmakeFiles-v1 b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/query/client-agp/cmakeFiles-v1
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/cache-v2-db7ec36c6e8d6bb043e1.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/cache-v2-db7ec36c6e8d6bb043e1.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/index-2025-05-26T20-46-58-0061.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/index-2025-05-26T20-46-58-0061.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/codemodel-v2-a8eede9fda60d56cac10.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/codemodel-v2-a8eede9fda60d56cac10.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/cmakeFiles-v1-5a8c569748d1c1e9ad8a.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/cmakeFiles-v1-5a8c569748d1c1e9ad8a.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/rules.ninja b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/rules.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/CMakeOutput.log b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/CMakeOutput.log
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/cmake.check_cache b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/cmake.check_cache
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/TargetDirectories.txt b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/TargetDirectories.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/build.ninja b/android/app/.cxx/Debug/63r183e1/arm64-v8a/build.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeCache.txt b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeCache.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/prefab_config.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/prefab_config.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/cmake_install.cmake b/android/app/.cxx/Debug/63r183e1/arm64-v8a/cmake_install.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/build_file_index.txt b/android/app/.cxx/Debug/63r183e1/arm64-v8a/build_file_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/symbol_folder_index.txt b/android/app/.cxx/Debug/63r183e1/arm64-v8a/symbol_folder_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/android_gradle_build.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/android_gradle_build.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/additional_project_files.txt b/android/app/.cxx/Debug/63r183e1/arm64-v8a/additional_project_files.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/android_gradle_build_mini.json b/android/app/.cxx/Debug/63r183e1/arm64-v8a/android_gradle_build_mini.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/metadata_generation_command.txt b/android/app/.cxx/Debug/63r183e1/arm64-v8a/metadata_generation_command.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/query/client-agp/cache-v2 b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/query/client-agp/cache-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/query/client-agp/codemodel-v2 b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/query/client-agp/codemodel-v2
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/query/client-agp/cmakeFiles-v1 b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/query/client-agp/cmakeFiles-v1
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/cache-v2-5f3476a099fede443d68.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/cache-v2-5f3476a099fede443d68.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/index-2025-05-26T20-47-01-0671.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/index-2025-05-26T20-47-01-0671.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/codemodel-v2-3190b532479c6aa44554.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/codemodel-v2-3190b532479c6aa44554.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/cmakeFiles-v1-918ab9a3433b7fc819a9.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/cmakeFiles-v1-918ab9a3433b7fc819a9.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/.cmake/api/v1/reply/directory-.-Debug-d0094a50bb2071803777.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/rules.ninja b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/rules.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/CMakeOutput.log b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/CMakeOutput.log
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/cmake.check_cache b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/cmake.check_cache
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.c
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeSystem.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeCCompiler.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/TargetDirectories.txt b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/TargetDirectories.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/build.ninja b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/build.ninja
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeCache.txt b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeCache.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/prefab_config.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/prefab_config.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/cmake_install.cmake b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/cmake_install.cmake
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/build_file_index.txt b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/build_file_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/symbol_folder_index.txt b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/symbol_folder_index.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/android_gradle_build.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/android_gradle_build.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/additional_project_files.txt b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/additional_project_files.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/android_gradle_build_mini.json b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/android_gradle_build_mini.json
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/metadata_generation_command.txt b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/metadata_generation_command.txt
new file mode 100644
diff --git a/android/app/.cxx/Debug/63r183e1/hash_key.txt b/android/app/.cxx/Debug/63r183e1/hash_key.txt
new file mode 100644
diff --git a/android/app/build.gradle.kts b/android/app/build.gradle.kts
new file mode 100644
diff --git a/android/app/google-services.json b/android/app/google-services.json
new file mode 100644
diff --git a/android/gradle/wrapper/gradle-wrapper.properties b/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/android/.gradle/vcs-1/gc.properties b/android/.gradle/vcs-1/gc.properties
new file mode 100644
diff --git a/android/.gradle/8.10.2/gc.properties b/android/.gradle/8.10.2/gc.properties
new file mode 100644
diff --git a/android/.gradle/8.10.2/dependencies-accessors/gc.properties b/android/.gradle/8.10.2/dependencies-accessors/gc.properties
new file mode 100644
diff --git a/android/.gradle/buildOutputCleanup/cache.properties b/android/.gradle/buildOutputCleanup/cache.properties
new file mode 100644
diff --git a/android/gradlew.bat b/android/gradlew.bat
new file mode 100644
diff --git a/android/build.gradle.kts b/android/build.gradle.kts
new file mode 100644
diff --git a/android/local.properties b/android/local.properties
new file mode 100644
diff --git a/android/gradle.properties b/android/gradle.properties
new file mode 100644
diff --git a/flutter b/flutter
new file mode 100644
diff --git a/windows/runner/utils.h b/windows/runner/utils.h
new file mode 100644
diff --git a/windows/runner/utils.cpp b/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/runner/resource.h b/windows/runner/resource.h
new file mode 100644
diff --git a/windows/runner/win32_window.h b/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/runner/flutter_window.h b/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/runner/flutter_window.cpp b/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/runner/runner.exe.manifest b/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/AudioModes.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/AudioModes.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/FlutterTtsPlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/FlutterTtsPlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/FlutterTtsPlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/FlutterTtsPlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/AudioCategory.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/AudioCategory.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/AudioCategoryOptions.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/AudioCategoryOptions.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/SwiftFlutterTtsPlugin.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/Classes/SwiftFlutterTtsPlugin.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/flutter_tts.podspec b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/ios/flutter_tts.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/lib/flutter_tts.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/lib/flutter_tts.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/lib/interop_types.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/lib/interop_types.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/lib/flutter_tts_web.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/lib/flutter_tts_web.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/macos/Classes/FlutterTtsPlugin.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/macos/Classes/FlutterTtsPlugin.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/macos/flutter_tts.podspec b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/macos/flutter_tts.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/src/main/kotlin/com/tundralabs/fluttertts/FlutterTtsPlugin.kt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/src/main/kotlin/com/tundralabs/fluttertts/FlutterTtsPlugin.kt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Base.lproj/Main.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Base.lproj/Main.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Base.lproj/LaunchScreen.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Base.lproj/LaunchScreen.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Runner-Bridging-Header.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Runner-Bridging-Header.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Flutter/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Flutter/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Flutter/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Flutter/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Flutter/AppFrameworkInfo.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Flutter/AppFrameworkInfo.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/index.html b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/index.html
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/manifest.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/manifest.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/test/widget_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/test/widget_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/AppInfo.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/AppInfo.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/Warnings.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Configs/Warnings.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Base.lproj/MainMenu.xib b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Base.lproj/MainMenu.xib
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Release.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Release.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/MainFlutterWindow.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/MainFlutterWindow.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/DebugProfile.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/DebugProfile.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Flutter/Flutter-Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Flutter/Flutter-Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Flutter/Flutter-Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Flutter/Flutter-Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/flutter/flutter_windows.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/flutter/flutter_windows.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/appxmanifest.in b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/appxmanifest.in
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/CMakeSettings.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/CMakeSettings.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/flutter_frameworkview.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/flutter_frameworkview.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/project_version b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/project_version
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/values/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/values/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/drawable/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/drawable/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/debug/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/debug/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/profile/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/profile/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/settings_aar.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/settings_aar.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/windows/include/flutter_tts/flutter_tts_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/windows/include/flutter_tts/flutter_tts_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/windows/flutter_tts_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/windows/flutter_tts_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/CODE_OF_CONDUCT.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/CODE_OF_CONDUCT.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Public/CustomPigeonHeader.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Public/CustomPigeonHeader.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Public/FLTFirebaseAuthPlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Public/FLTFirebaseAuthPlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Public/firebase_auth_messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Public/firebase_auth_messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/PigeonParser.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/PigeonParser.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/FLTIdTokenChannelStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/FLTIdTokenChannelStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/FLTAuthStateChannelStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/FLTAuthStateChannelStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/FLTPhoneNumberVerificationStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/include/Private/FLTPhoneNumberVerificationStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/PigeonParser.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/PigeonParser.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTFirebaseAuthPlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTFirebaseAuthPlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/firebase_auth_messages.g.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/firebase_auth_messages.g.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTIdTokenChannelStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTIdTokenChannelStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTAuthStateChannelStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTAuthStateChannelStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTPhoneNumberVerificationStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Sources/firebase_auth/FLTPhoneNumberVerificationStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Package.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth/Package.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth.podspec b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/firebase_auth.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/generated_firebase_sdk_version.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/ios/generated_firebase_sdk_version.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/user.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/user.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/multi_factor.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/multi_factor.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/firebase_auth.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/firebase_auth.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/user_credential.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/user_credential.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/recaptcha_verifier.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/recaptcha_verifier.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/confirmation_result.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/src/confirmation_result.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/firebase_auth.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/lib/firebase_auth.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/test/mock.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/test/mock.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/test/user_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/test/user_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/test/firebase_auth_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/test/firebase_auth_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Public/CustomPigeonHeader.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Public/CustomPigeonHeader.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Public/FLTFirebaseAuthPlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Public/FLTFirebaseAuthPlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Public/firebase_auth_messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Public/firebase_auth_messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/PigeonParser.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/PigeonParser.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/FLTIdTokenChannelStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/FLTIdTokenChannelStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/FLTAuthStateChannelStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/FLTAuthStateChannelStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/FLTPhoneNumberVerificationStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/include/Private/FLTPhoneNumberVerificationStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/PigeonParser.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/PigeonParser.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTFirebaseAuthPlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTFirebaseAuthPlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/firebase_auth_messages.g.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/firebase_auth_messages.g.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTIdTokenChannelStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTIdTokenChannelStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTAuthStateChannelStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTAuthStateChannelStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTPhoneNumberVerificationStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Sources/firebase_auth/FLTPhoneNumberVerificationStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Package.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth/Package.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth.podspec b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/macos/firebase_auth.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/Constants.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/Constants.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/PigeonParser.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/PigeonParser.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthUser.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthUser.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthPlugin.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthPlugin.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseTotpSecret.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseTotpSecret.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseMultiFactor.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseMultiFactor.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/IdTokenChannelStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/IdTokenChannelStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthRegistrar.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthRegistrar.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/GeneratedAndroidFirebaseAuth.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/GeneratedAndroidFirebaseAuth.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/AuthStateChannelStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/AuthStateChannelStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseTotpMultiFactor.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseTotpMultiFactor.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthPluginException.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/FlutterFirebaseAuthPluginException.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/PhoneNumberVerificationStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/java/io/flutter/plugins/firebase/auth/PhoneNumberVerificationStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/user-agent.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/android/user-agent.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/main.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/main.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Base.lproj/Main.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Base.lproj/Main.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Base.lproj/LaunchScreen.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Base.lproj/LaunchScreen.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/AppDelegate.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/AppDelegate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/AppDelegate.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/AppDelegate.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Runner.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Runner.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/GoogleService-Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/GoogleService-Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Runner-Bridging-Header.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Runner-Bridging-Header.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Flutter/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Flutter/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Flutter/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Flutter/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Flutter/AppFrameworkInfo.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Flutter/AppFrameworkInfo.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/firebase_app_id_file.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/firebase_app_id_file.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/auth.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/auth.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/profile.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/profile.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/firebase_options.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/lib/firebase_options.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/index.html b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/index.html
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/manifest.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/manifest.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/AppInfo.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/AppInfo.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/Warnings.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Configs/Warnings.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Base.lproj/MainMenu.xib b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Base.lproj/MainMenu.xib
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Release.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Release.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/MainFlutterWindow.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/MainFlutterWindow.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/GoogleService-Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/GoogleService-Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/DebugProfile.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/DebugProfile.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Flutter/Flutter-Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Flutter/Flutter-Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Flutter/Flutter-Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Flutter/Flutter-Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/firebase_app_id_file.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/firebase_app_id_file.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/values/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/values/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/drawable/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/drawable/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/drawable-v21/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/drawable-v21/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/values-night/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/values-night/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/kotlin/io/flutter/plugins/firebase/auth/example/MainActivity.kt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/kotlin/io/flutter/plugins/firebase/auth/example/MainActivity.kt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/debug/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/debug/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/profile/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/profile/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/google-services.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/google-services.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/test/firebase_auth_plugin_test.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/test/firebase_auth_plugin_test.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/include/firebase_auth/firebase_auth_plugin_c_api.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/include/firebase_auth/firebase_auth_plugin_c_api.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/messages.g.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/messages.g.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/plugin_version.h.in b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/plugin_version.h.in
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/firebase_auth_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/firebase_auth_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/firebase_auth_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/firebase_auth_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/firebase_auth_plugin_c_api.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/windows/firebase_auth_plugin_c_api.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/README.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/dummy.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/dummy.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/dummy.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/dummy.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebaseCorePlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebaseCorePlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePluginRegistry.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePluginRegistry.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/messages.g.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/messages.g.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/FLTFirebasePlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/FLTFirebasePlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/FLTFirebaseCorePlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/FLTFirebaseCorePlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/FLTFirebasePluginRegistry.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Sources/firebase_core/FLTFirebasePluginRegistry.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Package.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core/Package.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core.podspec b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_core.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_sdk_version.rb b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/ios/firebase_sdk_version.rb
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/src/firebase.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/src/firebase.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/src/firebase_app.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/src/firebase_app.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/src/port_mapping.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/src/port_mapping.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/firebase_core.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/lib/firebase_core.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/test/firebase_core_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/test/firebase_core_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/dummy.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/dummy.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/dummy.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/dummy.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebaseCorePlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebaseCorePlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePluginRegistry.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/include/firebase_core/FLTFirebasePluginRegistry.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/messages.g.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/messages.g.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/FLTFirebasePlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/FLTFirebasePlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/FLTFirebaseCorePlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/FLTFirebaseCorePlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/FLTFirebasePluginRegistry.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Sources/firebase_core/FLTFirebasePluginRegistry.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Package.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core/Package.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core.podspec b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/macos/firebase_core.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebasePlugin.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebasePlugin.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebaseCorePlugin.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebaseCorePlugin.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebaseCoreRegistrar.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebaseCoreRegistrar.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/GeneratedAndroidFirebaseCore.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/GeneratedAndroidFirebaseCore.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry.java b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/java/io/flutter/plugins/firebase/core/FlutterFirebasePluginRegistry.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/user-agent.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/android/user-agent.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/main.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/main.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Base.lproj/Main.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Base.lproj/Main.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Base.lproj/LaunchScreen.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Base.lproj/LaunchScreen.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/AppDelegate.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/AppDelegate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/AppDelegate.m b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/AppDelegate.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Flutter/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Flutter/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Flutter/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Flutter/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Flutter/AppFrameworkInfo.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Flutter/AppFrameworkInfo.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/lib/firebase_options.dart b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/lib/firebase_options.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/index.html b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/index.html
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/manifest.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/manifest.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/AppInfo.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/AppInfo.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/Warnings.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Configs/Warnings.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Base.lproj/MainMenu.xib b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Base.lproj/MainMenu.xib
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Release.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Release.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/MainFlutterWindow.swift b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/MainFlutterWindow.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/DebugProfile.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/DebugProfile.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Flutter/Flutter-Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Flutter/Flutter-Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Flutter/Flutter-Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Flutter/Flutter-Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/values/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/values/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/drawable/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/drawable/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/drawable-v21/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/drawable-v21/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/values-night/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/values-night/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/kotlin/io/flutter/plugins/firebasecoreexample/MainActivity.kt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/kotlin/io/flutter/plugins/firebasecoreexample/MainActivity.kt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/debug/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/debug/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/profile/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/profile/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/google-services.json b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/google-services.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/include/firebase_core/firebase_core_plugin_c_api.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/include/firebase_core/firebase_core_plugin_c_api.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/messages.g.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/messages.g.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/plugin_version.h.in b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/plugin_version.h.in
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/firebase_core_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/firebase_core_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/firebase_core_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/firebase_core_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/firebase_core_plugin_c_api.cpp b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/windows/firebase_core_plugin_c_api.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/README.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FirestoreMessages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FirestoreMessages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FLTFirebaseFirestorePlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FLTFirebaseFirestorePlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/CustomPigeonHeaderFirestore.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/CustomPigeonHeaderFirestore.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FirestorePigeonParser.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FirestorePigeonParser.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreUtils.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreUtils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreReader.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreReader.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreWriter.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreWriter.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTLoadBundleStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTLoadBundleStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTTransactionStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTTransactionStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreExtension.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreExtension.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTQuerySnapshotStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTQuerySnapshotStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTSnapshotsInSyncStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTSnapshotsInSyncStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTDocumentSnapshotStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTDocumentSnapshotStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FirestoreMessages.g.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FirestoreMessages.g.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FirestorePigeonParser.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FirestorePigeonParser.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreUtils.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreUtils.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestorePlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestorePlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreReader.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreReader.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreWriter.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreWriter.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTLoadBundleStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTLoadBundleStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTTransactionStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTTransactionStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreExtension.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreExtension.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTQuerySnapshotStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTQuerySnapshotStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTSnapshotsInSyncStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTSnapshotsInSyncStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTDocumentSnapshotStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Sources/cloud_firestore/FLTDocumentSnapshotStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Package.swift b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore/Package.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore.podspec b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/cloud_firestore.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/generated_firebase_sdk_version.txt b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/ios/generated_firebase_sdk_version.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/utils/codec_utility.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/utils/codec_utility.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/query.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/query.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/filters.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/filters.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/firestore.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/firestore.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/field_value.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/field_value.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/transaction.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/transaction.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/write_batch.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/write_batch.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/query_snapshot.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/query_snapshot.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/aggregate_query.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/aggregate_query.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/document_change.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/document_change.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/load_bundle_task.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/load_bundle_task.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/document_snapshot.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/document_snapshot.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/snapshot_metadata.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/snapshot_metadata.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/document_reference.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/document_reference.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/collection_reference.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/collection_reference.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/query_document_snapshot.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/query_document_snapshot.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/aggregate_query_snapshot.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/aggregate_query_snapshot.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/load_bundle_task_snapshot.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/load_bundle_task_snapshot.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/persistent_cache_index_manager.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/src/persistent_cache_index_manager.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/cloud_firestore.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/lib/cloud_firestore.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/mock.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/mock.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/query_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/query_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/field_value_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/field_value_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/cloud_firestore_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/cloud_firestore_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/collection_reference_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/collection_reference_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/test_firestore_message_codec.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/test/test_firestore_message_codec.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FirestoreMessages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FirestoreMessages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FLTFirebaseFirestorePlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/FLTFirebaseFirestorePlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/CustomPigeonHeaderFirestore.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Public/CustomPigeonHeaderFirestore.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FirestorePigeonParser.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FirestorePigeonParser.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreUtils.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreUtils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreReader.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreReader.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreWriter.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreWriter.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTLoadBundleStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTLoadBundleStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTTransactionStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTTransactionStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreExtension.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTFirebaseFirestoreExtension.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTQuerySnapshotStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTQuerySnapshotStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTSnapshotsInSyncStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTSnapshotsInSyncStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTDocumentSnapshotStreamHandler.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/include/cloud_firestore/Private/FLTDocumentSnapshotStreamHandler.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FirestoreMessages.g.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FirestoreMessages.g.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FirestorePigeonParser.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FirestorePigeonParser.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreUtils.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreUtils.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestorePlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestorePlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreReader.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreReader.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreWriter.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreWriter.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTLoadBundleStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTLoadBundleStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTTransactionStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTTransactionStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreExtension.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTFirebaseFirestoreExtension.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTQuerySnapshotStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTQuerySnapshotStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTSnapshotsInSyncStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTSnapshotsInSyncStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTDocumentSnapshotStreamHandler.m b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Sources/cloud_firestore/FLTDocumentSnapshotStreamHandler.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Package.swift b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore/Package.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore.podspec b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/macos/cloud_firestore.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/utils/PigeonParser.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/utils/PigeonParser.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/utils/ExceptionConverter.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/utils/ExceptionConverter.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/utils/ServerTimestampBehaviorConverter.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/utils/ServerTimestampBehaviorConverter.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/LoadBundleStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/LoadBundleStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/TransactionStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/TransactionStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/OnTransactionResultListener.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/OnTransactionResultListener.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/QuerySnapshotsStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/QuerySnapshotsStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/SnapshotsInSyncStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/SnapshotsInSyncStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/DocumentSnapshotsStreamHandler.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/streamhandler/DocumentSnapshotsStreamHandler.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestorePlugin.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestorePlugin.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreException.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreException.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreExtension.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreExtension.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreRegistrar.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreRegistrar.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/GeneratedAndroidFirebaseFirestore.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/GeneratedAndroidFirebaseFirestore.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreMessageCodec.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreMessageCodec.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreTransactionResult.java b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/java/io/flutter/plugins/firebase/firestore/FlutterFirebaseFirestoreTransactionResult.java
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/user-agent.gradle b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/android/user-agent.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/dartpad/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/dartpad/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/dartpad/dartpad_metadata.yaml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/dartpad/dartpad_metadata.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Base.lproj/Main.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Base.lproj/Main.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Base.lproj/LaunchScreen.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Base.lproj/LaunchScreen.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/GoogleService-Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/GoogleService-Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Runner-Bridging-Header.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Runner-Bridging-Header.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Flutter/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Flutter/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Flutter/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Flutter/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Flutter/AppFrameworkInfo.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Flutter/AppFrameworkInfo.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/firebase_app_id_file.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/firebase_app_id_file.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/lib/firebase_options.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/lib/firebase_options.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/index.html b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/index.html
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/manifest.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/manifest.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/wasm_index.html b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/wasm_index.html
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/AppInfo.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/AppInfo.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/Warnings.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Configs/Warnings.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Base.lproj/MainMenu.xib b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Base.lproj/MainMenu.xib
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Release.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Release.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/MainFlutterWindow.swift b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/MainFlutterWindow.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/GoogleService-Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/GoogleService-Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/DebugProfile.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/DebugProfile.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Flutter/Flutter-Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Flutter/Flutter-Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Flutter/Flutter-Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Flutter/Flutter-Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/RunnerTests/RunnerTests.swift b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/RunnerTests/RunnerTests.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/firebase_app_id_file.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/firebase_app_id_file.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/values/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/values/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/drawable/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/drawable/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/drawable-v21/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/drawable-v21/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/values-night/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/values-night/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/kotlin/io/flutter/plugins/firebase/firestore/example/MainActivity.kt b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/kotlin/io/flutter/plugins/firebase/firestore/example/MainActivity.kt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/debug/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/debug/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/profile/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/profile/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/google-services.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/google-services.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/test_driver/integration_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/test_driver/integration_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/firebase.json b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/firebase.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/e2e_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/e2e_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/query_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/query_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/instance_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/instance_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/settings_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/settings_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/geo_point_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/geo_point_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/timestamp_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/timestamp_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/field_value_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/field_value_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/load_bundle_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/load_bundle_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/second_database.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/second_database.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/transaction_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/transaction_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/write_batch_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/write_batch_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/firebase_options.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/firebase_options.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/vector_value_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/vector_value_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/document_change_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/document_change_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/snapshot_metadata_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/snapshot_metadata_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/document_reference_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/document_reference_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/web_snapshot_listeners.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/web_snapshot_listeners.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/collection_reference_e2e.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/collection_reference_e2e.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/firebase_options_secondary.dart b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/integration_test/firebase_options_secondary.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/test/cloud_firestore_plugin_test.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/test/cloud_firestore_plugin_test.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/include/cloud_firestore/cloud_firestore_plugin_c_api.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/include/cloud_firestore/cloud_firestore_plugin_c_api.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/messages.g.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/messages.g.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/firestore_codec.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/firestore_codec.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/firestore_codec.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/firestore_codec.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/plugin_version.h.in b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/plugin_version.h.in
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/cloud_firestore_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/cloud_firestore_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/cloud_firestore_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/cloud_firestore_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/cloud_firestore_plugin_c_api.cpp b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/windows/cloud_firestore_plugin_c_api.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/README.md b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.m b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/FlutterLocalizationPlugin.m
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/SwiftFlutterLocalizationPlugin.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/Classes/SwiftFlutterLocalizationPlugin.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/flutter_localization.podspec b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/ios/flutter_localization.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/data/language_name.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/data/language_name.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/map_locale.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/map_locale.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/ensure_initialized_exception.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/model/ensure_initialized_exception.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/string_util.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/string_util.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/preference_util.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/utility/preference_util.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/locale_extension.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/locale_extension.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/string_extension.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/string_extension.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/context_extension.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/extension/context_extension.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_delegate.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_delegate.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_translator.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/src/localization/flutter_localization_translator.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_web.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_web.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_method_channel.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_method_channel.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_platform_interface.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/lib/flutter_localization_platform_interface.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/include/flutter_localization/flutter_localization_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/include/flutter_localization/flutter_localization_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/flutter_localization_plugin.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/linux/flutter_localization_plugin.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/Classes/FlutterLocalizationPlugin.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/Classes/FlutterLocalizationPlugin.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/flutter_localization.podspec b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/macos/flutter_localization.podspec
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/kotlin/com/mastertipsy/flutter_localization/FlutterLocalizationPlugin.kt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/kotlin/com/mastertipsy/flutter_localization/FlutterLocalizationPlugin.kt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/Main.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/Main.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/LaunchScreen.storyboard b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Base.lproj/LaunchScreen.storyboard
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Runner-Bridging-Header.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Runner-Bridging-Header.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/AppFrameworkInfo.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Flutter/AppFrameworkInfo.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/RunnerTests/RunnerTests.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/RunnerTests/RunnerTests.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/index.html b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/index.html
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/manifest.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/manifest.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/main.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/main.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/runner/my_application.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/main.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/main.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/linux/my_application.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/AppInfo.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/AppInfo.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Warnings.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Configs/Warnings.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Base.lproj/MainMenu.xib b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Base.lproj/MainMenu.xib
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Info.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Info.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/AppDelegate.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/AppDelegate.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Release.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Release.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/MainFlutterWindow.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/MainFlutterWindow.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/DebugProfile.entitlements b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/DebugProfile.entitlements
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Debug.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Debug.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Release.xcconfig b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Flutter/Flutter-Release.xcconfig
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Podfile b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Podfile
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/RunnerTests/RunnerTests.swift b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/RunnerTests/RunnerTests.swift
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.pbxproj b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.pbxproj
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/contents.xcworkspacedata b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner.xcworkspace/contents.xcworkspacedata
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable-v21/launch_background.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/drawable-v21/launch_background.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values-night/styles.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/values-night/styles.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/kotlin/com/mastertipsy/flutter_localization_example/MainActivity.kt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/kotlin/com/mastertipsy/flutter_localization_example/MainActivity.kt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/debug/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/debug/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/profile/AndroidManifest.xml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/profile/AndroidManifest.xml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle/wrapper/gradle-wrapper.properties b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/build.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/build.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/settings.gradle b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/settings.gradle
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle.properties b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/gradle.properties
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/include/flutter_localization/flutter_localization_plugin_c_api.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/include/flutter_localization/flutter_localization_plugin_c_api.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin_c_api.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/windows/flutter_localization_plugin_c_api.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/lib/image_picker_windows.dart b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/lib/image_picker_windows.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/test/image_picker_windows_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/test/image_picker_windows_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/test/image_picker_windows_test.mocks.dart b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/test/image_picker_windows_test.mocks.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/AUTHORS b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/AUTHORS
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/flutter/generated_plugins.cmake b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/README.md b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/lib/src/messages.g.dart b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/lib/src/messages.g.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/lib/url_launcher_windows.dart b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/lib/url_launcher_windows.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/test/url_launcher_windows_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/test/url_launcher_windows_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/AUTHORS b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/AUTHORS
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/run_loop.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/run_loop.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/run_loop.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/run_loop.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/flutter/generated_plugins.cmake b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/test_driver/integration_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/test_driver/integration_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/integration_test/url_launcher_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/integration_test/url_launcher_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/pigeons/copyright.txt b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/pigeons/copyright.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/pigeons/messages.dart b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/pigeons/messages.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/test/url_launcher_windows_test.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/test/url_launcher_windows_test.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/include/url_launcher_windows/url_launcher_windows.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/include/url_launcher_windows/url_launcher_windows.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/system_apis.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/system_apis.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/messages.g.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/messages.g.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/system_apis.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/system_apis.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/url_launcher_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/url_launcher_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/url_launcher_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/url_launcher_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/url_launcher_windows.cpp b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/windows/url_launcher_windows.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/README.md b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/lib/src/messages.g.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/lib/src/messages.g.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/lib/file_selector_windows.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/lib/file_selector_windows.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/test/test_api.g.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/test/test_api.g.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/test/file_selector_windows_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/test/file_selector_windows_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/test/file_selector_windows_test.mocks.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/test/file_selector_windows_test.mocks.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/AUTHORS b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/AUTHORS
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/home_page.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/home_page.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/open_text_page.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/open_text_page.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/save_text_page.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/save_text_page.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/open_image_page.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/open_image_page.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/get_directory_page.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/get_directory_page.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/open_multiple_images_page.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/open_multiple_images_page.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/get_multiple_directories_page.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/lib/get_multiple_directories_page.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/flutter/generated_plugins.cmake b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/pigeons/copyright.txt b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/pigeons/copyright.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/pigeons/messages.dart b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/pigeons/messages.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_utils.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/file_selector_plugin_test.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/file_selector_plugin_test.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_file_dialog_controller.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_file_dialog_controller.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_file_dialog_controller.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/test/test_file_dialog_controller.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/include/file_selector_windows/file_selector_windows.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/include/file_selector_windows/file_selector_windows.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/messages.g.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/messages.g.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/messages.g.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/messages.g.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/string_utils.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/string_utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/string_utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/string_utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_selector_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_selector_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_dialog_controller.h b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_dialog_controller.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_selector_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_selector_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_selector_windows.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_selector_windows.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_dialog_controller.cpp b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/windows/file_dialog_controller.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/README.md b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/guid.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/guid.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/folders.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/folders.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/folders_stub.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/folders_stub.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/win32_wrappers.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/win32_wrappers.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/path_provider_windows_real.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/path_provider_windows_real.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/path_provider_windows_stub.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/src/path_provider_windows_stub.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/path_provider_windows.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/lib/path_provider_windows.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/test/guid_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/test/guid_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/test/path_provider_windows_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/test/path_provider_windows_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/AUTHORS b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/AUTHORS
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/run_loop.h b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/run_loop.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/run_loop.cpp b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/run_loop.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/flutter/generated_plugins.cmake b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/test_driver/integration_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/test_driver/integration_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/integration_test/path_provider_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/integration_test/path_provider_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/README.md b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/lib/shared_preferences_windows.dart b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/lib/shared_preferences_windows.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/test/fake_path_provider_windows.dart b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/test/fake_path_provider_windows.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/test/shared_preferences_windows_async_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/test/shared_preferences_windows_async_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/test/legacy_shared_preferences_windows_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/test/legacy_shared_preferences_windows_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/AUTHORS b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/AUTHORS
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/AUTHORS b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/AUTHORS
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/run_loop.h b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/run_loop.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/run_loop.cpp b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/run_loop.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/flutter/generated_plugins.cmake b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/test_driver/integration_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/test_driver/integration_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/integration_test/shared_preferences_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/integration_test/shared_preferences_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/README.md b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/print_job/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/print_job/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/print_job/print_job_controller.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/print_job/print_job_controller.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/web_message_port.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/web_message_port.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/web_message_channel.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/web_message_channel.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/web_message_listener.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_message/web_message_listener.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_storage/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_storage/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_storage/web_storage.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_storage/web_storage.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_storage/web_storage_manager.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/web_storage/web_storage_manager.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_browser/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_browser/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_browser/in_app_browser.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_browser/in_app_browser.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/in_app_webview.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/in_app_webview.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/_static_channel.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/_static_channel.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/custom_platform_view.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/custom_platform_view.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/headless_in_app_webview.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/headless_in_app_webview.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/in_app_webview_controller.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/in_app_webview/in_app_webview_controller.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/find_interaction/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/find_interaction/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/find_interaction/find_interaction_controller.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/find_interaction/find_interaction_controller.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/platform_util.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/platform_util.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/cookie_manager.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/cookie_manager.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/webview_environment/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/webview_environment/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/webview_environment/webview_environment.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/webview_environment/webview_environment.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/inappwebview_platform.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/inappwebview_platform.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/http_auth_credentials_database.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/src/http_auth_credentials_database.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/flutter_inappwebview_windows.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/lib/flutter_inappwebview_windows.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/test/flutter_inappwebview_windows_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/test/flutter_inappwebview_windows_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/lib/main.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/lib/main.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/test/widget_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/test/widget_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/utils.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/utils.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/main.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/main.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/Runner.rc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/Runner.rc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/utils.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/utils.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/resource.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/resource.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/win32_window.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/win32_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/flutter_window.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/flutter_window.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/flutter_window.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/flutter_window.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/runner.exe.manifest b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/runner.exe.manifest
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/generated_plugins.cmake b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/generated_plugins.cmake
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/generated_plugin_registrant.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/generated_plugin_registrant.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/generated_plugin_registrant.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/flutter/generated_plugin_registrant.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/integration_test/plugin_integration_test.dart b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/integration_test/plugin_integration_test.dart
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/LICENSE b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/LICENSE
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/test/flutter_inappwebview_windows_plugin_test.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/test/flutter_inappwebview_windows_plugin_test.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/rect.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/rect.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/rect.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/rect.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/size_2d.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/size_2d.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/size_2d.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/size_2d.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/url_request.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/url_request.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/user_script.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/user_script.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/content_world.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/content_world.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/plugin_script.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/plugin_script.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/url_request.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/url_request.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/user_script.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/user_script.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/content_world.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/content_world.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/plugin_script.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/plugin_script.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/ssl_certificate.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/ssl_certificate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/window_features.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/window_features.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/channel_delegate.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/channel_delegate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history_item.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history_item.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/navigation_action.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/navigation_action.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/ssl_certificate.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/ssl_certificate.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/window_features.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/window_features.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/callbacks_complete.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/callbacks_complete.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/channel_delegate.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/channel_delegate.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history_item.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_history_item.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_error.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_error.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/navigation_action.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/navigation_action.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/permission_response.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/permission_response.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/base_callback_result.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/base_callback_result.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/create_window_action.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/create_window_action.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_error.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_error.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_request.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_request.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/permission_response.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/permission_response.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_response.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_response.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/create_window_action.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/create_window_action.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_response.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_response.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_request.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_request.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_response.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/web_resource_response.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_response.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_response.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/screenshot_configuration.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/screenshot_configuration.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/new_window_requested_args.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/new_window_requested_args.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_registration.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_registration.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/screenshot_configuration.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/screenshot_configuration.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/new_window_requested_args.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/new_window_requested_args.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_registration.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/types/custom_scheme_registration.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/log.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/log.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/map.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/map.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/util.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/util.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/base64.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/base64.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/string.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/string.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/vector.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/vector.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/flutter.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/flutter.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/strconv.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/strconv.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/base64.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/utils/base64.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/include/flutter_inappwebview_windows/flutter_inappwebview_windows_plugin_c_api.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/include/flutter_inappwebview_windows/flutter_inappwebview_windows_plugin_c_api.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/CMakeLists.txt b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_manager.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_manager.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_settings.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_settings.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_manager.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_manager.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_settings.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_settings.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_channel_delegate.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_channel_delegate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_channel_delegate.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_browser/in_app_browser_channel_delegate.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_manager.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_manager.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_settings.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_settings.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/user_content_controller.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/user_content_controller.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_manager.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_manager.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/webview_channel_delegate.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/webview_channel_delegate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_settings.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/in_app_webview_settings.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/user_content_controller.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/user_content_controller.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/webview_channel_delegate.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/in_app_webview/webview_channel_delegate.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/cookie_manager.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/cookie_manager.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/plugin_scripts_js/plugin_scripts_util.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/plugin_scripts_js/plugin_scripts_util.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/plugin_scripts_js/javascript_bridge_js.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/plugin_scripts_js/javascript_bridge_js.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/plugin_scripts_js/javascript_bridge_js.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/plugin_scripts_js/javascript_bridge_js.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/cookie_manager.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/cookie_manager.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_manager.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_manager.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_settings.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_settings.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_manager.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_manager.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_settings.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_settings.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_channel_delegate.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_channel_delegate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_channel_delegate.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/webview_environment/webview_environment_channel_delegate.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/cpuinfo_impl.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/cpuinfo_impl.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/init_unknown.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/init_unknown.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/init_msvc_x86.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/init_msvc_x86.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/extract_x86_flags.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/detail/extract_x86_flags.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/cpuinfo.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/cpuinfo.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/cpuinfo.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/cpuid/cpuinfo.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/d3dutil.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/d3dutil.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/swizzle.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/swizzle.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/rohelper.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/rohelper.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/string_converter.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/string_converter.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/string_converter.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/string_converter.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/direct3d11.interop.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/direct3d11.interop.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/composition.desktop.interop.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/util/composition.desktop.interop.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/graphics_context.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/graphics_context.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/graphics_context.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/graphics_context.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_gpu.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_gpu.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_gpu.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_gpu.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/custom_platform_view.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/custom_platform_view.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/custom_platform_view.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/custom_platform_view.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_fallback.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_fallback.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_fallback.cc b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/custom_platform_view/texture_bridge_fallback.cc
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview_manager.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview_manager.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview_manager.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_in_app_webview_manager.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_webview_channel_delegate.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_webview_channel_delegate.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_webview_channel_delegate.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/headless_in_app_webview/headless_webview_channel_delegate.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/flutter_inappwebview_windows_plugin.h b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/flutter_inappwebview_windows_plugin.h
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/flutter_inappwebview_windows_plugin.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/flutter_inappwebview_windows_plugin.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/flutter_inappwebview_windows_plugin_c_api.cpp b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/windows/flutter_inappwebview_windows_plugin_c_api.cpp
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/README.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/README.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/CHANGELOG.md b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/CHANGELOG.md
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/pubspec.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/pubspec.yaml
new file mode 100644
diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/analysis_options.yaml b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/analysis_options.yaml
new file mode 100644
diff --git a/windows/flutter/CMakeLists.txt b/windows/flutter/CMakeLists.txt
new file mode 100644
diff --git a/windows/flutter/generated_plugin_registrant.h b/windows/flutter/generated_plugin_registrant.h
new file mode 100644
diff --git a/windows/.gitignore b/windows/.gitignore
new file mode 100644
diff --git a/.flutter-plugins b/.flutter-plugins
new file mode 100644
diff --git a/.flutter-plugins-dependencies b/.flutter-plugins-dependencies
new file mode 100644
diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png b/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png b/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png b/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/lib/shared/images/app_logo.png b/lib/shared/images/app_logo.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/lib/shared/images/google_icon.png b/lib/shared/images/google_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/web/icons/Icon-192.png b/web/icons/Icon-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/web/icons/Icon-512.png b/web/icons/Icon-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/web/icons/Icon-maskable-192.png b/web/icons/Icon-maskable-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/web/icons/Icon-maskable-512.png b/web/icons/Icon-maskable-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/web/favicon.png b/web/favicon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-192.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-512.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-192.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-512.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/favicon.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/favicon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resources/app_icon.ico b/linux/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png b/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png b/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png b/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png b/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png b/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png b/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png b/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin b/android/app/.cxx/Debug/63r183e1/x86/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86/configure_fingerprint.bin b/android/app/.cxx/Debug/63r183e1/x86/configure_fingerprint.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin b/android/app/.cxx/Debug/63r183e1/x86_64/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/x86_64/configure_fingerprint.bin b/android/app/.cxx/Debug/63r183e1/x86_64/configure_fingerprint.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin b/android/app/.cxx/Debug/63r183e1/arm64-v8a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/arm64-v8a/configure_fingerprint.bin b/android/app/.cxx/Debug/63r183e1/arm64-v8a/configure_fingerprint.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdC/CMakeCCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CompilerIdCXX/CMakeCXXCompilerId.o
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_C.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/CMakeFiles/3.22.1-g37088a8-dirty/CMakeDetermineCompilerABI_CXX.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/app/.cxx/Debug/63r183e1/armeabi-v7a/configure_fingerprint.bin b/android/app/.cxx/Debug/63r183e1/armeabi-v7a/configure_fingerprint.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/gradle/wrapper/gradle-wrapper.jar b/android/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/8.10.2/checksums/checksums.lock b/android/.gradle/8.10.2/checksums/checksums.lock
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/8.10.2/fileHashes/fileHashes.bin b/android/.gradle/8.10.2/fileHashes/fileHashes.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/8.10.2/fileHashes/fileHashes.lock b/android/.gradle/8.10.2/fileHashes/fileHashes.lock
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/8.10.2/fileHashes/resourceHashesCache.bin b/android/.gradle/8.10.2/fileHashes/resourceHashesCache.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/8.10.2/fileChanges/last-build.bin b/android/.gradle/8.10.2/fileChanges/last-build.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/8.10.2/executionHistory/executionHistory.bin b/android/.gradle/8.10.2/executionHistory/executionHistory.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/8.10.2/executionHistory/executionHistory.lock b/android/.gradle/8.10.2/executionHistory/executionHistory.lock
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/noVersion/buildLogic.lock b/android/.gradle/noVersion/buildLogic.lock
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/file-system.probe b/android/.gradle/file-system.probe
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/buildOutputCleanup/outputFiles.bin b/android/.gradle/buildOutputCleanup/outputFiles.bin
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock b/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/runner/resources/app_icon.ico b/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/icons/Icon-192.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/icons/Icon-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/icons/Icon-512.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/icons/Icon-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/favicon.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/web/favicon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-100.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-100.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-125.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-125.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-150.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-150.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-400.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/WideTile.scale-400.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-100.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-100.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-125.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-125.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-150.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-150.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-400.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LargeTile.scale-400.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-100.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-100.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-125.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-125.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-150.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-150.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-400.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SmallTile.scale-400.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-100.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-100.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-125.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-125.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-150.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-150.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-400.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/StoreLogo.scale-400.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-100.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-100.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-125.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-125.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-150.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-150.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-400.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/SplashScreen.scale-400.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LockScreenLogo.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/LockScreenLogo.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-100.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-100.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-125.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-125.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-150.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-150.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-400.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.scale-400.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Wide310x150Logo.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Wide310x150Logo.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-100.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-100.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-125.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-125.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-150.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-150.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-200.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-200.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-400.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square150x150Logo.scale-400.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-16.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-24.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-24.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-32.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-48.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-48.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-256.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-16.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-32.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-48.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-48.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-24_altform-unplated.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.targetsize-24_altform-unplated.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-256.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Assets/Square44x44Logo.altform-unplated_targetsize-256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/resources.pri b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/resources.pri
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Windows_TemporaryKey.pfx b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/winuwp/runner_uwp/Windows_TemporaryKey.pfx
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/flutter_tts/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-192.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-512.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-maskable-192.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-maskable-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-maskable-512.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/icons/Icon-maskable-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/favicon.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/web/favicon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/firebase_auth/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-192.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-512.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-maskable-192.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-maskable-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-maskable-512.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/icons/Icon-maskable-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/favicon.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/web/favicon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/firebase_core/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-192.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-512.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-maskable-192.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-maskable-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-maskable-512.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/icons/Icon-maskable-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/favicon.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/web/favicon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/cloud_firestore/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-192.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-512.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-192.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-192.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-512.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/icons/Icon-maskable-512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/favicon.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/web/favicon.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_16.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_32.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_64.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_128.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_256.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_512.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/macos/Runner/Assets.xcassets/AppIcon.appiconset/app_icon_1024.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/flutter_localization/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/image_picker_windows/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/url_launcher_windows/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/path_provider_windows/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/shared_preferences_windows/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/resources/app_icon.ico b/windows/flutter/ephemeral/.plugin_symlinks/flutter_inappwebview_windows/example/windows/runner/resources/app_icon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

